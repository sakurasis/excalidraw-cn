{"ast":null,"code":"import { exportCanvas } from \".\";\nimport { getNonDeletedElements } from \"../element\";\nimport { getFileHandleType, isImageFileHandleType } from \"./blob\";\nexport const resaveAsImageWithScene = async (elements, appState, files) => {\n  const {\n    exportBackground,\n    viewBackgroundColor,\n    name,\n    fileHandle\n  } = appState;\n  const fileHandleType = getFileHandleType(fileHandle);\n  if (!fileHandle || !isImageFileHandleType(fileHandleType)) {\n    throw new Error(\"fileHandle should exist and should be of type svg or png when resaving\");\n  }\n  appState = {\n    ...appState,\n    exportEmbedScene: true\n  };\n  await exportCanvas(fileHandleType, getNonDeletedElements(elements), appState, files, {\n    exportBackground,\n    viewBackgroundColor,\n    name,\n    fileHandle\n  });\n  return {\n    fileHandle\n  };\n};","map":{"version":3,"names":["exportCanvas","getNonDeletedElements","getFileHandleType","isImageFileHandleType","resaveAsImageWithScene","elements","appState","files","exportBackground","viewBackgroundColor","name","fileHandle","fileHandleType","Error","exportEmbedScene"],"sources":["D:/project/excalidraw-cn/src/data/resave.ts"],"sourcesContent":["import { ExcalidrawElement } from \"../element/types\";\nimport { AppState, BinaryFiles } from \"../types\";\nimport { exportCanvas } from \".\";\nimport { getNonDeletedElements } from \"../element\";\nimport { getFileHandleType, isImageFileHandleType } from \"./blob\";\n\nexport const resaveAsImageWithScene = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  files: BinaryFiles,\n) => {\n  const { exportBackground, viewBackgroundColor, name, fileHandle } = appState;\n\n  const fileHandleType = getFileHandleType(fileHandle);\n\n  if (!fileHandle || !isImageFileHandleType(fileHandleType)) {\n    throw new Error(\n      \"fileHandle should exist and should be of type svg or png when resaving\",\n    );\n  }\n  appState = {\n    ...appState,\n    exportEmbedScene: true,\n  };\n\n  await exportCanvas(\n    fileHandleType,\n    getNonDeletedElements(elements),\n    appState,\n    files,\n    {\n      exportBackground,\n      viewBackgroundColor,\n      name,\n      fileHandle,\n    },\n  );\n\n  return { fileHandle };\n};\n"],"mappings":"AAEA,SAASA,YAAY,QAAQ,GAAG;AAChC,SAASC,qBAAqB,QAAQ,YAAY;AAClD,SAASC,iBAAiB,EAAEC,qBAAqB,QAAQ,QAAQ;AAEjE,OAAO,MAAMC,sBAAsB,GAAG,MAAAA,CACpCC,QAAsC,EACtCC,QAAkB,EAClBC,KAAkB,KACf;EACH,MAAM;IAAEC,gBAAgB;IAAEC,mBAAmB;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAGL,QAAQ;EAE5E,MAAMM,cAAc,GAAGV,iBAAiB,CAACS,UAAU,CAAC;EAEpD,IAAI,CAACA,UAAU,IAAI,CAACR,qBAAqB,CAACS,cAAc,CAAC,EAAE;IACzD,MAAM,IAAIC,KAAK,CACb,wEAAwE,CACzE;EACH;EACAP,QAAQ,GAAG;IACT,GAAGA,QAAQ;IACXQ,gBAAgB,EAAE;EACpB,CAAC;EAED,MAAMd,YAAY,CAChBY,cAAc,EACdX,qBAAqB,CAACI,QAAQ,CAAC,EAC/BC,QAAQ,EACRC,KAAK,EACL;IACEC,gBAAgB;IAChBC,mBAAmB;IACnBC,IAAI;IACJC;EACF,CAAC,CACF;EAED,OAAO;IAAEA;EAAW,CAAC;AACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}