{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\TextField.tsx\";\nimport { forwardRef, useRef, useImperativeHandle, useLayoutEffect } from \"react\";\nimport clsx from \"clsx\";\nimport \"./TextField.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextField = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    value,\n    onChange,\n    label,\n    fullWidth,\n    placeholder,\n    readonly,\n    selectOnRender,\n    onKeyDown\n  } = _ref;\n  const innerRef = useRef(null);\n  useImperativeHandle(ref, () => innerRef.current);\n  useLayoutEffect(() => {\n    if (selectOnRender) {\n      var _innerRef$current;\n      (_innerRef$current = innerRef.current) === null || _innerRef$current === void 0 ? void 0 : _innerRef$current.select();\n    }\n  }, [selectOnRender]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(\"ExcTextField\", {\n      \"ExcTextField--fullWidth\": fullWidth\n    }),\n    onClick: () => {\n      var _innerRef$current2;\n      (_innerRef$current2 = innerRef.current) === null || _innerRef$current2 === void 0 ? void 0 : _innerRef$current2.focus();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ExcTextField__label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(\"ExcTextField__input\", {\n        \"ExcTextField__input--readonly\": readonly\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: readonly,\n        type: \"text\",\n        value: value,\n        placeholder: placeholder,\n        ref: innerRef,\n        onChange: event => onChange === null || onChange === void 0 ? void 0 : onChange(event.target.value),\n        onKeyDown: onKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n});","map":{"version":3,"names":["forwardRef","useRef","useImperativeHandle","useLayoutEffect","clsx","jsxDEV","_jsxDEV","TextField","_ref","ref","value","onChange","label","fullWidth","placeholder","readonly","selectOnRender","onKeyDown","innerRef","current","_innerRef$current","select","className","onClick","_innerRef$current2","focus","children","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","type","event","target"],"sources":["D:/project/excalidraw-cn/src/components/TextField.tsx"],"sourcesContent":["import {\n  forwardRef,\n  useRef,\n  useImperativeHandle,\n  KeyboardEvent,\n  useLayoutEffect,\n} from \"react\";\nimport clsx from \"clsx\";\n\nimport \"./TextField.scss\";\n\nexport type TextFieldProps = {\n  value?: string;\n\n  onChange?: (value: string) => void;\n  onClick?: () => void;\n  onKeyDown?: (event: KeyboardEvent<HTMLInputElement>) => void;\n\n  readonly?: boolean;\n  fullWidth?: boolean;\n  selectOnRender?: boolean;\n\n  label?: string;\n  placeholder?: string;\n};\n\nexport const TextField = forwardRef<HTMLInputElement, TextFieldProps>(\n  (\n    {\n      value,\n      onChange,\n      label,\n      fullWidth,\n      placeholder,\n      readonly,\n      selectOnRender,\n      onKeyDown,\n    },\n    ref,\n  ) => {\n    const innerRef = useRef<HTMLInputElement | null>(null);\n\n    useImperativeHandle(ref, () => innerRef.current!);\n\n    useLayoutEffect(() => {\n      if (selectOnRender) {\n        innerRef.current?.select();\n      }\n    }, [selectOnRender]);\n\n    return (\n      <div\n        className={clsx(\"ExcTextField\", {\n          \"ExcTextField--fullWidth\": fullWidth,\n        })}\n        onClick={() => {\n          innerRef.current?.focus();\n        }}\n      >\n        <div className=\"ExcTextField__label\">{label}</div>\n        <div\n          className={clsx(\"ExcTextField__input\", {\n            \"ExcTextField__input--readonly\": readonly,\n          })}\n        >\n          <input\n            readOnly={readonly}\n            type=\"text\"\n            value={value}\n            placeholder={placeholder}\n            ref={innerRef}\n            onChange={(event) => onChange?.(event.target.value)}\n            onKeyDown={onKeyDown}\n          />\n        </div>\n      </div>\n    );\n  },\n);\n"],"mappings":";AAAA,SACEA,UAAU,EACVC,MAAM,EACNC,mBAAmB,EAEnBC,eAAe,QACV,OAAO;AACd,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiB1B,OAAO,MAAMC,SAAS,gBAAGP,UAAU,CACjC,CAAAQ,IAAA,EAWEC,GAAG,KACA;EAAA,IAXH;IACEC,KAAK;IACLC,QAAQ;IACRC,KAAK;IACLC,SAAS;IACTC,WAAW;IACXC,QAAQ;IACRC,cAAc;IACdC;EACF,CAAC,GAAAT,IAAA;EAGD,MAAMU,QAAQ,GAAGjB,MAAM,CAA0B,IAAI,CAAC;EAEtDC,mBAAmB,CAACO,GAAG,EAAE,MAAMS,QAAQ,CAACC,OAAQ,CAAC;EAEjDhB,eAAe,CAAC,MAAM;IACpB,IAAIa,cAAc,EAAE;MAAA,IAAAI,iBAAA;MAClB,CAAAA,iBAAA,GAAAF,QAAQ,CAACC,OAAO,cAAAC,iBAAA,uBAAhBA,iBAAA,CAAkBC,MAAM,EAAE;IAC5B;EACF,CAAC,EAAE,CAACL,cAAc,CAAC,CAAC;EAEpB,oBACEV,OAAA;IACEgB,SAAS,EAAElB,IAAI,CAAC,cAAc,EAAE;MAC9B,yBAAyB,EAAES;IAC7B,CAAC,CAAE;IACHU,OAAO,EAAEA,CAAA,KAAM;MAAA,IAAAC,kBAAA;MACb,CAAAA,kBAAA,GAAAN,QAAQ,CAACC,OAAO,cAAAK,kBAAA,uBAAhBA,kBAAA,CAAkBC,KAAK,EAAE;IAC3B,CAAE;IAAAC,QAAA,gBAEFpB,OAAA;MAAKgB,SAAS,EAAC,qBAAqB;MAAAI,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAClDxB,OAAA;MACEgB,SAAS,EAAElB,IAAI,CAAC,qBAAqB,EAAE;QACrC,+BAA+B,EAAEW;MACnC,CAAC,CAAE;MAAAW,QAAA,eAEHpB,OAAA;QACEyB,QAAQ,EAAEhB,QAAS;QACnBiB,IAAI,EAAC,MAAM;QACXtB,KAAK,EAAEA,KAAM;QACbI,WAAW,EAAEA,WAAY;QACzBL,GAAG,EAAES,QAAS;QACdP,QAAQ,EAAGsB,KAAK,IAAKtB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGsB,KAAK,CAACC,MAAM,CAACxB,KAAK,CAAE;QACpDO,SAAS,EAAEA;MAAU;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACrB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}