{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\FilledButton.tsx\";\nimport React, { forwardRef } from \"react\";\nimport clsx from \"clsx\";\nimport \"./FilledButton.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilledButton = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    children,\n    startIcon,\n    onClick,\n    label,\n    variant = \"filled\",\n    color = \"primary\",\n    size = \"medium\",\n    fullWidth,\n    className\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: clsx(\"ExcButton\", `ExcButton--color-${color}`, `ExcButton--variant-${variant}`, `ExcButton--size-${size}`, {\n      \"ExcButton--fullWidth\": fullWidth\n    }, className),\n    onClick: onClick,\n    type: \"button\",\n    \"aria-label\": label,\n    ref: ref,\n    children: [startIcon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ExcButton__icon\",\n      \"aria-hidden\": true,\n      children: startIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), variant !== \"icon\" && (children !== null && children !== void 0 ? children : label)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n});","map":{"version":3,"names":["React","forwardRef","clsx","jsxDEV","_jsxDEV","FilledButton","_ref","ref","children","startIcon","onClick","label","variant","color","size","fullWidth","className","type","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/project/excalidraw-cn/src/components/FilledButton.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport clsx from \"clsx\";\n\nimport \"./FilledButton.scss\";\n\nexport type ButtonVariant = \"filled\" | \"outlined\" | \"icon\";\nexport type ButtonColor = \"primary\" | \"danger\" | \"warning\" | \"muted\";\nexport type ButtonSize = \"medium\" | \"large\";\n\nexport type FilledButtonProps = {\n  label: string;\n\n  children?: React.ReactNode;\n  onClick?: () => void;\n\n  variant?: ButtonVariant;\n  color?: ButtonColor;\n  size?: ButtonSize;\n  className?: string;\n  fullWidth?: boolean;\n\n  startIcon?: React.ReactNode;\n};\n\nexport const FilledButton = forwardRef<HTMLButtonElement, FilledButtonProps>(\n  (\n    {\n      children,\n      startIcon,\n      onClick,\n      label,\n      variant = \"filled\",\n      color = \"primary\",\n      size = \"medium\",\n      fullWidth,\n      className,\n    },\n    ref,\n  ) => {\n    return (\n      <button\n        className={clsx(\n          \"ExcButton\",\n          `ExcButton--color-${color}`,\n          `ExcButton--variant-${variant}`,\n          `ExcButton--size-${size}`,\n          { \"ExcButton--fullWidth\": fullWidth },\n          className,\n        )}\n        onClick={onClick}\n        type=\"button\"\n        aria-label={label}\n        ref={ref}\n      >\n        {startIcon && (\n          <div className=\"ExcButton__icon\" aria-hidden>\n            {startIcon}\n          </div>\n        )}\n        {variant !== \"icon\" && (children ?? label)}\n      </button>\n    );\n  },\n);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAqB7B,OAAO,MAAMC,YAAY,gBAAGJ,UAAU,CACpC,CAAAK,IAAA,EAYEC,GAAG,KACA;EAAA,IAZH;IACEC,QAAQ;IACRC,SAAS;IACTC,OAAO;IACPC,KAAK;IACLC,OAAO,GAAG,QAAQ;IAClBC,KAAK,GAAG,SAAS;IACjBC,IAAI,GAAG,QAAQ;IACfC,SAAS;IACTC;EACF,CAAC,GAAAV,IAAA;EAGD,oBACEF,OAAA;IACEY,SAAS,EAAEd,IAAI,CACb,WAAW,EACV,oBAAmBW,KAAM,EAAC,EAC1B,sBAAqBD,OAAQ,EAAC,EAC9B,mBAAkBE,IAAK,EAAC,EACzB;MAAE,sBAAsB,EAAEC;IAAU,CAAC,EACrCC,SAAS,CACT;IACFN,OAAO,EAAEA,OAAQ;IACjBO,IAAI,EAAC,QAAQ;IACb,cAAYN,KAAM;IAClBJ,GAAG,EAAEA,GAAI;IAAAC,QAAA,GAERC,SAAS,iBACRL,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAC,mBAAW;MAAAR,QAAA,EACzCC;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEb,EACAT,OAAO,KAAK,MAAM,KAAKJ,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIG,KAAK,CAAC;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnC;AAEb,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}