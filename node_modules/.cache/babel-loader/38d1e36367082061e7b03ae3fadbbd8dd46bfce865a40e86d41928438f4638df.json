{"ast":null,"code":"import _toConsumableArray from \"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { polygonHachureLines } from './scan-line-hachure';\nexport var HachureFiller = /*#__PURE__*/function () {\n  function HachureFiller(helper) {\n    _classCallCheck(this, HachureFiller);\n    this.helper = helper;\n  }\n  _createClass(HachureFiller, [{\n    key: \"fillPolygons\",\n    value: function fillPolygons(polygonList, o) {\n      return this._fillPolygons(polygonList, o);\n    }\n  }, {\n    key: \"_fillPolygons\",\n    value: function _fillPolygons(polygonList, o) {\n      var lines = polygonHachureLines(polygonList, o);\n      var ops = this.renderLines(lines, o);\n      return {\n        type: 'fillSketch',\n        ops: ops\n      };\n    }\n  }, {\n    key: \"renderLines\",\n    value: function renderLines(lines, o) {\n      var ops = [];\n      var _iterator = _createForOfIteratorHelper(lines),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var line = _step.value;\n          ops.push.apply(ops, _toConsumableArray(this.helper.doubleLineOps(line[0][0], line[0][1], line[1][0], line[1][1], o)));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return ops;\n    }\n  }]);\n  return HachureFiller;\n}();","map":{"version":3,"names":["polygonHachureLines","HachureFiller","helper","_classCallCheck","_createClass","key","value","fillPolygons","polygonList","o","_fillPolygons","lines","ops","renderLines","type","_iterator","_createForOfIteratorHelper","_step","s","n","done","line","push","apply","_toConsumableArray","doubleLineOps","err","e","f"],"sources":["D:/project/excalidraw-cn/node_modules/roughjs/bin/fillers/hachure-filler.js"],"sourcesContent":["import { polygonHachureLines } from './scan-line-hachure';\nexport class HachureFiller {\n    constructor(helper) {\n        this.helper = helper;\n    }\n    fillPolygons(polygonList, o) {\n        return this._fillPolygons(polygonList, o);\n    }\n    _fillPolygons(polygonList, o) {\n        const lines = polygonHachureLines(polygonList, o);\n        const ops = this.renderLines(lines, o);\n        return { type: 'fillSketch', ops };\n    }\n    renderLines(lines, o) {\n        const ops = [];\n        for (const line of lines) {\n            ops.push(...this.helper.doubleLineOps(line[0][0], line[0][1], line[1][0], line[1][1], o));\n        }\n        return ops;\n    }\n}\n"],"mappings":";;;;AAAA,SAASA,mBAAmB,QAAQ,qBAAqB;AACzD,WAAaC,aAAa;EACtB,SAAAA,cAAYC,MAAM,EAAE;IAAAC,eAAA,OAAAF,aAAA;IAChB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EAACE,YAAA,CAAAH,aAAA;IAAAI,GAAA;IAAAC,KAAA,EACD,SAAAC,aAAaC,WAAW,EAAEC,CAAC,EAAE;MACzB,OAAO,IAAI,CAACC,aAAa,CAACF,WAAW,EAAEC,CAAC,CAAC;IAC7C;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EACD,SAAAI,cAAcF,WAAW,EAAEC,CAAC,EAAE;MAC1B,IAAME,KAAK,GAAGX,mBAAmB,CAACQ,WAAW,EAAEC,CAAC,CAAC;MACjD,IAAMG,GAAG,GAAG,IAAI,CAACC,WAAW,CAACF,KAAK,EAAEF,CAAC,CAAC;MACtC,OAAO;QAAEK,IAAI,EAAE,YAAY;QAAEF,GAAG,EAAHA;MAAI,CAAC;IACtC;EAAC;IAAAP,GAAA;IAAAC,KAAA,EACD,SAAAO,YAAYF,KAAK,EAAEF,CAAC,EAAE;MAClB,IAAMG,GAAG,GAAG,EAAE;MAAC,IAAAG,SAAA,GAAAC,0BAAA,CACIL,KAAK;QAAAM,KAAA;MAAA;QAAxB,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA0B;UAAA,IAAfC,IAAI,GAAAJ,KAAA,CAAAX,KAAA;UACXM,GAAG,CAACU,IAAI,CAAAC,KAAA,CAARX,GAAG,EAAAY,kBAAA,CAAS,IAAI,CAACtB,MAAM,CAACuB,aAAa,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEZ,CAAC,CAAC,EAAC;QAC7F;MAAC,SAAAiB,GAAA;QAAAX,SAAA,CAAAY,CAAA,CAAAD,GAAA;MAAA;QAAAX,SAAA,CAAAa,CAAA;MAAA;MACD,OAAOhB,GAAG;IACd;EAAC;EAAA,OAAAX,aAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}