{"ast":null,"code":"import _regeneratorRuntime from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _createForOfIteratorHelper from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React from\"react\";import{Card}from\"../../components/Card\";import{ToolButton}from\"../../components/ToolButton\";import{serializeAsJSON}from\"../../data/json\";import{loadFirebaseStorage,saveFilesToFirebase}from\"../data/firebase\";import{nanoid}from\"nanoid\";import{useI18n}from\"../../i18n\";import{excalidrawPlusIcon}from\"./icons\";import{encryptData,generateEncryptionKey}from\"../../data/encryption\";import{isInitializedImageElement}from\"../../element/typeChecks\";import{FILE_UPLOAD_MAX_BYTES}from\"../app_constants\";import{encodeFilesForUpload}from\"../data/FileManager\";import{MIME_TYPES}from\"../../constants\";import{trackEvent}from\"../../analytics\";import{getFrame}from\"../../utils\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var exportToExcalidrawPlus=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(elements,appState,files){var firebase,id,encryptionKey,encryptedData,blob,filesMap,_iterator,_step,element,filesToUpload;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return loadFirebaseStorage();case 2:firebase=_context.sent;id=\"\".concat(nanoid(12));_context.next=6;return generateEncryptionKey();case 6:encryptionKey=_context.sent;_context.next=9;return encryptData(encryptionKey,serializeAsJSON(elements,appState,files,\"database\"));case 9:encryptedData=_context.sent;blob=new Blob([encryptedData.iv,new Uint8Array(encryptedData.encryptedBuffer)],{type:MIME_TYPES.binary});_context.next=13;return firebase.storage().ref(\"/migrations/scenes/\".concat(id)).put(blob,{customMetadata:{data:JSON.stringify({version:2,name:appState.name}),created:Date.now().toString()}});case 13:filesMap=new Map();_iterator=_createForOfIteratorHelper(elements);try{for(_iterator.s();!(_step=_iterator.n()).done;){element=_step.value;if(isInitializedImageElement(element)&&files[element.fileId]){filesMap.set(element.fileId,files[element.fileId]);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(!filesMap.size){_context.next=22;break;}_context.next=19;return encodeFilesForUpload({files:filesMap,encryptionKey:encryptionKey,maxBytes:FILE_UPLOAD_MAX_BYTES});case 19:filesToUpload=_context.sent;_context.next=22;return saveFilesToFirebase({prefix:\"/migrations/files/scenes/\".concat(id),files:filesToUpload});case 22:window.open(\"https://plus.excalidraw.com/import?excalidraw=\".concat(id,\",\").concat(encryptionKey));case 23:case\"end\":return _context.stop();}},_callee);}));return function exportToExcalidrawPlus(_x,_x2,_x3){return _ref.apply(this,arguments);};}();export var ExportToExcalidrawPlus=function ExportToExcalidrawPlus(_ref2){var elements=_ref2.elements,appState=_ref2.appState,files=_ref2.files,onError=_ref2.onError;var _useI18n=useI18n(),t=_useI18n.t;return/*#__PURE__*/_jsxs(Card,{color:\"primary\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Card-icon\",children:excalidrawPlusIcon}),/*#__PURE__*/_jsx(\"h2\",{children:\"Excalidraw+\"}),/*#__PURE__*/_jsx(\"div\",{className:\"Card-details\",children:t(\"exportDialog.excalidrawplus_description\")}),/*#__PURE__*/_jsx(ToolButton,{className:\"Card-button\",type:\"button\",title:t(\"exportDialog.excalidrawplus_button\"),\"aria-label\":t(\"exportDialog.excalidrawplus_button\"),showAriaLabel:true,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;trackEvent(\"export\",\"eplus\",\"ui (\".concat(getFrame(),\")\"));_context2.next=4;return exportToExcalidrawPlus(elements,appState,files);case 4:_context2.next=10;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);if(_context2.t0.name!==\"AbortError\"){onError(new Error(t(\"exportDialog.excalidrawplus_exportError\")));}case 10:case\"end\":return _context2.stop();}},_callee2,null,[[0,6]]);}))})]});};","map":{"version":3,"names":["React","Card","ToolButton","serializeAsJSON","loadFirebaseStorage","saveFilesToFirebase","nanoid","useI18n","excalidrawPlusIcon","encryptData","generateEncryptionKey","isInitializedImageElement","FILE_UPLOAD_MAX_BYTES","encodeFilesForUpload","MIME_TYPES","trackEvent","getFrame","jsx","_jsx","jsxs","_jsxs","exportToExcalidrawPlus","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","elements","appState","files","firebase","id","encryptionKey","encryptedData","blob","filesMap","_iterator","_step","element","filesToUpload","wrap","_callee$","_context","prev","next","sent","concat","Blob","iv","Uint8Array","encryptedBuffer","type","binary","storage","ref","put","customMetadata","data","JSON","stringify","version","name","created","Date","now","toString","Map","_createForOfIteratorHelper","s","n","done","value","fileId","set","err","e","f","size","maxBytes","prefix","window","open","stop","_x","_x2","_x3","apply","arguments","ExportToExcalidrawPlus","_ref2","onError","_useI18n","t","color","children","className","title","showAriaLabel","onClick","_callee2","_callee2$","_context2","t0","console","error","Error"],"sources":["D:/project/excalidraw-cn/src/excalidraw-app/components/ExportToExcalidrawPlus.tsx"],"sourcesContent":["import React from \"react\";\nimport { Card } from \"../../components/Card\";\nimport { ToolButton } from \"../../components/ToolButton\";\nimport { serializeAsJSON } from \"../../data/json\";\nimport { loadFirebaseStorage, saveFilesToFirebase } from \"../data/firebase\";\nimport { FileId, NonDeletedExcalidrawElement } from \"../../element/types\";\nimport { AppState, BinaryFileData, BinaryFiles } from \"../../types\";\nimport { nanoid } from \"nanoid\";\nimport { useI18n } from \"../../i18n\";\nimport { excalidrawPlusIcon } from \"./icons\";\nimport { encryptData, generateEncryptionKey } from \"../../data/encryption\";\nimport { isInitializedImageElement } from \"../../element/typeChecks\";\nimport { FILE_UPLOAD_MAX_BYTES } from \"../app_constants\";\nimport { encodeFilesForUpload } from \"../data/FileManager\";\nimport { MIME_TYPES } from \"../../constants\";\nimport { trackEvent } from \"../../analytics\";\nimport { getFrame } from \"../../utils\";\n\nexport const exportToExcalidrawPlus = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: Partial<AppState>,\n  files: BinaryFiles,\n) => {\n  const firebase = await loadFirebaseStorage();\n\n  const id = `${nanoid(12)}`;\n\n  const encryptionKey = (await generateEncryptionKey())!;\n  const encryptedData = await encryptData(\n    encryptionKey,\n    serializeAsJSON(elements, appState, files, \"database\"),\n  );\n\n  const blob = new Blob(\n    [encryptedData.iv, new Uint8Array(encryptedData.encryptedBuffer)],\n    {\n      type: MIME_TYPES.binary,\n    },\n  );\n\n  await firebase\n    .storage()\n    .ref(`/migrations/scenes/${id}`)\n    .put(blob, {\n      customMetadata: {\n        data: JSON.stringify({ version: 2, name: appState.name }),\n        created: Date.now().toString(),\n      },\n    });\n\n  const filesMap = new Map<FileId, BinaryFileData>();\n  for (const element of elements) {\n    if (isInitializedImageElement(element) && files[element.fileId]) {\n      filesMap.set(element.fileId, files[element.fileId]);\n    }\n  }\n\n  if (filesMap.size) {\n    const filesToUpload = await encodeFilesForUpload({\n      files: filesMap,\n      encryptionKey,\n      maxBytes: FILE_UPLOAD_MAX_BYTES,\n    });\n\n    await saveFilesToFirebase({\n      prefix: `/migrations/files/scenes/${id}`,\n      files: filesToUpload,\n    });\n  }\n\n  window.open(\n    `https://plus.excalidraw.com/import?excalidraw=${id},${encryptionKey}`,\n  );\n};\n\nexport const ExportToExcalidrawPlus: React.FC<{\n  elements: readonly NonDeletedExcalidrawElement[];\n  appState: Partial<AppState>;\n  files: BinaryFiles;\n  onError: (error: Error) => void;\n}> = ({ elements, appState, files, onError }) => {\n  const { t } = useI18n();\n  return (\n    <Card color=\"primary\">\n      <div className=\"Card-icon\">{excalidrawPlusIcon}</div>\n      <h2>Excalidraw+</h2>\n      <div className=\"Card-details\">\n        {t(\"exportDialog.excalidrawplus_description\")}\n      </div>\n      <ToolButton\n        className=\"Card-button\"\n        type=\"button\"\n        title={t(\"exportDialog.excalidrawplus_button\")}\n        aria-label={t(\"exportDialog.excalidrawplus_button\")}\n        showAriaLabel={true}\n        onClick={async () => {\n          try {\n            trackEvent(\"export\", \"eplus\", `ui (${getFrame()})`);\n            await exportToExcalidrawPlus(elements, appState, files);\n          } catch (error: any) {\n            console.error(error);\n            if (error.name !== \"AbortError\") {\n              onError(new Error(t(\"exportDialog.excalidrawplus_exportError\")));\n            }\n          }\n        }}\n      />\n    </Card>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}