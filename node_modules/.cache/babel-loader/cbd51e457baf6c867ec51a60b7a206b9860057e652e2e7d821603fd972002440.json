{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\HintViewer.tsx\";\nimport { t } from \"../i18n\";\nimport { isImageElement, isLinearElement, isTextBindableContainer, isTextElement } from \"../element/typeChecks\";\nimport { getShortcutKey } from \"../utils\";\nimport { isEraserActive } from \"../appState\";\nimport \"./HintViewer.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getHints = _ref => {\n  let {\n    appState,\n    isMobile,\n    device,\n    app\n  } = _ref;\n  const {\n    activeTool,\n    isResizing,\n    isRotating,\n    lastPointerDownWith\n  } = appState;\n  const multiMode = appState.multiElement !== null;\n  if (appState.openSidebar && !device.canDeviceFitSidebar) {\n    return null;\n  }\n  if (isEraserActive(appState)) {\n    return t(\"hints.eraserRevert\");\n  }\n  if (activeTool.type === \"arrow\" || activeTool.type === \"line\") {\n    if (!multiMode) {\n      return t(\"hints.linearElement\");\n    }\n    return t(\"hints.linearElementMulti\");\n  }\n  if (activeTool.type === \"freedraw\") {\n    return t(\"hints.freeDraw\");\n  }\n  if (activeTool.type === \"text\") {\n    return t(\"hints.text\");\n  }\n  if (appState.activeTool.type === \"image\" && appState.pendingImageElementId) {\n    return t(\"hints.placeImage\");\n  }\n  const selectedElements = app.scene.getSelectedElements(appState);\n  if (isResizing && lastPointerDownWith === \"mouse\" && selectedElements.length === 1) {\n    const targetElement = selectedElements[0];\n    if (isLinearElement(targetElement) && targetElement.points.length === 2) {\n      return t(\"hints.lockAngle\");\n    }\n    return isImageElement(targetElement) ? t(\"hints.resizeImage\") : t(\"hints.resize\");\n  }\n  if (isRotating && lastPointerDownWith === \"mouse\") {\n    return t(\"hints.rotate\");\n  }\n  if (selectedElements.length === 1 && isTextElement(selectedElements[0])) {\n    return t(\"hints.text_selected\");\n  }\n  if (appState.editingElement && isTextElement(appState.editingElement)) {\n    return t(\"hints.text_editing\");\n  }\n  if (activeTool.type === \"selection\") {\n    var _appState$draggingEle;\n    if (((_appState$draggingEle = appState.draggingElement) === null || _appState$draggingEle === void 0 ? void 0 : _appState$draggingEle.type) === \"selection\" && !appState.editingElement && !appState.editingLinearElement) {\n      return t(\"hints.deepBoxSelect\");\n    }\n    if (!selectedElements.length && !isMobile) {\n      return t(\"hints.canvasPanning\");\n    }\n  }\n  if (selectedElements.length === 1) {\n    if (isLinearElement(selectedElements[0])) {\n      if (appState.editingLinearElement) {\n        return appState.editingLinearElement.selectedPointsIndices ? t(\"hints.lineEditor_pointSelected\") : t(\"hints.lineEditor_nothingSelected\");\n      }\n      return t(\"hints.lineEditor_info\");\n    }\n    if (isTextBindableContainer(selectedElements[0])) {\n      return t(\"hints.bindTextToElement\");\n    }\n  }\n  return null;\n};\nexport const HintViewer = _ref2 => {\n  let {\n    appState,\n    isMobile,\n    device,\n    app\n  } = _ref2;\n  let hint = getHints({\n    appState,\n    isMobile,\n    device,\n    app\n  });\n  if (!hint) {\n    return null;\n  }\n  hint = getShortcutKey(hint);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"HintViewer\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: hint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["t","isImageElement","isLinearElement","isTextBindableContainer","isTextElement","getShortcutKey","isEraserActive","jsxDEV","_jsxDEV","getHints","_ref","appState","isMobile","device","app","activeTool","isResizing","isRotating","lastPointerDownWith","multiMode","multiElement","openSidebar","canDeviceFitSidebar","type","pendingImageElementId","selectedElements","scene","getSelectedElements","length","targetElement","points","editingElement","_appState$draggingEle","draggingElement","editingLinearElement","selectedPointsIndices","HintViewer","_ref2","hint","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/project/excalidraw-cn/src/components/HintViewer.tsx"],"sourcesContent":["import { t } from \"../i18n\";\nimport { AppClassProperties, Device, UIAppState } from \"../types\";\nimport {\n  isImageElement,\n  isLinearElement,\n  isTextBindableContainer,\n  isTextElement,\n} from \"../element/typeChecks\";\nimport { getShortcutKey } from \"../utils\";\nimport { isEraserActive } from \"../appState\";\n\nimport \"./HintViewer.scss\";\n\ninterface HintViewerProps {\n  appState: UIAppState;\n  isMobile: boolean;\n  device: Device;\n  app: AppClassProperties;\n}\n\nconst getHints = ({ appState, isMobile, device, app }: HintViewerProps) => {\n  const { activeTool, isResizing, isRotating, lastPointerDownWith } = appState;\n  const multiMode = appState.multiElement !== null;\n\n  if (appState.openSidebar && !device.canDeviceFitSidebar) {\n    return null;\n  }\n\n  if (isEraserActive(appState)) {\n    return t(\"hints.eraserRevert\");\n  }\n  if (activeTool.type === \"arrow\" || activeTool.type === \"line\") {\n    if (!multiMode) {\n      return t(\"hints.linearElement\");\n    }\n    return t(\"hints.linearElementMulti\");\n  }\n\n  if (activeTool.type === \"freedraw\") {\n    return t(\"hints.freeDraw\");\n  }\n\n  if (activeTool.type === \"text\") {\n    return t(\"hints.text\");\n  }\n\n  if (appState.activeTool.type === \"image\" && appState.pendingImageElementId) {\n    return t(\"hints.placeImage\");\n  }\n\n  const selectedElements = app.scene.getSelectedElements(appState);\n\n  if (\n    isResizing &&\n    lastPointerDownWith === \"mouse\" &&\n    selectedElements.length === 1\n  ) {\n    const targetElement = selectedElements[0];\n    if (isLinearElement(targetElement) && targetElement.points.length === 2) {\n      return t(\"hints.lockAngle\");\n    }\n    return isImageElement(targetElement)\n      ? t(\"hints.resizeImage\")\n      : t(\"hints.resize\");\n  }\n\n  if (isRotating && lastPointerDownWith === \"mouse\") {\n    return t(\"hints.rotate\");\n  }\n\n  if (selectedElements.length === 1 && isTextElement(selectedElements[0])) {\n    return t(\"hints.text_selected\");\n  }\n\n  if (appState.editingElement && isTextElement(appState.editingElement)) {\n    return t(\"hints.text_editing\");\n  }\n\n  if (activeTool.type === \"selection\") {\n    if (\n      appState.draggingElement?.type === \"selection\" &&\n      !appState.editingElement &&\n      !appState.editingLinearElement\n    ) {\n      return t(\"hints.deepBoxSelect\");\n    }\n    if (!selectedElements.length && !isMobile) {\n      return t(\"hints.canvasPanning\");\n    }\n  }\n\n  if (selectedElements.length === 1) {\n    if (isLinearElement(selectedElements[0])) {\n      if (appState.editingLinearElement) {\n        return appState.editingLinearElement.selectedPointsIndices\n          ? t(\"hints.lineEditor_pointSelected\")\n          : t(\"hints.lineEditor_nothingSelected\");\n      }\n      return t(\"hints.lineEditor_info\");\n    }\n    if (isTextBindableContainer(selectedElements[0])) {\n      return t(\"hints.bindTextToElement\");\n    }\n  }\n\n  return null;\n};\n\nexport const HintViewer = ({\n  appState,\n  isMobile,\n  device,\n  app,\n}: HintViewerProps) => {\n  let hint = getHints({\n    appState,\n    isMobile,\n    device,\n    app,\n  });\n  if (!hint) {\n    return null;\n  }\n\n  hint = getShortcutKey(hint);\n\n  return (\n    <div className=\"HintViewer\">\n      <span>{hint}</span>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}