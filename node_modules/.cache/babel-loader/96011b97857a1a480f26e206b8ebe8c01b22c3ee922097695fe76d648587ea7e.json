{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\element\\\\Hyperlink.tsx\";\nimport { getShortcutKey, sceneCoordsToViewportCoords, viewportCoordsToSceneCoords, wrapEvent } from \"../utils\";\nimport { mutateElement } from \"./mutateElement\";\nimport { register } from \"../actions/register\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { FreedrawIcon, LinkIcon, TrashIcon } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { useCallback, useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { KEYS } from \"../keys\";\nimport { DEFAULT_LINK_SIZE } from \"../renderer/renderElement\";\nimport { rotate } from \"../math\";\nimport { EVENT, HYPERLINK_TOOLTIP_DELAY, MIME_TYPES } from \"../constants\";\nimport { getTooltipDiv, updateTooltipPosition } from \"../components/Tooltip\";\nimport { getSelectedElements } from \"../scene\";\nimport { isPointHittingElementBoundingBox } from \"./collision\";\nimport { getElementAbsoluteCoords } from \"./\";\nimport { isLocalLink, normalizeLink } from \"../data/url\";\nimport \"./Hyperlink.scss\";\nimport { trackEvent } from \"../analytics\";\nimport { useExcalidrawAppState } from \"../components/App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTAINER_WIDTH = 320;\nconst SPACE_BOTTOM = 85;\nconst CONTAINER_PADDING = 5;\nconst CONTAINER_HEIGHT = 42;\nconst AUTO_HIDE_TIMEOUT = 500;\nexport const EXTERNAL_LINK_IMG = document.createElement(\"img\");\nEXTERNAL_LINK_IMG.src = `data:${MIME_TYPES.svg}, ${encodeURIComponent(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#1971c2\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-external-link\"><path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line></svg>`)}`;\nlet IS_HYPERLINK_TOOLTIP_VISIBLE = false;\nexport const Hyperlink = _ref => {\n  let {\n    element,\n    setAppState,\n    onLinkOpen\n  } = _ref;\n  const appState = useExcalidrawAppState();\n  const linkVal = element.link || \"\";\n  const [inputVal, setInputVal] = useState(linkVal);\n  const inputRef = useRef(null);\n  const isEditing = appState.showHyperlinkPopup === \"editor\" || !linkVal;\n  const handleSubmit = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n    const link = normalizeLink(inputRef.current.value);\n    if (!element.link && link) {\n      trackEvent(\"hyperlink\", \"create\");\n    }\n    mutateElement(element, {\n      link\n    });\n    setAppState({\n      showHyperlinkPopup: \"info\"\n    });\n  }, [element, setAppState]);\n  useLayoutEffect(() => {\n    return () => {\n      handleSubmit();\n    };\n  }, [handleSubmit]);\n  useEffect(() => {\n    let timeoutId = null;\n    const handlePointerMove = event => {\n      if (isEditing) {\n        return;\n      }\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      const shouldHide = shouldHideLinkPopup(element, appState, [event.clientX, event.clientY]);\n      if (shouldHide) {\n        timeoutId = window.setTimeout(() => {\n          setAppState({\n            showHyperlinkPopup: false\n          });\n        }, AUTO_HIDE_TIMEOUT);\n      }\n    };\n    window.addEventListener(EVENT.POINTER_MOVE, handlePointerMove, false);\n    return () => {\n      window.removeEventListener(EVENT.POINTER_MOVE, handlePointerMove, false);\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [appState, element, isEditing, setAppState]);\n  const handleRemove = useCallback(() => {\n    trackEvent(\"hyperlink\", \"delete\");\n    mutateElement(element, {\n      link: null\n    });\n    if (isEditing) {\n      inputRef.current.value = \"\";\n    }\n    setAppState({\n      showHyperlinkPopup: false\n    });\n  }, [setAppState, element, isEditing]);\n  const onEdit = () => {\n    trackEvent(\"hyperlink\", \"edit\", \"popup-ui\");\n    setAppState({\n      showHyperlinkPopup: \"editor\"\n    });\n  };\n  const {\n    x,\n    y\n  } = getCoordsForPopover(element, appState);\n  if (appState.draggingElement || appState.resizingElement || appState.isRotating || appState.openMenu) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"excalidraw-hyperlinkContainer\",\n    style: {\n      top: `${y}px`,\n      left: `${x}px`,\n      width: CONTAINER_WIDTH,\n      padding: CONTAINER_PADDING\n    },\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      className: clsx(\"excalidraw-hyperlinkContainer-input\"),\n      placeholder: \"Type or paste your link here\",\n      ref: inputRef,\n      value: inputVal,\n      onChange: event => setInputVal(event.target.value),\n      autoFocus: true,\n      onKeyDown: event => {\n        event.stopPropagation();\n        // prevent cmd/ctrl+k shortcut when editing link\n        if (event[KEYS.CTRL_OR_CMD] && event.key === KEYS.K) {\n          event.preventDefault();\n        }\n        if (event.key === KEYS.ENTER || event.key === KEYS.ESCAPE) {\n          handleSubmit();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n      href: normalizeLink(element.link || \"\"),\n      className: clsx(\"excalidraw-hyperlinkContainer-link\", {\n        \"d-none\": isEditing\n      }),\n      target: isLocalLink(element.link) ? \"_self\" : \"_blank\",\n      onClick: event => {\n        if (element.link && onLinkOpen) {\n          const customEvent = wrapEvent(EVENT.EXCALIDRAW_LINK, event.nativeEvent);\n          onLinkOpen({\n            ...element,\n            link: normalizeLink(element.link)\n          }, customEvent);\n          if (customEvent.defaultPrevented) {\n            event.preventDefault();\n          }\n        }\n      },\n      rel: \"noopener noreferrer\",\n      children: element.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excalidraw-hyperlinkContainer__buttons\",\n      children: [!isEditing && /*#__PURE__*/_jsxDEV(ToolButton, {\n        type: \"button\",\n        title: t(\"buttons.edit\"),\n        \"aria-label\": t(\"buttons.edit\"),\n        label: t(\"buttons.edit\"),\n        onClick: onEdit,\n        className: \"excalidraw-hyperlinkContainer--edit\",\n        icon: FreedrawIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), linkVal && /*#__PURE__*/_jsxDEV(ToolButton, {\n        type: \"button\",\n        title: t(\"buttons.remove\"),\n        \"aria-label\": t(\"buttons.remove\"),\n        label: t(\"buttons.remove\"),\n        onClick: handleRemove,\n        className: \"excalidraw-hyperlinkContainer--remove\",\n        icon: TrashIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\nconst getCoordsForPopover = (element, appState) => {\n  const [x1, y1] = getElementAbsoluteCoords(element);\n  const {\n    x: viewportX,\n    y: viewportY\n  } = sceneCoordsToViewportCoords({\n    sceneX: x1 + element.width / 2,\n    sceneY: y1\n  }, appState);\n  const x = viewportX - appState.offsetLeft - CONTAINER_WIDTH / 2;\n  const y = viewportY - appState.offsetTop - SPACE_BOTTOM;\n  return {\n    x,\n    y\n  };\n};\nexport const actionLink = register({\n  name: \"hyperlink\",\n  perform: (elements, appState) => {\n    if (appState.showHyperlinkPopup === \"editor\") {\n      return false;\n    }\n    return {\n      elements,\n      appState: {\n        ...appState,\n        showHyperlinkPopup: \"editor\",\n        openMenu: null\n      },\n      commitToHistory: true\n    };\n  },\n  trackEvent: {\n    category: \"hyperlink\",\n    action: \"click\"\n  },\n  keyTest: event => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.K,\n  contextItemLabel: (elements, appState) => getContextMenuLabel(elements, appState),\n  predicate: (elements, appState) => {\n    const selectedElements = getSelectedElements(elements, appState);\n    return selectedElements.length === 1;\n  },\n  PanelComponent: _ref2 => {\n    let {\n      elements,\n      appState,\n      updateData\n    } = _ref2;\n    const selectedElements = getSelectedElements(elements, appState);\n    return /*#__PURE__*/_jsxDEV(ToolButton, {\n      type: \"button\",\n      icon: LinkIcon,\n      \"aria-label\": t(getContextMenuLabel(elements, appState)),\n      title: `${t(\"labels.link.label\")} - ${getShortcutKey(\"CtrlOrCmd+K\")}`,\n      onClick: () => updateData(null),\n      selected: selectedElements.length === 1 && !!selectedElements[0].link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this);\n  }\n});\nexport const getContextMenuLabel = (elements, appState) => {\n  const selectedElements = getSelectedElements(elements, appState);\n  const label = selectedElements[0].link ? \"labels.link.edit\" : \"labels.link.create\";\n  return label;\n};\nexport const getLinkHandleFromCoords = (_ref3, angle, appState) => {\n  let [x1, y1, x2, y2] = _ref3;\n  const size = DEFAULT_LINK_SIZE;\n  const linkWidth = size / appState.zoom.value;\n  const linkHeight = size / appState.zoom.value;\n  const linkMarginY = size / appState.zoom.value;\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n  const centeringOffset = (size - 8) / (2 * appState.zoom.value);\n  const dashedLineMargin = 4 / appState.zoom.value;\n\n  // Same as `ne` resize handle\n  const x = x2 + dashedLineMargin - centeringOffset;\n  const y = y1 - dashedLineMargin - linkMarginY + centeringOffset;\n  const [rotatedX, rotatedY] = rotate(x + linkWidth / 2, y + linkHeight / 2, centerX, centerY, angle);\n  return [rotatedX - linkWidth / 2, rotatedY - linkHeight / 2, linkWidth, linkHeight];\n};\nexport const isPointHittingLinkIcon = (element, appState, _ref4, isMobile) => {\n  let [x, y] = _ref4;\n  if (!element.link || appState.selectedElementIds[element.id]) {\n    return false;\n  }\n  const threshold = 4 / appState.zoom.value;\n  if (!isMobile && appState.viewModeEnabled && isPointHittingElementBoundingBox(element, [x, y], threshold, null)) {\n    return true;\n  }\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const [linkX, linkY, linkWidth, linkHeight] = getLinkHandleFromCoords([x1, y1, x2, y2], element.angle, appState);\n  const hitLink = x > linkX - threshold && x < linkX + threshold + linkWidth && y > linkY - threshold && y < linkY + linkHeight + threshold;\n  return hitLink;\n};\nlet HYPERLINK_TOOLTIP_TIMEOUT_ID = null;\nexport const showHyperlinkTooltip = (element, appState) => {\n  if (HYPERLINK_TOOLTIP_TIMEOUT_ID) {\n    clearTimeout(HYPERLINK_TOOLTIP_TIMEOUT_ID);\n  }\n  HYPERLINK_TOOLTIP_TIMEOUT_ID = window.setTimeout(() => renderTooltip(element, appState), HYPERLINK_TOOLTIP_DELAY);\n};\nconst renderTooltip = (element, appState) => {\n  if (!element.link) {\n    return;\n  }\n  const tooltipDiv = getTooltipDiv();\n  tooltipDiv.classList.add(\"excalidraw-tooltip--visible\");\n  tooltipDiv.style.maxWidth = \"20rem\";\n  tooltipDiv.textContent = element.link;\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const [linkX, linkY, linkWidth, linkHeight] = getLinkHandleFromCoords([x1, y1, x2, y2], element.angle, appState);\n  const linkViewportCoords = sceneCoordsToViewportCoords({\n    sceneX: linkX,\n    sceneY: linkY\n  }, appState);\n  updateTooltipPosition(tooltipDiv, {\n    left: linkViewportCoords.x,\n    top: linkViewportCoords.y,\n    width: linkWidth,\n    height: linkHeight\n  }, \"top\");\n  trackEvent(\"hyperlink\", \"tooltip\", \"link-icon\");\n  IS_HYPERLINK_TOOLTIP_VISIBLE = true;\n};\nexport const hideHyperlinkToolip = () => {\n  if (HYPERLINK_TOOLTIP_TIMEOUT_ID) {\n    clearTimeout(HYPERLINK_TOOLTIP_TIMEOUT_ID);\n  }\n  if (IS_HYPERLINK_TOOLTIP_VISIBLE) {\n    IS_HYPERLINK_TOOLTIP_VISIBLE = false;\n    getTooltipDiv().classList.remove(\"excalidraw-tooltip--visible\");\n  }\n};\nexport const shouldHideLinkPopup = (element, appState, _ref5) => {\n  let [clientX, clientY] = _ref5;\n  const {\n    x: sceneX,\n    y: sceneY\n  } = viewportCoordsToSceneCoords({\n    clientX,\n    clientY\n  }, appState);\n  const threshold = 15 / appState.zoom.value;\n  // hitbox to prevent hiding when hovered in element bounding box\n  if (isPointHittingElementBoundingBox(element, [sceneX, sceneY], threshold, null)) {\n    return false;\n  }\n  const [x1, y1, x2] = getElementAbsoluteCoords(element);\n  // hit box to prevent hiding when hovered in the vertical area between element and popover\n  if (sceneX >= x1 && sceneX <= x2 && sceneY >= y1 - SPACE_BOTTOM && sceneY <= y1) {\n    return false;\n  }\n  // hit box to prevent hiding when hovered around popover within threshold\n  const {\n    x: popoverX,\n    y: popoverY\n  } = getCoordsForPopover(element, appState);\n  if (clientX >= popoverX - threshold && clientX <= popoverX + CONTAINER_WIDTH + CONTAINER_PADDING * 2 + threshold && clientY >= popoverY - threshold && clientY <= popoverY + threshold + CONTAINER_PADDING * 2 + CONTAINER_HEIGHT) {\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["getShortcutKey","sceneCoordsToViewportCoords","viewportCoordsToSceneCoords","wrapEvent","mutateElement","register","ToolButton","FreedrawIcon","LinkIcon","TrashIcon","t","useCallback","useEffect","useLayoutEffect","useRef","useState","clsx","KEYS","DEFAULT_LINK_SIZE","rotate","EVENT","HYPERLINK_TOOLTIP_DELAY","MIME_TYPES","getTooltipDiv","updateTooltipPosition","getSelectedElements","isPointHittingElementBoundingBox","getElementAbsoluteCoords","isLocalLink","normalizeLink","trackEvent","useExcalidrawAppState","jsxDEV","_jsxDEV","CONTAINER_WIDTH","SPACE_BOTTOM","CONTAINER_PADDING","CONTAINER_HEIGHT","AUTO_HIDE_TIMEOUT","EXTERNAL_LINK_IMG","document","createElement","src","svg","encodeURIComponent","IS_HYPERLINK_TOOLTIP_VISIBLE","Hyperlink","_ref","element","setAppState","onLinkOpen","appState","linkVal","link","inputVal","setInputVal","inputRef","isEditing","showHyperlinkPopup","handleSubmit","current","value","timeoutId","handlePointerMove","event","clearTimeout","shouldHide","shouldHideLinkPopup","clientX","clientY","window","setTimeout","addEventListener","POINTER_MOVE","removeEventListener","handleRemove","onEdit","x","y","getCoordsForPopover","draggingElement","resizingElement","isRotating","openMenu","className","style","top","left","width","padding","children","placeholder","ref","onChange","target","autoFocus","onKeyDown","stopPropagation","CTRL_OR_CMD","key","K","preventDefault","ENTER","ESCAPE","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","customEvent","EXCALIDRAW_LINK","nativeEvent","defaultPrevented","rel","type","title","label","icon","x1","y1","viewportX","viewportY","sceneX","sceneY","offsetLeft","offsetTop","actionLink","name","perform","elements","commitToHistory","category","action","keyTest","contextItemLabel","getContextMenuLabel","predicate","selectedElements","length","PanelComponent","_ref2","updateData","selected","getLinkHandleFromCoords","_ref3","angle","x2","y2","size","linkWidth","zoom","linkHeight","linkMarginY","centerX","centerY","centeringOffset","dashedLineMargin","rotatedX","rotatedY","isPointHittingLinkIcon","_ref4","isMobile","selectedElementIds","id","threshold","viewModeEnabled","linkX","linkY","hitLink","HYPERLINK_TOOLTIP_TIMEOUT_ID","showHyperlinkTooltip","renderTooltip","tooltipDiv","classList","add","maxWidth","textContent","linkViewportCoords","height","hideHyperlinkToolip","remove","_ref5","popoverX","popoverY"],"sources":["D:/project/excalidraw-cn/src/element/Hyperlink.tsx"],"sourcesContent":["import { AppState, ExcalidrawProps, Point, UIAppState } from \"../types\";\nimport {\n  getShortcutKey,\n  sceneCoordsToViewportCoords,\n  viewportCoordsToSceneCoords,\n  wrapEvent,\n} from \"../utils\";\nimport { mutateElement } from \"./mutateElement\";\nimport { NonDeletedExcalidrawElement } from \"./types\";\n\nimport { register } from \"../actions/register\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { FreedrawIcon, LinkIcon, TrashIcon } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport clsx from \"clsx\";\nimport { KEYS } from \"../keys\";\nimport { DEFAULT_LINK_SIZE } from \"../renderer/renderElement\";\nimport { rotate } from \"../math\";\nimport { EVENT, HYPERLINK_TOOLTIP_DELAY, MIME_TYPES } from \"../constants\";\nimport { Bounds } from \"./bounds\";\nimport { getTooltipDiv, updateTooltipPosition } from \"../components/Tooltip\";\nimport { getSelectedElements } from \"../scene\";\nimport { isPointHittingElementBoundingBox } from \"./collision\";\nimport { getElementAbsoluteCoords } from \"./\";\nimport { isLocalLink, normalizeLink } from \"../data/url\";\n\nimport \"./Hyperlink.scss\";\nimport { trackEvent } from \"../analytics\";\nimport { useExcalidrawAppState } from \"../components/App\";\n\nconst CONTAINER_WIDTH = 320;\nconst SPACE_BOTTOM = 85;\nconst CONTAINER_PADDING = 5;\nconst CONTAINER_HEIGHT = 42;\nconst AUTO_HIDE_TIMEOUT = 500;\n\nexport const EXTERNAL_LINK_IMG = document.createElement(\"img\");\nEXTERNAL_LINK_IMG.src = `data:${MIME_TYPES.svg}, ${encodeURIComponent(\n  `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#1971c2\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-external-link\"><path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line></svg>`,\n)}`;\n\nlet IS_HYPERLINK_TOOLTIP_VISIBLE = false;\n\nexport const Hyperlink = ({\n  element,\n  setAppState,\n  onLinkOpen,\n}: {\n  element: NonDeletedExcalidrawElement;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  onLinkOpen: ExcalidrawProps[\"onLinkOpen\"];\n}) => {\n  const appState = useExcalidrawAppState();\n\n  const linkVal = element.link || \"\";\n\n  const [inputVal, setInputVal] = useState(linkVal);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isEditing = appState.showHyperlinkPopup === \"editor\" || !linkVal;\n\n  const handleSubmit = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    const link = normalizeLink(inputRef.current.value);\n\n    if (!element.link && link) {\n      trackEvent(\"hyperlink\", \"create\");\n    }\n\n    mutateElement(element, { link });\n    setAppState({ showHyperlinkPopup: \"info\" });\n  }, [element, setAppState]);\n\n  useLayoutEffect(() => {\n    return () => {\n      handleSubmit();\n    };\n  }, [handleSubmit]);\n\n  useEffect(() => {\n    let timeoutId: number | null = null;\n    const handlePointerMove = (event: PointerEvent) => {\n      if (isEditing) {\n        return;\n      }\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      const shouldHide = shouldHideLinkPopup(element, appState, [\n        event.clientX,\n        event.clientY,\n      ]) as boolean;\n      if (shouldHide) {\n        timeoutId = window.setTimeout(() => {\n          setAppState({ showHyperlinkPopup: false });\n        }, AUTO_HIDE_TIMEOUT);\n      }\n    };\n    window.addEventListener(EVENT.POINTER_MOVE, handlePointerMove, false);\n    return () => {\n      window.removeEventListener(EVENT.POINTER_MOVE, handlePointerMove, false);\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [appState, element, isEditing, setAppState]);\n\n  const handleRemove = useCallback(() => {\n    trackEvent(\"hyperlink\", \"delete\");\n    mutateElement(element, { link: null });\n    if (isEditing) {\n      inputRef.current!.value = \"\";\n    }\n    setAppState({ showHyperlinkPopup: false });\n  }, [setAppState, element, isEditing]);\n\n  const onEdit = () => {\n    trackEvent(\"hyperlink\", \"edit\", \"popup-ui\");\n    setAppState({ showHyperlinkPopup: \"editor\" });\n  };\n  const { x, y } = getCoordsForPopover(element, appState);\n  if (\n    appState.draggingElement ||\n    appState.resizingElement ||\n    appState.isRotating ||\n    appState.openMenu\n  ) {\n    return null;\n  }\n  return (\n    <div\n      className=\"excalidraw-hyperlinkContainer\"\n      style={{\n        top: `${y}px`,\n        left: `${x}px`,\n        width: CONTAINER_WIDTH,\n        padding: CONTAINER_PADDING,\n      }}\n    >\n      {isEditing ? (\n        <input\n          className={clsx(\"excalidraw-hyperlinkContainer-input\")}\n          placeholder=\"Type or paste your link here\"\n          ref={inputRef}\n          value={inputVal}\n          onChange={(event) => setInputVal(event.target.value)}\n          autoFocus\n          onKeyDown={(event) => {\n            event.stopPropagation();\n            // prevent cmd/ctrl+k shortcut when editing link\n            if (event[KEYS.CTRL_OR_CMD] && event.key === KEYS.K) {\n              event.preventDefault();\n            }\n            if (event.key === KEYS.ENTER || event.key === KEYS.ESCAPE) {\n              handleSubmit();\n            }\n          }}\n        />\n      ) : (\n        <a\n          href={normalizeLink(element.link || \"\")}\n          className={clsx(\"excalidraw-hyperlinkContainer-link\", {\n            \"d-none\": isEditing,\n          })}\n          target={isLocalLink(element.link) ? \"_self\" : \"_blank\"}\n          onClick={(event) => {\n            if (element.link && onLinkOpen) {\n              const customEvent = wrapEvent(\n                EVENT.EXCALIDRAW_LINK,\n                event.nativeEvent,\n              );\n              onLinkOpen(\n                {\n                  ...element,\n                  link: normalizeLink(element.link),\n                },\n                customEvent,\n              );\n              if (customEvent.defaultPrevented) {\n                event.preventDefault();\n              }\n            }\n          }}\n          rel=\"noopener noreferrer\"\n        >\n          {element.link}\n        </a>\n      )}\n      <div className=\"excalidraw-hyperlinkContainer__buttons\">\n        {!isEditing && (\n          <ToolButton\n            type=\"button\"\n            title={t(\"buttons.edit\")}\n            aria-label={t(\"buttons.edit\")}\n            label={t(\"buttons.edit\")}\n            onClick={onEdit}\n            className=\"excalidraw-hyperlinkContainer--edit\"\n            icon={FreedrawIcon}\n          />\n        )}\n\n        {linkVal && (\n          <ToolButton\n            type=\"button\"\n            title={t(\"buttons.remove\")}\n            aria-label={t(\"buttons.remove\")}\n            label={t(\"buttons.remove\")}\n            onClick={handleRemove}\n            className=\"excalidraw-hyperlinkContainer--remove\"\n            icon={TrashIcon}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst getCoordsForPopover = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n) => {\n  const [x1, y1] = getElementAbsoluteCoords(element);\n  const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n    { sceneX: x1 + element.width / 2, sceneY: y1 },\n    appState,\n  );\n  const x = viewportX - appState.offsetLeft - CONTAINER_WIDTH / 2;\n  const y = viewportY - appState.offsetTop - SPACE_BOTTOM;\n  return { x, y };\n};\n\nexport const actionLink = register({\n  name: \"hyperlink\",\n  perform: (elements, appState) => {\n    if (appState.showHyperlinkPopup === \"editor\") {\n      return false;\n    }\n\n    return {\n      elements,\n      appState: {\n        ...appState,\n        showHyperlinkPopup: \"editor\",\n        openMenu: null,\n      },\n      commitToHistory: true,\n    };\n  },\n  trackEvent: { category: \"hyperlink\", action: \"click\" },\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.K,\n  contextItemLabel: (elements, appState) =>\n    getContextMenuLabel(elements, appState),\n  predicate: (elements, appState) => {\n    const selectedElements = getSelectedElements(elements, appState);\n    return selectedElements.length === 1;\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const selectedElements = getSelectedElements(elements, appState);\n\n    return (\n      <ToolButton\n        type=\"button\"\n        icon={LinkIcon}\n        aria-label={t(getContextMenuLabel(elements, appState))}\n        title={`${t(\"labels.link.label\")} - ${getShortcutKey(\"CtrlOrCmd+K\")}`}\n        onClick={() => updateData(null)}\n        selected={selectedElements.length === 1 && !!selectedElements[0].link}\n      />\n    );\n  },\n});\n\nexport const getContextMenuLabel = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  const selectedElements = getSelectedElements(elements, appState);\n  const label = selectedElements[0]!.link\n    ? \"labels.link.edit\"\n    : \"labels.link.create\";\n  return label;\n};\n\nexport const getLinkHandleFromCoords = (\n  [x1, y1, x2, y2]: Bounds,\n  angle: number,\n  appState: UIAppState,\n): [x: number, y: number, width: number, height: number] => {\n  const size = DEFAULT_LINK_SIZE;\n  const linkWidth = size / appState.zoom.value;\n  const linkHeight = size / appState.zoom.value;\n  const linkMarginY = size / appState.zoom.value;\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n  const centeringOffset = (size - 8) / (2 * appState.zoom.value);\n  const dashedLineMargin = 4 / appState.zoom.value;\n\n  // Same as `ne` resize handle\n  const x = x2 + dashedLineMargin - centeringOffset;\n  const y = y1 - dashedLineMargin - linkMarginY + centeringOffset;\n\n  const [rotatedX, rotatedY] = rotate(\n    x + linkWidth / 2,\n    y + linkHeight / 2,\n    centerX,\n    centerY,\n    angle,\n  );\n  return [\n    rotatedX - linkWidth / 2,\n    rotatedY - linkHeight / 2,\n    linkWidth,\n    linkHeight,\n  ];\n};\n\nexport const isPointHittingLinkIcon = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  [x, y]: Point,\n  isMobile: boolean,\n) => {\n  if (!element.link || appState.selectedElementIds[element.id]) {\n    return false;\n  }\n  const threshold = 4 / appState.zoom.value;\n  if (\n    !isMobile &&\n    appState.viewModeEnabled &&\n    isPointHittingElementBoundingBox(element, [x, y], threshold, null)\n  ) {\n    return true;\n  }\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n  const [linkX, linkY, linkWidth, linkHeight] = getLinkHandleFromCoords(\n    [x1, y1, x2, y2],\n    element.angle,\n    appState,\n  );\n  const hitLink =\n    x > linkX - threshold &&\n    x < linkX + threshold + linkWidth &&\n    y > linkY - threshold &&\n    y < linkY + linkHeight + threshold;\n  return hitLink;\n};\n\nlet HYPERLINK_TOOLTIP_TIMEOUT_ID: number | null = null;\nexport const showHyperlinkTooltip = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n) => {\n  if (HYPERLINK_TOOLTIP_TIMEOUT_ID) {\n    clearTimeout(HYPERLINK_TOOLTIP_TIMEOUT_ID);\n  }\n  HYPERLINK_TOOLTIP_TIMEOUT_ID = window.setTimeout(\n    () => renderTooltip(element, appState),\n    HYPERLINK_TOOLTIP_DELAY,\n  );\n};\n\nconst renderTooltip = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n) => {\n  if (!element.link) {\n    return;\n  }\n\n  const tooltipDiv = getTooltipDiv();\n\n  tooltipDiv.classList.add(\"excalidraw-tooltip--visible\");\n  tooltipDiv.style.maxWidth = \"20rem\";\n  tooltipDiv.textContent = element.link;\n\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n  const [linkX, linkY, linkWidth, linkHeight] = getLinkHandleFromCoords(\n    [x1, y1, x2, y2],\n    element.angle,\n    appState,\n  );\n\n  const linkViewportCoords = sceneCoordsToViewportCoords(\n    { sceneX: linkX, sceneY: linkY },\n    appState,\n  );\n\n  updateTooltipPosition(\n    tooltipDiv,\n    {\n      left: linkViewportCoords.x,\n      top: linkViewportCoords.y,\n      width: linkWidth,\n      height: linkHeight,\n    },\n    \"top\",\n  );\n  trackEvent(\"hyperlink\", \"tooltip\", \"link-icon\");\n\n  IS_HYPERLINK_TOOLTIP_VISIBLE = true;\n};\nexport const hideHyperlinkToolip = () => {\n  if (HYPERLINK_TOOLTIP_TIMEOUT_ID) {\n    clearTimeout(HYPERLINK_TOOLTIP_TIMEOUT_ID);\n  }\n  if (IS_HYPERLINK_TOOLTIP_VISIBLE) {\n    IS_HYPERLINK_TOOLTIP_VISIBLE = false;\n    getTooltipDiv().classList.remove(\"excalidraw-tooltip--visible\");\n  }\n};\n\nexport const shouldHideLinkPopup = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  [clientX, clientY]: Point,\n): Boolean => {\n  const { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n    { clientX, clientY },\n    appState,\n  );\n\n  const threshold = 15 / appState.zoom.value;\n  // hitbox to prevent hiding when hovered in element bounding box\n  if (\n    isPointHittingElementBoundingBox(element, [sceneX, sceneY], threshold, null)\n  ) {\n    return false;\n  }\n  const [x1, y1, x2] = getElementAbsoluteCoords(element);\n  // hit box to prevent hiding when hovered in the vertical area between element and popover\n  if (\n    sceneX >= x1 &&\n    sceneX <= x2 &&\n    sceneY >= y1 - SPACE_BOTTOM &&\n    sceneY <= y1\n  ) {\n    return false;\n  }\n  // hit box to prevent hiding when hovered around popover within threshold\n  const { x: popoverX, y: popoverY } = getCoordsForPopover(element, appState);\n\n  if (\n    clientX >= popoverX - threshold &&\n    clientX <= popoverX + CONTAINER_WIDTH + CONTAINER_PADDING * 2 + threshold &&\n    clientY >= popoverY - threshold &&\n    clientY <= popoverY + threshold + CONTAINER_PADDING * 2 + CONTAINER_HEIGHT\n  ) {\n    return false;\n  }\n  return true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}