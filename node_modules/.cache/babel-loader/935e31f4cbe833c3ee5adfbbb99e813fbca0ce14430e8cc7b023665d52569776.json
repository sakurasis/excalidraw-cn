{"ast":null,"code":"import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _createForOfIteratorHelper from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import{KEYS}from\"../keys\";import{t}from\"../i18n\";import{arrayToMap,getShortcutKey}from\"../utils\";import{register}from\"./register\";import{UngroupIcon,GroupIcon}from\"../components/icons\";import{newElementWith}from\"../element/mutateElement\";import{isSomeElementSelected}from\"../scene\";import{getSelectedGroupIds,selectGroup,selectGroupsForSelectedElements,getElementsInGroup,addToGroup,removeFromSelectedGroups,isElementInGroup}from\"../groups\";import{getNonDeletedElements}from\"../element\";import{randomId}from\"../random\";import{ToolButton}from\"../components/ToolButton\";import{isBoundToContainer}from\"../element/typeChecks\";import{getElementsInResizingFrame,groupByFrames,removeElementsFromFrame,replaceAllElementsInFrame}from\"../frame\";import{jsx as _jsx}from\"react/jsx-runtime\";var allElementsInSameGroup=function allElementsInSameGroup(elements){if(elements.length>=2){var groupIds=elements[0].groupIds;var _iterator=_createForOfIteratorHelper(groupIds),_step;try{var _loop=function _loop(){var groupId=_step.value;if(elements.reduce(function(acc,element){return acc&&isElementInGroup(element,groupId);},true)){return{v:true};}};for(_iterator.s();!(_step=_iterator.n()).done;){var _ret=_loop();if(typeof _ret===\"object\")return _ret.v;}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return false;};var enableActionGroup=function enableActionGroup(elements,appState,app){var selectedElements=app.scene.getSelectedElements({selectedElementIds:appState.selectedElementIds,includeBoundTextElement:true});return selectedElements.length>=2&&!allElementsInSameGroup(selectedElements);};export var actionGroup=register({name:\"group\",trackEvent:{category:\"element\"},perform:function perform(elements,appState,_,app){var selectedElements=app.scene.getSelectedElements({selectedElementIds:appState.selectedElementIds,includeBoundTextElement:true});if(selectedElements.length<2){// nothing to group\nreturn{appState:appState,elements:elements,commitToHistory:false};}// if everything is already grouped into 1 group, there is nothing to do\nvar selectedGroupIds=getSelectedGroupIds(appState);if(selectedGroupIds.length===1){var selectedGroupId=selectedGroupIds[0];var elementIdsInGroup=new Set(getElementsInGroup(elements,selectedGroupId).map(function(element){return element.id;}));var selectedElementIds=new Set(selectedElements.map(function(element){return element.id;}));var combinedSet=new Set([].concat(_toConsumableArray(Array.from(elementIdsInGroup)),_toConsumableArray(Array.from(selectedElementIds))));if(combinedSet.size===elementIdsInGroup.size){// no incremental ids in the selected ids\nreturn{appState:appState,elements:elements,commitToHistory:false};}}var nextElements=_toConsumableArray(elements);// this includes the case where we are grouping elements inside a frame\n// and elements outside that frame\nvar groupingElementsFromDifferentFrames=new Set(selectedElements.map(function(element){return element.frameId;})).size>1;// when it happens, we want to remove elements that are in the frame\n// and are going to be grouped from the frame (mouthful, I know)\nif(groupingElementsFromDifferentFrames){var frameElementsMap=groupByFrames(selectedElements);frameElementsMap.forEach(function(elementsInFrame,frameId){nextElements=removeElementsFromFrame(nextElements,elementsInFrame,appState);});}var newGroupId=randomId();var selectElementIds=arrayToMap(selectedElements);nextElements=nextElements.map(function(element){if(!selectElementIds.get(element.id)){return element;}return newElementWith(element,{groupIds:addToGroup(element.groupIds,newGroupId,appState.editingGroupId)});});// keep the z order within the group the same, but move them\n// to the z order of the highest element in the layer stack\nvar elementsInGroup=getElementsInGroup(nextElements,newGroupId);var lastElementInGroup=elementsInGroup[elementsInGroup.length-1];var lastGroupElementIndex=nextElements.lastIndexOf(lastElementInGroup);var elementsAfterGroup=nextElements.slice(lastGroupElementIndex+1);var elementsBeforeGroup=nextElements.slice(0,lastGroupElementIndex).filter(function(updatedElement){return!isElementInGroup(updatedElement,newGroupId);});nextElements=[].concat(_toConsumableArray(elementsBeforeGroup),_toConsumableArray(elementsInGroup),_toConsumableArray(elementsAfterGroup));return{appState:selectGroup(newGroupId,_objectSpread(_objectSpread({},appState),{},{selectedGroupIds:{}}),getNonDeletedElements(nextElements)),elements:nextElements,commitToHistory:true};},contextItemLabel:\"labels.group\",predicate:function predicate(elements,appState,_,app){return enableActionGroup(elements,appState,app);},keyTest:function keyTest(event){return!event.shiftKey&&event[KEYS.CTRL_OR_CMD]&&event.key===KEYS.G;},PanelComponent:function PanelComponent(_ref){var elements=_ref.elements,appState=_ref.appState,updateData=_ref.updateData,app=_ref.app;return/*#__PURE__*/_jsx(ToolButton,{hidden:!enableActionGroup(elements,appState,app),type:\"button\",icon:/*#__PURE__*/_jsx(GroupIcon,{theme:appState.theme}),onClick:function onClick(){return updateData(null);},title:\"\".concat(t(\"labels.group\"),\" \\u2014 \").concat(getShortcutKey(\"CtrlOrCmd+G\")),\"aria-label\":t(\"labels.group\"),visible:isSomeElementSelected(getNonDeletedElements(elements),appState)});}});export var actionUngroup=register({name:\"ungroup\",trackEvent:{category:\"element\"},perform:function perform(elements,appState,_,app){var groupIds=getSelectedGroupIds(appState);if(groupIds.length===0){return{appState:appState,elements:elements,commitToHistory:false};}var nextElements=_toConsumableArray(elements);var selectedElements=app.scene.getSelectedElements(appState);var frames=selectedElements.filter(function(element){return element.frameId;}).map(function(element){return app.scene.getElement(element.frameId);});var boundTextElementIds=[];nextElements=nextElements.map(function(element){if(isBoundToContainer(element)){boundTextElementIds.push(element.id);}var nextGroupIds=removeFromSelectedGroups(element.groupIds,appState.selectedGroupIds);if(nextGroupIds.length===element.groupIds.length){return element;}return newElementWith(element,{groupIds:nextGroupIds});});var updateAppState=selectGroupsForSelectedElements(_objectSpread(_objectSpread({},appState),{},{selectedGroupIds:{}}),getNonDeletedElements(nextElements),appState,null);frames.forEach(function(frame){if(frame){nextElements=replaceAllElementsInFrame(nextElements,getElementsInResizingFrame(nextElements,frame,appState),frame,appState);}});// remove binded text elements from selection\nupdateAppState.selectedElementIds=Object.entries(updateAppState.selectedElementIds).reduce(function(acc,_ref2){var _ref3=_slicedToArray(_ref2,2),id=_ref3[0],selected=_ref3[1];if(selected&&!boundTextElementIds.includes(id)){acc[id]=true;}return acc;},{});return{appState:updateAppState,elements:nextElements,commitToHistory:true};},keyTest:function keyTest(event){return event.shiftKey&&event[KEYS.CTRL_OR_CMD]&&event.key===KEYS.G.toUpperCase();},contextItemLabel:\"labels.ungroup\",predicate:function predicate(elements,appState){return getSelectedGroupIds(appState).length>0;},PanelComponent:function PanelComponent(_ref4){var elements=_ref4.elements,appState=_ref4.appState,updateData=_ref4.updateData;return/*#__PURE__*/_jsx(ToolButton,{type:\"button\",hidden:getSelectedGroupIds(appState).length===0,icon:/*#__PURE__*/_jsx(UngroupIcon,{theme:appState.theme}),onClick:function onClick(){return updateData(null);},title:\"\".concat(t(\"labels.ungroup\"),\" \\u2014 \").concat(getShortcutKey(\"CtrlOrCmd+Shift+G\")),\"aria-label\":t(\"labels.ungroup\"),visible:isSomeElementSelected(getNonDeletedElements(elements),appState)});}});","map":{"version":3,"names":["KEYS","t","arrayToMap","getShortcutKey","register","UngroupIcon","GroupIcon","newElementWith","isSomeElementSelected","getSelectedGroupIds","selectGroup","selectGroupsForSelectedElements","getElementsInGroup","addToGroup","removeFromSelectedGroups","isElementInGroup","getNonDeletedElements","randomId","ToolButton","isBoundToContainer","getElementsInResizingFrame","groupByFrames","removeElementsFromFrame","replaceAllElementsInFrame","jsx","_jsx","allElementsInSameGroup","elements","length","groupIds","_iterator","_createForOfIteratorHelper","_step","_loop","groupId","value","reduce","acc","element","v","s","n","done","_ret","err","e","f","enableActionGroup","appState","app","selectedElements","scene","getSelectedElements","selectedElementIds","includeBoundTextElement","actionGroup","name","trackEvent","category","perform","_","commitToHistory","selectedGroupIds","selectedGroupId","elementIdsInGroup","Set","map","id","combinedSet","concat","_toConsumableArray","Array","from","size","nextElements","groupingElementsFromDifferentFrames","frameId","frameElementsMap","forEach","elementsInFrame","newGroupId","selectElementIds","get","editingGroupId","elementsInGroup","lastElementInGroup","lastGroupElementIndex","lastIndexOf","elementsAfterGroup","slice","elementsBeforeGroup","filter","updatedElement","_objectSpread","contextItemLabel","predicate","keyTest","event","shiftKey","CTRL_OR_CMD","key","G","PanelComponent","_ref","updateData","hidden","type","icon","theme","onClick","title","visible","actionUngroup","frames","getElement","boundTextElementIds","push","nextGroupIds","updateAppState","frame","Object","entries","_ref2","_ref3","_slicedToArray","selected","includes","toUpperCase","_ref4"],"sources":["D:/project/excalidraw-cn/src/actions/actionGroup.tsx"],"sourcesContent":["import { KEYS } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { arrayToMap, getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport { UngroupIcon, GroupIcon } from \"../components/icons\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { isSomeElementSelected } from \"../scene\";\nimport {\n  getSelectedGroupIds,\n  selectGroup,\n  selectGroupsForSelectedElements,\n  getElementsInGroup,\n  addToGroup,\n  removeFromSelectedGroups,\n  isElementInGroup,\n} from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\nimport { randomId } from \"../random\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawFrameElement,\n  ExcalidrawTextElement,\n} from \"../element/types\";\nimport { AppClassProperties, AppState } from \"../types\";\nimport { isBoundToContainer } from \"../element/typeChecks\";\nimport {\n  getElementsInResizingFrame,\n  groupByFrames,\n  removeElementsFromFrame,\n  replaceAllElementsInFrame,\n} from \"../frame\";\n\nconst allElementsInSameGroup = (elements: readonly ExcalidrawElement[]) => {\n  if (elements.length >= 2) {\n    const groupIds = elements[0].groupIds;\n    for (const groupId of groupIds) {\n      if (\n        elements.reduce(\n          (acc, element) => acc && isElementInGroup(element, groupId),\n          true,\n        )\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nconst enableActionGroup = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  app: AppClassProperties,\n) => {\n  const selectedElements = app.scene.getSelectedElements({\n    selectedElementIds: appState.selectedElementIds,\n    includeBoundTextElement: true,\n  });\n  return (\n    selectedElements.length >= 2 && !allElementsInSameGroup(selectedElements)\n  );\n};\n\nexport const actionGroup = register({\n  name: \"group\",\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n    });\n    if (selectedElements.length < 2) {\n      // nothing to group\n      return { appState, elements, commitToHistory: false };\n    }\n    // if everything is already grouped into 1 group, there is nothing to do\n    const selectedGroupIds = getSelectedGroupIds(appState);\n    if (selectedGroupIds.length === 1) {\n      const selectedGroupId = selectedGroupIds[0];\n      const elementIdsInGroup = new Set(\n        getElementsInGroup(elements, selectedGroupId).map(\n          (element) => element.id,\n        ),\n      );\n      const selectedElementIds = new Set(\n        selectedElements.map((element) => element.id),\n      );\n      const combinedSet = new Set([\n        ...Array.from(elementIdsInGroup),\n        ...Array.from(selectedElementIds),\n      ]);\n      if (combinedSet.size === elementIdsInGroup.size) {\n        // no incremental ids in the selected ids\n        return { appState, elements, commitToHistory: false };\n      }\n    }\n\n    let nextElements = [...elements];\n\n    // this includes the case where we are grouping elements inside a frame\n    // and elements outside that frame\n    const groupingElementsFromDifferentFrames =\n      new Set(selectedElements.map((element) => element.frameId)).size > 1;\n    // when it happens, we want to remove elements that are in the frame\n    // and are going to be grouped from the frame (mouthful, I know)\n    if (groupingElementsFromDifferentFrames) {\n      const frameElementsMap = groupByFrames(selectedElements);\n\n      frameElementsMap.forEach((elementsInFrame, frameId) => {\n        nextElements = removeElementsFromFrame(\n          nextElements,\n          elementsInFrame,\n          appState,\n        );\n      });\n    }\n\n    const newGroupId = randomId();\n    const selectElementIds = arrayToMap(selectedElements);\n\n    nextElements = nextElements.map((element) => {\n      if (!selectElementIds.get(element.id)) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: addToGroup(\n          element.groupIds,\n          newGroupId,\n          appState.editingGroupId,\n        ),\n      });\n    });\n    // keep the z order within the group the same, but move them\n    // to the z order of the highest element in the layer stack\n    const elementsInGroup = getElementsInGroup(nextElements, newGroupId);\n    const lastElementInGroup = elementsInGroup[elementsInGroup.length - 1];\n    const lastGroupElementIndex = nextElements.lastIndexOf(lastElementInGroup);\n    const elementsAfterGroup = nextElements.slice(lastGroupElementIndex + 1);\n    const elementsBeforeGroup = nextElements\n      .slice(0, lastGroupElementIndex)\n      .filter(\n        (updatedElement) => !isElementInGroup(updatedElement, newGroupId),\n      );\n    nextElements = [\n      ...elementsBeforeGroup,\n      ...elementsInGroup,\n      ...elementsAfterGroup,\n    ];\n\n    return {\n      appState: selectGroup(\n        newGroupId,\n        { ...appState, selectedGroupIds: {} },\n        getNonDeletedElements(nextElements),\n      ),\n      elements: nextElements,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.group\",\n  predicate: (elements, appState, _, app) =>\n    enableActionGroup(elements, appState, app),\n  keyTest: (event) =>\n    !event.shiftKey && event[KEYS.CTRL_OR_CMD] && event.key === KEYS.G,\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState, app)}\n      type=\"button\"\n      icon={<GroupIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.group\")} — ${getShortcutKey(\"CtrlOrCmd+G\")}`}\n      aria-label={t(\"labels.group\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    ></ToolButton>\n  ),\n});\n\nexport const actionUngroup = register({\n  name: \"ungroup\",\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, _, app) => {\n    const groupIds = getSelectedGroupIds(appState);\n    if (groupIds.length === 0) {\n      return { appState, elements, commitToHistory: false };\n    }\n\n    let nextElements = [...elements];\n\n    const selectedElements = app.scene.getSelectedElements(appState);\n    const frames = selectedElements\n      .filter((element) => element.frameId)\n      .map((element) =>\n        app.scene.getElement(element.frameId!),\n      ) as ExcalidrawFrameElement[];\n\n    const boundTextElementIds: ExcalidrawTextElement[\"id\"][] = [];\n    nextElements = nextElements.map((element) => {\n      if (isBoundToContainer(element)) {\n        boundTextElementIds.push(element.id);\n      }\n      const nextGroupIds = removeFromSelectedGroups(\n        element.groupIds,\n        appState.selectedGroupIds,\n      );\n      if (nextGroupIds.length === element.groupIds.length) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: nextGroupIds,\n      });\n    });\n\n    const updateAppState = selectGroupsForSelectedElements(\n      { ...appState, selectedGroupIds: {} },\n      getNonDeletedElements(nextElements),\n      appState,\n      null,\n    );\n\n    frames.forEach((frame) => {\n      if (frame) {\n        nextElements = replaceAllElementsInFrame(\n          nextElements,\n          getElementsInResizingFrame(nextElements, frame, appState),\n          frame,\n          appState,\n        );\n      }\n    });\n\n    // remove binded text elements from selection\n    updateAppState.selectedElementIds = Object.entries(\n      updateAppState.selectedElementIds,\n    ).reduce(\n      (acc: { [key: ExcalidrawElement[\"id\"]]: true }, [id, selected]) => {\n        if (selected && !boundTextElementIds.includes(id)) {\n          acc[id] = true;\n        }\n        return acc;\n      },\n      {},\n    );\n\n    return {\n      appState: updateAppState,\n      elements: nextElements,\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event.shiftKey &&\n    event[KEYS.CTRL_OR_CMD] &&\n    event.key === KEYS.G.toUpperCase(),\n  contextItemLabel: \"labels.ungroup\",\n  predicate: (elements, appState) => getSelectedGroupIds(appState).length > 0,\n\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      hidden={getSelectedGroupIds(appState).length === 0}\n      icon={<UngroupIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.ungroup\")} — ${getShortcutKey(\"CtrlOrCmd+Shift+G\")}`}\n      aria-label={t(\"labels.ungroup\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    ></ToolButton>\n  ),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}