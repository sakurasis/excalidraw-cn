{"ast":null,"code":"import _toConsumableArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{nanoid}from\"nanoid\";import{cleanAppStateForExport}from\"../appState\";import{IMAGE_MIME_TYPES,MIME_TYPES}from\"../constants\";import{clearElementsForExport}from\"../element\";import{CanvasError}from\"../errors\";import{t}from\"../i18n\";import{calculateScrollCenter}from\"../scene\";import{bytesToHexString}from\"../utils\";import{nativeFileSystemSupported}from\"./filesystem\";import{isValidExcalidrawData,isValidLibrary}from\"./json\";import{restore,restoreLibraryItems}from\"./restore\";var parseFileContents=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(blob){var contents;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!(blob.type===MIME_TYPES.png)){_context.next=18;break;}_context.prev=1;_context.next=4;return import(/* webpackChunkName: \"image\" */\"./image\");case 4:_context.next=6;return _context.sent.decodePngMetadata(blob);case 6:return _context.abrupt(\"return\",_context.sent);case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);if(!(_context.t0.message===\"INVALID\")){_context.next=15;break;}throw new DOMException(t(\"alerts.imageDoesNotContainScene\"),\"EncodingError\");case 15:throw new DOMException(t(\"alerts.cannotRestoreFromImage\"),\"EncodingError\");case 16:_context.next=43;break;case 18:if(!(\"text\"in Blob)){_context.next=24;break;}_context.next=21;return blob.text();case 21:contents=_context.sent;_context.next=27;break;case 24:_context.next=26;return new Promise(function(resolve){var reader=new FileReader();reader.readAsText(blob,\"utf8\");reader.onloadend=function(){if(reader.readyState===FileReader.DONE){resolve(reader.result);}};});case 26:contents=_context.sent;case 27:if(!(blob.type===MIME_TYPES.svg)){_context.next=43;break;}_context.prev=28;_context.next=31;return import(/* webpackChunkName: \"image\" */\"./image\");case 31:_context.next=33;return _context.sent.decodeSvgMetadata({svg:contents});case 33:return _context.abrupt(\"return\",_context.sent);case 36:_context.prev=36;_context.t1=_context[\"catch\"](28);if(!(_context.t1.message===\"INVALID\")){_context.next=42;break;}throw new DOMException(t(\"alerts.imageDoesNotContainScene\"),\"EncodingError\");case 42:throw new DOMException(t(\"alerts.cannotRestoreFromImage\"),\"EncodingError\");case 43:return _context.abrupt(\"return\",contents);case 44:case\"end\":return _context.stop();}},_callee,null,[[1,9],[28,36]]);}));return function parseFileContents(_x){return _ref.apply(this,arguments);};}();export var getMimeType=function getMimeType(blob){var name;if(typeof blob===\"string\"){name=blob;}else{if(blob.type){return blob.type;}name=blob.name||\"\";}if(/\\.(excalidraw|json)$/.test(name)){return MIME_TYPES.json;}else if(/\\.png$/.test(name)){return MIME_TYPES.png;}else if(/\\.jpe?g$/.test(name)){return MIME_TYPES.jpg;}else if(/\\.svg$/.test(name)){return MIME_TYPES.svg;}return\"\";};export var getFileHandleType=function getFileHandleType(handle){var _handle$name$match;if(!handle){return null;}return((_handle$name$match=handle.name.match(/\\.(json|excalidraw|png|svg)$/))===null||_handle$name$match===void 0?void 0:_handle$name$match[1])||null;};export var isImageFileHandleType=function isImageFileHandleType(type){return type===\"png\"||type===\"svg\";};export var isImageFileHandle=function isImageFileHandle(handle){var type=getFileHandleType(handle);return type===\"png\"||type===\"svg\";};export var isSupportedImageFile=function isSupportedImageFile(blob){var _ref2=blob||{},type=_ref2.type;return!!type&&Object.values(IMAGE_MIME_TYPES).includes(type);};export var loadSceneOrLibraryFromBlob=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(blob,localAppState,localElements,fileHandle){var contents,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return parseFileContents(blob);case 2:contents=_context2.sent;_context2.prev=3;data=JSON.parse(contents);if(!isValidExcalidrawData(data)){_context2.next=9;break;}return _context2.abrupt(\"return\",{type:MIME_TYPES.excalidraw,data:restore({elements:clearElementsForExport(data.elements||[]),appState:_objectSpread(_objectSpread({theme:localAppState===null||localAppState===void 0?void 0:localAppState.theme,fileHandle:fileHandle||blob.handle||null},cleanAppStateForExport(data.appState||{})),localAppState?calculateScrollCenter(data.elements||[],localAppState,null):{}),files:data.files},localAppState,localElements,{repairBindings:true,refreshDimensions:false})});case 9:if(!isValidLibrary(data)){_context2.next=11;break;}return _context2.abrupt(\"return\",{type:MIME_TYPES.excalidrawlib,data:data});case 11:throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](3);console.error(_context2.t0.message);throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));case 18:case\"end\":return _context2.stop();}},_callee2,null,[[3,14]]);}));return function loadSceneOrLibraryFromBlob(_x2,_x3,_x4,_x5){return _ref3.apply(this,arguments);};}();export var loadFromBlob=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(blob,localAppState,localElements,fileHandle){var ret;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return loadSceneOrLibraryFromBlob(blob,localAppState,localElements,fileHandle);case 2:ret=_context3.sent;if(!(ret.type!==MIME_TYPES.excalidraw)){_context3.next=5;break;}throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));case 5:return _context3.abrupt(\"return\",ret.data);case 6:case\"end\":return _context3.stop();}},_callee3);}));return function loadFromBlob(_x6,_x7,_x8,_x9){return _ref4.apply(this,arguments);};}();export var parseLibraryJSON=function parseLibraryJSON(json){var defaultStatus=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"unpublished\";var data=JSON.parse(json);if(!isValidLibrary(data)){throw new Error(\"Invalid library\");}var libraryItems=data.libraryItems||data.library;return restoreLibraryItems(libraryItems,defaultStatus);};export var loadLibraryFromBlob=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(blob){var defaultStatus,_args4=arguments;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:defaultStatus=_args4.length>1&&_args4[1]!==undefined?_args4[1]:\"unpublished\";_context4.t0=parseLibraryJSON;_context4.next=4;return parseFileContents(blob);case 4:_context4.t1=_context4.sent;_context4.t2=defaultStatus;return _context4.abrupt(\"return\",(0,_context4.t0)(_context4.t1,_context4.t2));case 7:case\"end\":return _context4.stop();}},_callee4);}));return function loadLibraryFromBlob(_x10){return _ref5.apply(this,arguments);};}();export var canvasToBlob=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(canvas){return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:return _context5.abrupt(\"return\",new Promise(function(resolve,reject){try{canvas.toBlob(function(blob){if(!blob){return reject(new CanvasError(t(\"canvasError.canvasTooBig\"),\"CANVAS_POSSIBLY_TOO_BIG\"));}resolve(blob);});}catch(error){reject(error);}}));case 1:case\"end\":return _context5.stop();}},_callee5);}));return function canvasToBlob(_x11){return _ref6.apply(this,arguments);};}();/** generates SHA-1 digest from supplied file (if not supported, falls back\n    to a 40-char base64 random id) */export var generateIdFromFile=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(file){var hashBuffer;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.t0=window.crypto.subtle;_context6.next=4;return blobToArrayBuffer(file);case 4:_context6.t1=_context6.sent;_context6.next=7;return _context6.t0.digest.call(_context6.t0,\"SHA-1\",_context6.t1);case 7:hashBuffer=_context6.sent;return _context6.abrupt(\"return\",bytesToHexString(new Uint8Array(hashBuffer)));case 11:_context6.prev=11;_context6.t2=_context6[\"catch\"](0);console.error(_context6.t2);// length 40 to align with the HEX length of SHA-1 (which is 160 bit)\nreturn _context6.abrupt(\"return\",nanoid(40));case 15:case\"end\":return _context6.stop();}},_callee6,null,[[0,11]]);}));return function generateIdFromFile(_x12){return _ref7.apply(this,arguments);};}();export var getDataURL=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(file){return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:return _context7.abrupt(\"return\",new Promise(function(resolve,reject){var reader=new FileReader();reader.onload=function(){var dataURL=reader.result;resolve(dataURL);};reader.onerror=function(error){return reject(error);};reader.readAsDataURL(file);}));case 1:case\"end\":return _context7.stop();}},_callee7);}));return function getDataURL(_x13){return _ref8.apply(this,arguments);};}();export var dataURLToFile=function dataURLToFile(dataURL){var filename=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";var dataIndexStart=dataURL.indexOf(\",\");var byteString=atob(dataURL.slice(dataIndexStart+1));var mimeType=dataURL.slice(0,dataIndexStart).split(\":\")[1].split(\";\")[0];var ab=new ArrayBuffer(byteString.length);var ia=new Uint8Array(ab);for(var i=0;i<byteString.length;i++){ia[i]=byteString.charCodeAt(i);}return new File([ab],filename,{type:mimeType});};export var resizeImageFile=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(file,opts){var _yield$Promise$all,_yield$Promise$all2,pica,imageBlobReduce,reduce,outputType;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1)switch(_context8.prev=_context8.next){case 0:if(!(file.type===MIME_TYPES.svg)){_context8.next=2;break;}return _context8.abrupt(\"return\",file);case 2:_context8.next=4;return Promise.all([import(\"pica\").then(function(res){return res.default;}),// a wrapper for pica for better API\nimport(\"image-blob-reduce\").then(function(res){return res.default;})]);case 4:_yield$Promise$all=_context8.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);pica=_yield$Promise$all2[0];imageBlobReduce=_yield$Promise$all2[1];// CRA's minification settings break pica in WebWorkers, so let's disable\n// them for now\n// https://github.com/nodeca/image-blob-reduce/issues/21#issuecomment-757365513\nreduce=imageBlobReduce({pica:pica({features:[\"js\",\"wasm\"]})});if(opts.outputType){outputType=opts.outputType;reduce._create_blob=function(env){return this.pica.toBlob(env.out_canvas,outputType,0.8).then(function(blob){env.out_blob=blob;return env;});};}if(isSupportedImageFile(file)){_context8.next=12;break;}throw new Error(t(\"errors.unsupportedFileType\"));case 12:_context8.t0=File;_context8.next=15;return reduce.toBlob(file,{max:opts.maxWidthOrHeight});case 15:_context8.t1=_context8.sent;_context8.t2=[_context8.t1];_context8.t3=file.name;_context8.t4={type:opts.outputType||file.type};return _context8.abrupt(\"return\",new _context8.t0(_context8.t2,_context8.t3,_context8.t4));case 20:case\"end\":return _context8.stop();}},_callee8);}));return function resizeImageFile(_x14,_x15){return _ref9.apply(this,arguments);};}();export var SVGStringToFile=function SVGStringToFile(SVGString){var filename=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";return new File([new TextEncoder().encode(SVGString)],filename,{type:MIME_TYPES.svg});};export var getFileFromEvent=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(event){var file,fileHandle;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1)switch(_context9.prev=_context9.next){case 0:file=event.dataTransfer.files.item(0);_context9.next=3;return getFileHandle(event);case 3:fileHandle=_context9.sent;if(!file){_context9.next=10;break;}_context9.next=7;return normalizeFile(file);case 7:_context9.t0=_context9.sent;_context9.next=11;break;case 10:_context9.t0=null;case 11:_context9.t1=_context9.t0;_context9.t2=fileHandle;return _context9.abrupt(\"return\",{file:_context9.t1,fileHandle:_context9.t2});case 14:case\"end\":return _context9.stop();}},_callee9);}));return function getFileFromEvent(_x16){return _ref10.apply(this,arguments);};}();export var getFileHandle=/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(event){var item,handle;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1)switch(_context10.prev=_context10.next){case 0:if(!nativeFileSystemSupported){_context10.next=16;break;}_context10.prev=1;item=event.dataTransfer.items[0];_context10.next=5;return item.getAsFileSystemHandle();case 5:_context10.t0=_context10.sent;if(_context10.t0){_context10.next=8;break;}_context10.t0=null;case 8:handle=_context10.t0;return _context10.abrupt(\"return\",handle);case 12:_context10.prev=12;_context10.t1=_context10[\"catch\"](1);console.warn(_context10.t1.name,_context10.t1.message);return _context10.abrupt(\"return\",null);case 16:return _context10.abrupt(\"return\",null);case 17:case\"end\":return _context10.stop();}},_callee10,null,[[1,12]]);}));return function getFileHandle(_x17){return _ref11.apply(this,arguments);};}();/**\n * attempts to detect if a buffer is a valid image by checking its leading bytes\n */var getActualMimeTypeFromImage=function getActualMimeTypeFromImage(buffer){var mimeType=null;var first8Bytes=\"\".concat(_toConsumableArray(new Uint8Array(buffer).slice(0,8)).join(\" \"),\" \");// uint8 leading bytes\nvar headerBytes={// https://en.wikipedia.org/wiki/Portable_Network_Graphics#File_header\npng:\"137 80 78 71 13 10 26 10 \",// https://en.wikipedia.org/wiki/JPEG#Syntax_and_structure\n// jpg is a bit wonky. Checking the first three bytes should be enough,\n// but may yield false positives. (https://stackoverflow.com/a/23360709/927631)\njpg:\"255 216 255 \",// https://en.wikipedia.org/wiki/GIF#Example_GIF_file\ngif:\"71 73 70 56 57 97 \"};if(first8Bytes===headerBytes.png){mimeType=MIME_TYPES.png;}else if(first8Bytes.startsWith(headerBytes.jpg)){mimeType=MIME_TYPES.jpg;}else if(first8Bytes.startsWith(headerBytes.gif)){mimeType=MIME_TYPES.gif;}return mimeType;};export var createFile=function createFile(blob,mimeType,name){return new File([blob],name||\"\",{type:mimeType});};/** attempts to detect correct mimeType if none is set, or if an image\n * has an incorrect extension.\n * Note: doesn't handle missing .excalidraw/.excalidrawlib extension  */export var normalizeFile=/*#__PURE__*/function(){var _ref12=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(file){var _file,_file$name,_file2,_file2$name,buffer,mimeType,_buffer,_mimeType;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1)switch(_context11.prev=_context11.next){case 0:if(file.type){_context11.next=28;break;}if(!((_file=file)!==null&&_file!==void 0&&(_file$name=_file.name)!==null&&_file$name!==void 0&&_file$name.endsWith(\".excalidrawlib\"))){_context11.next=11;break;}_context11.t0=createFile;_context11.next=5;return blobToArrayBuffer(file);case 5:_context11.t1=_context11.sent;_context11.t2=MIME_TYPES.excalidrawlib;_context11.t3=file.name;file=(0,_context11.t0)(_context11.t1,_context11.t2,_context11.t3);_context11.next=26;break;case 11:if(!((_file2=file)!==null&&_file2!==void 0&&(_file2$name=_file2.name)!==null&&_file2$name!==void 0&&_file2$name.endsWith(\".excalidraw\"))){_context11.next=21;break;}_context11.t4=createFile;_context11.next=15;return blobToArrayBuffer(file);case 15:_context11.t5=_context11.sent;_context11.t6=MIME_TYPES.excalidraw;_context11.t7=file.name;file=(0,_context11.t4)(_context11.t5,_context11.t6,_context11.t7);_context11.next=26;break;case 21:_context11.next=23;return blobToArrayBuffer(file);case 23:buffer=_context11.sent;mimeType=getActualMimeTypeFromImage(buffer);if(mimeType){file=createFile(buffer,mimeType,file.name);}case 26:_context11.next=34;break;case 28:if(!isSupportedImageFile(file)){_context11.next=34;break;}_context11.next=31;return blobToArrayBuffer(file);case 31:_buffer=_context11.sent;_mimeType=getActualMimeTypeFromImage(_buffer);if(_mimeType&&_mimeType!==file.type){file=createFile(_buffer,_mimeType,file.name);}case 34:return _context11.abrupt(\"return\",file);case 35:case\"end\":return _context11.stop();}},_callee11);}));return function normalizeFile(_x18){return _ref12.apply(this,arguments);};}();export var blobToArrayBuffer=function blobToArrayBuffer(blob){if(\"arrayBuffer\"in blob){return blob.arrayBuffer();}// Safari\nreturn new Promise(function(resolve,reject){var reader=new FileReader();reader.onload=function(event){var _event$target;if(!((_event$target=event.target)!==null&&_event$target!==void 0&&_event$target.result)){return reject(new Error(\"Couldn't convert blob to ArrayBuffer\"));}resolve(event.target.result);};reader.readAsArrayBuffer(blob);});};","map":{"version":3,"names":["nanoid","cleanAppStateForExport","IMAGE_MIME_TYPES","MIME_TYPES","clearElementsForExport","CanvasError","t","calculateScrollCenter","bytesToHexString","nativeFileSystemSupported","isValidExcalidrawData","isValidLibrary","restore","restoreLibraryItems","parseFileContents","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","blob","contents","wrap","_callee$","_context","prev","next","type","png","sent","decodePngMetadata","abrupt","t0","message","DOMException","Blob","text","Promise","resolve","reader","FileReader","readAsText","onloadend","readyState","DONE","result","svg","decodeSvgMetadata","t1","stop","_x","apply","arguments","getMimeType","name","test","json","jpg","getFileHandleType","handle","_handle$name$match","match","isImageFileHandleType","isImageFileHandle","isSupportedImageFile","_ref2","Object","values","includes","loadSceneOrLibraryFromBlob","_ref3","_callee2","localAppState","localElements","fileHandle","data","_callee2$","_context2","JSON","parse","excalidraw","elements","appState","_objectSpread","theme","files","repairBindings","refreshDimensions","excalidrawlib","Error","console","error","_x2","_x3","_x4","_x5","loadFromBlob","_ref4","_callee3","ret","_callee3$","_context3","_x6","_x7","_x8","_x9","parseLibraryJSON","defaultStatus","length","undefined","libraryItems","library","loadLibraryFromBlob","_ref5","_callee4","_args4","_callee4$","_context4","t2","_x10","canvasToBlob","_ref6","_callee5","canvas","_callee5$","_context5","reject","toBlob","_x11","generateIdFromFile","_ref7","_callee6","file","hashBuffer","_callee6$","_context6","window","crypto","subtle","blobToArrayBuffer","digest","call","Uint8Array","_x12","getDataURL","_ref8","_callee7","_callee7$","_context7","onload","dataURL","onerror","readAsDataURL","_x13","dataURLToFile","filename","dataIndexStart","indexOf","byteString","atob","slice","mimeType","split","ab","ArrayBuffer","ia","i","charCodeAt","File","resizeImageFile","_ref9","_callee8","opts","_yield$Promise$all","_yield$Promise$all2","pica","imageBlobReduce","reduce","outputType","_callee8$","_context8","all","then","res","default","_slicedToArray","features","_create_blob","env","out_canvas","out_blob","max","maxWidthOrHeight","t3","t4","_x14","_x15","SVGStringToFile","SVGString","TextEncoder","encode","getFileFromEvent","_ref10","_callee9","event","_callee9$","_context9","dataTransfer","item","getFileHandle","normalizeFile","_x16","_ref11","_callee10","_callee10$","_context10","items","getAsFileSystemHandle","warn","_x17","getActualMimeTypeFromImage","buffer","first8Bytes","concat","_toConsumableArray","join","headerBytes","gif","startsWith","createFile","_ref12","_callee11","_file","_file$name","_file2","_file2$name","_buffer","_mimeType","_callee11$","_context11","endsWith","t5","t6","t7","_x18","arrayBuffer","_event$target","target","readAsArrayBuffer"],"sources":["D:/project/excalidraw-cn/src/data/blob.ts"],"sourcesContent":["import { nanoid } from \"nanoid\";\nimport { cleanAppStateForExport } from \"../appState\";\nimport { IMAGE_MIME_TYPES, MIME_TYPES } from \"../constants\";\nimport { clearElementsForExport } from \"../element\";\nimport { ExcalidrawElement, FileId } from \"../element/types\";\nimport { CanvasError } from \"../errors\";\nimport { t } from \"../i18n\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { AppState, DataURL, LibraryItem } from \"../types\";\nimport { ValueOf } from \"../utility-types\";\nimport { bytesToHexString } from \"../utils\";\nimport { FileSystemHandle, nativeFileSystemSupported } from \"./filesystem\";\nimport { isValidExcalidrawData, isValidLibrary } from \"./json\";\nimport { restore, restoreLibraryItems } from \"./restore\";\nimport { ImportedLibraryData } from \"./types\";\n\nconst parseFileContents = async (blob: Blob | File) => {\n  let contents: string;\n\n  if (blob.type === MIME_TYPES.png) {\n    try {\n      return await (\n        await import(/* webpackChunkName: \"image\" */ \"./image\")\n      ).decodePngMetadata(blob);\n    } catch (error: any) {\n      if (error.message === \"INVALID\") {\n        throw new DOMException(\n          t(\"alerts.imageDoesNotContainScene\"),\n          \"EncodingError\",\n        );\n      } else {\n        throw new DOMException(\n          t(\"alerts.cannotRestoreFromImage\"),\n          \"EncodingError\",\n        );\n      }\n    }\n  } else {\n    if (\"text\" in Blob) {\n      contents = await blob.text();\n    } else {\n      contents = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsText(blob, \"utf8\");\n        reader.onloadend = () => {\n          if (reader.readyState === FileReader.DONE) {\n            resolve(reader.result as string);\n          }\n        };\n      });\n    }\n    if (blob.type === MIME_TYPES.svg) {\n      try {\n        return await (\n          await import(/* webpackChunkName: \"image\" */ \"./image\")\n        ).decodeSvgMetadata({\n          svg: contents,\n        });\n      } catch (error: any) {\n        if (error.message === \"INVALID\") {\n          throw new DOMException(\n            t(\"alerts.imageDoesNotContainScene\"),\n            \"EncodingError\",\n          );\n        } else {\n          throw new DOMException(\n            t(\"alerts.cannotRestoreFromImage\"),\n            \"EncodingError\",\n          );\n        }\n      }\n    }\n  }\n  return contents;\n};\n\nexport const getMimeType = (blob: Blob | string): string => {\n  let name: string;\n  if (typeof blob === \"string\") {\n    name = blob;\n  } else {\n    if (blob.type) {\n      return blob.type;\n    }\n    name = blob.name || \"\";\n  }\n  if (/\\.(excalidraw|json)$/.test(name)) {\n    return MIME_TYPES.json;\n  } else if (/\\.png$/.test(name)) {\n    return MIME_TYPES.png;\n  } else if (/\\.jpe?g$/.test(name)) {\n    return MIME_TYPES.jpg;\n  } else if (/\\.svg$/.test(name)) {\n    return MIME_TYPES.svg;\n  }\n  return \"\";\n};\n\nexport const getFileHandleType = (handle: FileSystemHandle | null) => {\n  if (!handle) {\n    return null;\n  }\n\n  return handle.name.match(/\\.(json|excalidraw|png|svg)$/)?.[1] || null;\n};\n\nexport const isImageFileHandleType = (\n  type: string | null,\n): type is \"png\" | \"svg\" => {\n  return type === \"png\" || type === \"svg\";\n};\n\nexport const isImageFileHandle = (handle: FileSystemHandle | null) => {\n  const type = getFileHandleType(handle);\n  return type === \"png\" || type === \"svg\";\n};\n\nexport const isSupportedImageFile = (\n  blob: Blob | null | undefined,\n): blob is Blob & { type: ValueOf<typeof IMAGE_MIME_TYPES> } => {\n  const { type } = blob || {};\n  return !!type && (Object.values(IMAGE_MIME_TYPES) as string[]).includes(type);\n};\n\nexport const loadSceneOrLibraryFromBlob = async (\n  blob: Blob | File,\n  /** @see restore.localAppState */\n  localAppState: AppState | null,\n  localElements: readonly ExcalidrawElement[] | null,\n  /** FileSystemHandle. Defaults to `blob.handle` if defined, otherwise null. */\n  fileHandle?: FileSystemHandle | null,\n) => {\n  const contents = await parseFileContents(blob);\n  try {\n    const data = JSON.parse(contents);\n    if (isValidExcalidrawData(data)) {\n      return {\n        type: MIME_TYPES.excalidraw,\n        data: restore(\n          {\n            elements: clearElementsForExport(data.elements || []),\n            appState: {\n              theme: localAppState?.theme,\n              fileHandle: fileHandle || blob.handle || null,\n              ...cleanAppStateForExport(data.appState || {}),\n              ...(localAppState\n                ? calculateScrollCenter(\n                    data.elements || [],\n                    localAppState,\n                    null,\n                  )\n                : {}),\n            },\n            files: data.files,\n          },\n          localAppState,\n          localElements,\n          { repairBindings: true, refreshDimensions: false },\n        ),\n      };\n    } else if (isValidLibrary(data)) {\n      return {\n        type: MIME_TYPES.excalidrawlib,\n        data,\n      };\n    }\n    throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n  } catch (error: any) {\n    console.error(error.message);\n    throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n  }\n};\n\nexport const loadFromBlob = async (\n  blob: Blob,\n  /** @see restore.localAppState */\n  localAppState: AppState | null,\n  localElements: readonly ExcalidrawElement[] | null,\n  /** FileSystemHandle. Defaults to `blob.handle` if defined, otherwise null. */\n  fileHandle?: FileSystemHandle | null,\n) => {\n  const ret = await loadSceneOrLibraryFromBlob(\n    blob,\n    localAppState,\n    localElements,\n    fileHandle,\n  );\n  if (ret.type !== MIME_TYPES.excalidraw) {\n    throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n  }\n  return ret.data;\n};\n\nexport const parseLibraryJSON = (\n  json: string,\n  defaultStatus: LibraryItem[\"status\"] = \"unpublished\",\n) => {\n  const data: ImportedLibraryData | undefined = JSON.parse(json);\n  if (!isValidLibrary(data)) {\n    throw new Error(\"Invalid library\");\n  }\n  const libraryItems = data.libraryItems || data.library;\n  return restoreLibraryItems(libraryItems, defaultStatus);\n};\n\nexport const loadLibraryFromBlob = async (\n  blob: Blob,\n  defaultStatus: LibraryItem[\"status\"] = \"unpublished\",\n) => {\n  return parseLibraryJSON(await parseFileContents(blob), defaultStatus);\n};\n\nexport const canvasToBlob = async (\n  canvas: HTMLCanvasElement,\n): Promise<Blob> => {\n  return new Promise((resolve, reject) => {\n    try {\n      canvas.toBlob((blob) => {\n        if (!blob) {\n          return reject(\n            new CanvasError(\n              t(\"canvasError.canvasTooBig\"),\n              \"CANVAS_POSSIBLY_TOO_BIG\",\n            ),\n          );\n        }\n        resolve(blob);\n      });\n    } catch (error: any) {\n      reject(error);\n    }\n  });\n};\n\n/** generates SHA-1 digest from supplied file (if not supported, falls back\n    to a 40-char base64 random id) */\nexport const generateIdFromFile = async (file: File): Promise<FileId> => {\n  try {\n    const hashBuffer = await window.crypto.subtle.digest(\n      \"SHA-1\",\n      await blobToArrayBuffer(file),\n    );\n    return bytesToHexString(new Uint8Array(hashBuffer)) as FileId;\n  } catch (error: any) {\n    console.error(error);\n    // length 40 to align with the HEX length of SHA-1 (which is 160 bit)\n    return nanoid(40) as FileId;\n  }\n};\n\nexport const getDataURL = async (file: Blob | File): Promise<DataURL> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      const dataURL = reader.result as DataURL;\n      resolve(dataURL);\n    };\n    reader.onerror = (error) => reject(error);\n    reader.readAsDataURL(file);\n  });\n};\n\nexport const dataURLToFile = (dataURL: DataURL, filename = \"\") => {\n  const dataIndexStart = dataURL.indexOf(\",\");\n  const byteString = atob(dataURL.slice(dataIndexStart + 1));\n  const mimeType = dataURL.slice(0, dataIndexStart).split(\":\")[1].split(\";\")[0];\n\n  const ab = new ArrayBuffer(byteString.length);\n  const ia = new Uint8Array(ab);\n  for (let i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n  return new File([ab], filename, { type: mimeType });\n};\n\nexport const resizeImageFile = async (\n  file: File,\n  opts: {\n    /** undefined indicates auto */\n    outputType?: typeof MIME_TYPES[\"jpg\"];\n    maxWidthOrHeight: number;\n  },\n): Promise<File> => {\n  // SVG files shouldn't a can't be resized\n  if (file.type === MIME_TYPES.svg) {\n    return file;\n  }\n\n  const [pica, imageBlobReduce] = await Promise.all([\n    import(\"pica\").then((res) => res.default),\n    // a wrapper for pica for better API\n    import(\"image-blob-reduce\").then((res) => res.default),\n  ]);\n\n  // CRA's minification settings break pica in WebWorkers, so let's disable\n  // them for now\n  // https://github.com/nodeca/image-blob-reduce/issues/21#issuecomment-757365513\n  const reduce = imageBlobReduce({\n    pica: pica({ features: [\"js\", \"wasm\"] }),\n  });\n\n  if (opts.outputType) {\n    const { outputType } = opts;\n    reduce._create_blob = function (env) {\n      return this.pica.toBlob(env.out_canvas, outputType, 0.8).then((blob) => {\n        env.out_blob = blob;\n        return env;\n      });\n    };\n  }\n\n  if (!isSupportedImageFile(file)) {\n    throw new Error(t(\"errors.unsupportedFileType\"));\n  }\n\n  return new File(\n    [await reduce.toBlob(file, { max: opts.maxWidthOrHeight })],\n    file.name,\n    {\n      type: opts.outputType || file.type,\n    },\n  );\n};\n\nexport const SVGStringToFile = (SVGString: string, filename: string = \"\") => {\n  return new File([new TextEncoder().encode(SVGString)], filename, {\n    type: MIME_TYPES.svg,\n  }) as File & { type: typeof MIME_TYPES.svg };\n};\n\nexport const getFileFromEvent = async (\n  event: React.DragEvent<HTMLDivElement>,\n) => {\n  const file = event.dataTransfer.files.item(0);\n  const fileHandle = await getFileHandle(event);\n\n  return { file: file ? await normalizeFile(file) : null, fileHandle };\n};\n\nexport const getFileHandle = async (\n  event: React.DragEvent<HTMLDivElement>,\n): Promise<FileSystemHandle | null> => {\n  if (nativeFileSystemSupported) {\n    try {\n      const item = event.dataTransfer.items[0];\n      const handle: FileSystemHandle | null =\n        (await (item as any).getAsFileSystemHandle()) || null;\n\n      return handle;\n    } catch (error: any) {\n      console.warn(error.name, error.message);\n      return null;\n    }\n  }\n  return null;\n};\n\n/**\n * attempts to detect if a buffer is a valid image by checking its leading bytes\n */\nconst getActualMimeTypeFromImage = (buffer: ArrayBuffer) => {\n  let mimeType: ValueOf<Pick<typeof MIME_TYPES, \"png\" | \"jpg\" | \"gif\">> | null =\n    null;\n\n  const first8Bytes = `${[...new Uint8Array(buffer).slice(0, 8)].join(\" \")} `;\n\n  // uint8 leading bytes\n  const headerBytes = {\n    // https://en.wikipedia.org/wiki/Portable_Network_Graphics#File_header\n    png: \"137 80 78 71 13 10 26 10 \",\n    // https://en.wikipedia.org/wiki/JPEG#Syntax_and_structure\n    // jpg is a bit wonky. Checking the first three bytes should be enough,\n    // but may yield false positives. (https://stackoverflow.com/a/23360709/927631)\n    jpg: \"255 216 255 \",\n    // https://en.wikipedia.org/wiki/GIF#Example_GIF_file\n    gif: \"71 73 70 56 57 97 \",\n  };\n\n  if (first8Bytes === headerBytes.png) {\n    mimeType = MIME_TYPES.png;\n  } else if (first8Bytes.startsWith(headerBytes.jpg)) {\n    mimeType = MIME_TYPES.jpg;\n  } else if (first8Bytes.startsWith(headerBytes.gif)) {\n    mimeType = MIME_TYPES.gif;\n  }\n  return mimeType;\n};\n\nexport const createFile = (\n  blob: File | Blob | ArrayBuffer,\n  mimeType: ValueOf<typeof MIME_TYPES>,\n  name: string | undefined,\n) => {\n  return new File([blob], name || \"\", {\n    type: mimeType,\n  });\n};\n\n/** attempts to detect correct mimeType if none is set, or if an image\n * has an incorrect extension.\n * Note: doesn't handle missing .excalidraw/.excalidrawlib extension  */\nexport const normalizeFile = async (file: File) => {\n  if (!file.type) {\n    if (file?.name?.endsWith(\".excalidrawlib\")) {\n      file = createFile(\n        await blobToArrayBuffer(file),\n        MIME_TYPES.excalidrawlib,\n        file.name,\n      );\n    } else if (file?.name?.endsWith(\".excalidraw\")) {\n      file = createFile(\n        await blobToArrayBuffer(file),\n        MIME_TYPES.excalidraw,\n        file.name,\n      );\n    } else {\n      const buffer = await blobToArrayBuffer(file);\n      const mimeType = getActualMimeTypeFromImage(buffer);\n      if (mimeType) {\n        file = createFile(buffer, mimeType, file.name);\n      }\n    }\n    // when the file is an image, make sure the extension corresponds to the\n    // actual mimeType (this is an edge case, but happens sometime)\n  } else if (isSupportedImageFile(file)) {\n    const buffer = await blobToArrayBuffer(file);\n    const mimeType = getActualMimeTypeFromImage(buffer);\n    if (mimeType && mimeType !== file.type) {\n      file = createFile(buffer, mimeType, file.name);\n    }\n  }\n\n  return file;\n};\n\nexport const blobToArrayBuffer = (blob: Blob): Promise<ArrayBuffer> => {\n  if (\"arrayBuffer\" in blob) {\n    return blob.arrayBuffer();\n  }\n  // Safari\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      if (!event.target?.result) {\n        return reject(new Error(\"Couldn't convert blob to ArrayBuffer\"));\n      }\n      resolve(event.target.result as ArrayBuffer);\n    };\n    reader.readAsArrayBuffer(blob);\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}