{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\MobileMenu.tsx\";\nimport React from \"react\";\nimport { t } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { SCROLLBAR_WIDTH, SCROLLBAR_MARGIN } from \"../scene/scrollbars\";\nimport { LockButton } from \"./LockButton\";\nimport { PenModeButton } from \"./PenModeButton\";\nimport { Stats } from \"./Stats\";\nimport { actionToggleStats } from \"../actions\";\nimport { HandButton } from \"./HandButton\";\nimport { isHandToolActive } from \"../appState\";\nimport { useTunnels } from \"../context/tunnels\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MobileMenu = _ref => {\n  let {\n    appState,\n    elements,\n    actionManager,\n    setAppState,\n    onLockToggle,\n    onHandToolToggle,\n    onPenModeToggle,\n    canvas,\n    onImageAction,\n    renderTopRightUI,\n    renderCustomStats,\n    renderSidebars,\n    device,\n    renderWelcomeScreen,\n    app\n  } = _ref;\n  const {\n    WelcomeScreenCenterTunnel,\n    MainMenuTunnel,\n    DefaultSidebarTriggerTunnel\n  } = useTunnels();\n  const renderToolbar = () => {\n    return /*#__PURE__*/_jsxDEV(FixedSideContainer, {\n      side: \"top\",\n      className: \"App-top-bar\",\n      children: [renderWelcomeScreen && /*#__PURE__*/_jsxDEV(WelcomeScreenCenterTunnel.Out, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        heading: \"shapes\",\n        children: heading => /*#__PURE__*/_jsxDEV(Stack.Col, {\n          gap: 4,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Stack.Row, {\n            gap: 1,\n            className: \"App-toolbar-container\",\n            children: [/*#__PURE__*/_jsxDEV(Island, {\n              padding: 1,\n              className: \"App-toolbar App-toolbar--mobile\",\n              children: [heading, /*#__PURE__*/_jsxDEV(Stack.Row, {\n                gap: 1,\n                children: /*#__PURE__*/_jsxDEV(ShapesSwitcher, {\n                  appState: appState,\n                  canvas: canvas,\n                  activeTool: appState.activeTool,\n                  setAppState: setAppState,\n                  onImageAction: _ref2 => {\n                    let {\n                      pointerType\n                    } = _ref2;\n                    onImageAction({\n                      insertOnCanvasDirectly: pointerType !== \"mouse\"\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), renderTopRightUI && renderTopRightUI(true, appState), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-misc-tools-container\",\n              children: [!appState.viewModeEnabled && /*#__PURE__*/_jsxDEV(DefaultSidebarTriggerTunnel.Out, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(PenModeButton, {\n                checked: appState.penMode,\n                onChange: onPenModeToggle,\n                title: t(\"toolBar.penMode\"),\n                isMobile: true,\n                penDetected: appState.penDetected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LockButton, {\n                checked: appState.activeTool.locked,\n                onChange: onLockToggle,\n                title: t(\"toolBar.lock\"),\n                isMobile: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(HandButton, {\n                checked: isHandToolActive(appState),\n                onChange: () => onHandToolToggle(),\n                title: t(\"toolBar.hand\"),\n                isMobile: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HintViewer, {\n        appState: appState,\n        isMobile: true,\n        device: device,\n        app: app\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  };\n  const renderAppToolbar = () => {\n    if (appState.viewModeEnabled) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-toolbar-content\",\n        children: /*#__PURE__*/_jsxDEV(MainMenuTunnel.Out, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-toolbar-content\",\n      children: [/*#__PURE__*/_jsxDEV(MainMenuTunnel.Out, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), actionManager.renderAction(\"toggleEditMenu\"), actionManager.renderAction(\"undo\"), actionManager.renderAction(\"redo\"), actionManager.renderAction(appState.multiElement ? \"finalize\" : \"duplicateSelection\"), actionManager.renderAction(\"deleteSelectedElements\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderSidebars(), !appState.viewModeEnabled && renderToolbar(), !appState.openMenu && appState.showStats && /*#__PURE__*/_jsxDEV(Stats, {\n      appState: appState,\n      setAppState: setAppState,\n      elements: elements,\n      onClose: () => {\n        actionManager.executeAction(actionToggleStats);\n      },\n      renderCustomStats: renderCustomStats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-bottom-bar\",\n      style: {\n        marginBottom: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        marginLeft: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        marginRight: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Island, {\n        padding: 0,\n        children: [appState.openMenu === \"shape\" && !appState.viewModeEnabled && showSelectedShapeActions(appState, elements) ? /*#__PURE__*/_jsxDEV(Section, {\n          className: \"App-mobile-menu\",\n          heading: \"selectedShapeActions\",\n          children: /*#__PURE__*/_jsxDEV(SelectedShapeActions, {\n            appState: appState,\n            elements: elements,\n            renderAction: actionManager.renderAction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"App-toolbar\",\n          children: [renderAppToolbar(), appState.scrolledOutside && !appState.openMenu && !appState.openSidebar && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"scroll-back-to-content\",\n            onClick: () => {\n              setAppState(appState => ({\n                ...calculateScrollCenter(elements, appState, canvas)\n              }));\n            },\n            children: t(\"buttons.scrollBackToContent\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};","map":{"version":3,"names":["React","t","Stack","showSelectedShapeActions","FixedSideContainer","Island","HintViewer","calculateScrollCenter","SelectedShapeActions","ShapesSwitcher","Section","SCROLLBAR_WIDTH","SCROLLBAR_MARGIN","LockButton","PenModeButton","Stats","actionToggleStats","HandButton","isHandToolActive","useTunnels","jsxDEV","_jsxDEV","Fragment","_Fragment","MobileMenu","_ref","appState","elements","actionManager","setAppState","onLockToggle","onHandToolToggle","onPenModeToggle","canvas","onImageAction","renderTopRightUI","renderCustomStats","renderSidebars","device","renderWelcomeScreen","app","WelcomeScreenCenterTunnel","MainMenuTunnel","DefaultSidebarTriggerTunnel","renderToolbar","side","className","children","Out","fileName","_jsxFileName","lineNumber","columnNumber","heading","Col","gap","align","Row","padding","activeTool","_ref2","pointerType","insertOnCanvasDirectly","viewModeEnabled","checked","penMode","onChange","title","isMobile","penDetected","locked","renderAppToolbar","renderAction","multiElement","openMenu","showStats","onClose","executeAction","style","marginBottom","marginLeft","marginRight","scrolledOutside","openSidebar","onClick"],"sources":["D:/project/excalidraw-cn/src/components/MobileMenu.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  AppClassProperties,\n  AppState,\n  Device,\n  ExcalidrawProps,\n  UIAppState,\n} from \"../types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { t } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { SCROLLBAR_WIDTH, SCROLLBAR_MARGIN } from \"../scene/scrollbars\";\nimport { LockButton } from \"./LockButton\";\nimport { PenModeButton } from \"./PenModeButton\";\nimport { Stats } from \"./Stats\";\nimport { actionToggleStats } from \"../actions\";\nimport { HandButton } from \"./HandButton\";\nimport { isHandToolActive } from \"../appState\";\nimport { useTunnels } from \"../context/tunnels\";\n\ntype MobileMenuProps = {\n  appState: UIAppState;\n  actionManager: ActionManager;\n  renderJSONExportDialog: () => React.ReactNode;\n  renderImageExportDialog: () => React.ReactNode;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  elements: readonly NonDeletedExcalidrawElement[];\n  onLockToggle: () => void;\n  onHandToolToggle: () => void;\n  onPenModeToggle: () => void;\n  canvas: HTMLCanvasElement | null;\n\n  onImageAction: (data: { insertOnCanvasDirectly: boolean }) => void;\n  renderTopRightUI?: (\n    isMobile: boolean,\n    appState: UIAppState,\n  ) => JSX.Element | null;\n  renderCustomStats?: ExcalidrawProps[\"renderCustomStats\"];\n  renderSidebars: () => JSX.Element | null;\n  device: Device;\n  renderWelcomeScreen: boolean;\n  app: AppClassProperties;\n};\n\nexport const MobileMenu = ({\n  appState,\n  elements,\n  actionManager,\n  setAppState,\n  onLockToggle,\n  onHandToolToggle,\n  onPenModeToggle,\n  canvas,\n  onImageAction,\n  renderTopRightUI,\n  renderCustomStats,\n  renderSidebars,\n  device,\n  renderWelcomeScreen,\n  app,\n}: MobileMenuProps) => {\n  const {\n    WelcomeScreenCenterTunnel,\n    MainMenuTunnel,\n    DefaultSidebarTriggerTunnel,\n  } = useTunnels();\n  const renderToolbar = () => {\n    return (\n      <FixedSideContainer side=\"top\" className=\"App-top-bar\">\n        {renderWelcomeScreen && <WelcomeScreenCenterTunnel.Out />}\n        <Section heading=\"shapes\">\n          {(heading: React.ReactNode) => (\n            <Stack.Col gap={4} align=\"center\">\n              <Stack.Row gap={1} className=\"App-toolbar-container\">\n                <Island padding={1} className=\"App-toolbar App-toolbar--mobile\">\n                  {heading}\n                  <Stack.Row gap={1}>\n                    <ShapesSwitcher\n                      appState={appState}\n                      canvas={canvas}\n                      activeTool={appState.activeTool}\n                      setAppState={setAppState}\n                      onImageAction={({ pointerType }) => {\n                        onImageAction({\n                          insertOnCanvasDirectly: pointerType !== \"mouse\",\n                        });\n                      }}\n                    />\n                  </Stack.Row>\n                </Island>\n                {renderTopRightUI && renderTopRightUI(true, appState)}\n                <div className=\"mobile-misc-tools-container\">\n                  {!appState.viewModeEnabled && (\n                    <DefaultSidebarTriggerTunnel.Out />\n                  )}\n                  <PenModeButton\n                    checked={appState.penMode}\n                    onChange={onPenModeToggle}\n                    title={t(\"toolBar.penMode\")}\n                    isMobile\n                    penDetected={appState.penDetected}\n                  />\n                  <LockButton\n                    checked={appState.activeTool.locked}\n                    onChange={onLockToggle}\n                    title={t(\"toolBar.lock\")}\n                    isMobile\n                  />\n                  <HandButton\n                    checked={isHandToolActive(appState)}\n                    onChange={() => onHandToolToggle()}\n                    title={t(\"toolBar.hand\")}\n                    isMobile\n                  />\n                </div>\n              </Stack.Row>\n            </Stack.Col>\n          )}\n        </Section>\n        <HintViewer\n          appState={appState}\n          isMobile={true}\n          device={device}\n          app={app}\n        />\n      </FixedSideContainer>\n    );\n  };\n\n  const renderAppToolbar = () => {\n    if (appState.viewModeEnabled) {\n      return (\n        <div className=\"App-toolbar-content\">\n          <MainMenuTunnel.Out />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App-toolbar-content\">\n        <MainMenuTunnel.Out />\n        {actionManager.renderAction(\"toggleEditMenu\")}\n        {actionManager.renderAction(\"undo\")}\n        {actionManager.renderAction(\"redo\")}\n        {actionManager.renderAction(\n          appState.multiElement ? \"finalize\" : \"duplicateSelection\",\n        )}\n        {actionManager.renderAction(\"deleteSelectedElements\")}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {renderSidebars()}\n      {!appState.viewModeEnabled && renderToolbar()}\n      {!appState.openMenu && appState.showStats && (\n        <Stats\n          appState={appState}\n          setAppState={setAppState}\n          elements={elements}\n          onClose={() => {\n            actionManager.executeAction(actionToggleStats);\n          }}\n          renderCustomStats={renderCustomStats}\n        />\n      )}\n      <div\n        className=\"App-bottom-bar\"\n        style={{\n          marginBottom: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n          marginLeft: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n          marginRight: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        }}\n      >\n        <Island padding={0}>\n          {appState.openMenu === \"shape\" &&\n          !appState.viewModeEnabled &&\n          showSelectedShapeActions(appState, elements) ? (\n            <Section className=\"App-mobile-menu\" heading=\"selectedShapeActions\">\n              <SelectedShapeActions\n                appState={appState}\n                elements={elements}\n                renderAction={actionManager.renderAction}\n              />\n            </Section>\n          ) : null}\n          <footer className=\"App-toolbar\">\n            {renderAppToolbar()}\n            {appState.scrolledOutside &&\n              !appState.openMenu &&\n              !appState.openSidebar && (\n                <button\n                  className=\"scroll-back-to-content\"\n                  onClick={() => {\n                    setAppState((appState) => ({\n                      ...calculateScrollCenter(elements, appState, canvas),\n                    }));\n                  }}\n                >\n                  {t(\"buttons.scrollBackToContent\")}\n                </button>\n              )}\n          </footer>\n        </Island>\n      </div>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}