{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\LayerUI.tsx\";\nimport clsx from \"clsx\";\nimport React from \"react\";\nimport { CLASSES, DEFAULT_SIDEBAR, LIBRARY_SIDEBAR_WIDTH } from \"../constants\";\nimport { isTextElement, showSelectedShapeActions } from \"../element\";\nimport { t } from \"../i18n\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { capitalizeString, isShallowEqual } from \"../utils\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ImageExportDialog } from \"./ImageExportDialog\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { HintViewer } from \"./HintViewer\";\nimport { Island } from \"./Island\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { LockButton } from \"./LockButton\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { PasteChartDialog } from \"./PasteChartDialog\";\nimport { Section } from \"./Section\";\nimport { HelpDialog } from \"./HelpDialog\";\nimport Stack from \"./Stack\";\nimport { UserList } from \"./UserList\";\nimport { JSONExportDialog } from \"./JSONExportDialog\";\nimport { PenModeButton } from \"./PenModeButton\";\nimport { trackEvent } from \"../analytics\";\nimport { useDevice } from \"../components/App\";\nimport { Stats } from \"./Stats\";\nimport { actionToggleStats } from \"../actions/actionToggleStats\";\nimport Footer from \"./footer/Footer\";\nimport { isSidebarDockedAtom } from \"./Sidebar/Sidebar\";\nimport { jotaiScope } from \"../jotai\";\nimport { Provider, useAtom, useAtomValue } from \"jotai\";\nimport MainMenu from \"./main-menu/MainMenu\";\nimport { ActiveConfirmDialog } from \"./ActiveConfirmDialog\";\nimport { OverwriteConfirmDialog } from \"./OverwriteConfirm/OverwriteConfirm\";\nimport { HandButton } from \"./HandButton\";\nimport { isHandToolActive } from \"../appState\";\nimport { TunnelsContext, useInitializeTunnels } from \"../context/tunnels\";\nimport { LibraryIcon } from \"./icons\";\nimport { UIAppStateContext } from \"../context/ui-appState\";\nimport { DefaultSidebar } from \"./DefaultSidebar\";\nimport { EyeDropper, activeEyeDropperAtom } from \"./EyeDropper\";\nimport \"./LayerUI.scss\";\nimport \"./Toolbar.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DefaultMainMenu = _ref => {\n  let {\n    UIOptions\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(MainMenu, {\n    __fallback: true,\n    children: [/*#__PURE__*/_jsxDEV(MainMenu.DefaultItems.LoadScene, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainMenu.DefaultItems.SaveToActiveFile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), UIOptions.canvasActions.export && /*#__PURE__*/_jsxDEV(MainMenu.DefaultItems.Export, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 42\n    }, this), UIOptions.canvasActions.saveAsImage && /*#__PURE__*/_jsxDEV(MainMenu.DefaultItems.SaveAsImage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MainMenu.DefaultItems.Help, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainMenu.DefaultItems.ClearCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainMenu.Separator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainMenu.Group, {\n      title: \"Excalidraw links\",\n      children: /*#__PURE__*/_jsxDEV(MainMenu.DefaultItems.Socials, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainMenu.Separator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainMenu.DefaultItems.ToggleTheme, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainMenu.DefaultItems.ChangeCanvasBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\nconst DefaultOverwriteConfirmDialog = () => {\n  return /*#__PURE__*/_jsxDEV(OverwriteConfirmDialog, {\n    __fallback: true,\n    children: [/*#__PURE__*/_jsxDEV(OverwriteConfirmDialog.Actions.SaveToDisk, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OverwriteConfirmDialog.Actions.ExportToImage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\nconst LayerUI = _ref2 => {\n  let {\n    actionManager,\n    appState,\n    files,\n    setAppState,\n    elements,\n    canvas,\n    onLockToggle,\n    onHandToolToggle,\n    onPenModeToggle,\n    showExitZenModeBtn,\n    renderTopRightUI,\n    renderCustomStats,\n    UIOptions,\n    onImageAction,\n    onExportImage,\n    renderWelcomeScreen,\n    children,\n    app\n  } = _ref2;\n  const device = useDevice();\n  const tunnels = useInitializeTunnels();\n  const [eyeDropperState, setEyeDropperState] = useAtom(activeEyeDropperAtom, jotaiScope);\n  const renderJSONExportDialog = () => {\n    if (!UIOptions.canvasActions.export) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(JSONExportDialog, {\n      elements: elements,\n      appState: appState,\n      files: files,\n      actionManager: actionManager,\n      exportOpts: UIOptions.canvasActions.export,\n      canvas: canvas,\n      setAppState: setAppState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  };\n  const renderImageExportDialog = () => {\n    if (!UIOptions.canvasActions.saveAsImage) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(ImageExportDialog, {\n      elements: elements,\n      appState: appState,\n      files: files,\n      actionManager: actionManager,\n      onExportImage: onExportImage,\n      onCloseRequest: () => setAppState({\n        openDialog: null\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  };\n  const renderCanvasActions = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(tunnels.MainMenuTunnel.Out, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), renderWelcomeScreen && /*#__PURE__*/_jsxDEV(tunnels.WelcomeScreenMenuHintTunnel.Out, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n  const renderSelectedShapeActions = () => /*#__PURE__*/_jsxDEV(Section, {\n    heading: \"selectedShapeActions\",\n    className: clsx(\"selected-shape-actions zen-mode-transition\", {\n      \"transition-left\": appState.zenModeEnabled\n    }),\n    children: /*#__PURE__*/_jsxDEV(Island, {\n      className: CLASSES.SHAPE_ACTIONS_MENU,\n      padding: 2,\n      style: {\n        // we want to make sure this doesn't overflow so subtracting the\n        // approximate height of hamburgerMenu + footer\n        maxHeight: `${appState.height - 166}px`\n      },\n      children: /*#__PURE__*/_jsxDEV(SelectedShapeActions, {\n        appState: appState,\n        elements: elements,\n        renderAction: actionManager.renderAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n  const renderFixedSideContainer = () => {\n    var _appState$openSidebar;\n    const shouldRenderSelectedShapeActions = showSelectedShapeActions(appState, elements);\n    return /*#__PURE__*/_jsxDEV(FixedSideContainer, {\n      side: \"top\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-menu App-menu_top\",\n        children: [/*#__PURE__*/_jsxDEV(Stack.Col, {\n          gap: 6,\n          className: clsx(\"App-menu_top__left\"),\n          children: [renderCanvasActions(), shouldRenderSelectedShapeActions && renderSelectedShapeActions()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), !appState.viewModeEnabled && /*#__PURE__*/_jsxDEV(Section, {\n          heading: \"shapes\",\n          className: \"shapes-section\",\n          children: heading => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\"\n            },\n            children: [renderWelcomeScreen && /*#__PURE__*/_jsxDEV(tunnels.WelcomeScreenToolbarHintTunnel.Out, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Stack.Col, {\n              gap: 4,\n              align: \"start\",\n              children: /*#__PURE__*/_jsxDEV(Stack.Row, {\n                gap: 1,\n                className: clsx(\"App-toolbar-container\", {\n                  \"zen-mode\": appState.zenModeEnabled\n                }),\n                children: /*#__PURE__*/_jsxDEV(Island, {\n                  padding: 1,\n                  className: clsx(\"App-toolbar\", {\n                    \"zen-mode\": appState.zenModeEnabled\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(HintViewer, {\n                    appState: appState,\n                    isMobile: device.isMobile,\n                    device: device,\n                    app: app\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 25\n                  }, this), heading, /*#__PURE__*/_jsxDEV(Stack.Row, {\n                    gap: 1,\n                    children: [/*#__PURE__*/_jsxDEV(PenModeButton, {\n                      zenModeEnabled: appState.zenModeEnabled,\n                      checked: appState.penMode,\n                      onChange: onPenModeToggle,\n                      title: t(\"toolBar.penMode\"),\n                      penDetected: appState.penDetected\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(LockButton, {\n                      checked: appState.activeTool.locked,\n                      onChange: onLockToggle,\n                      title: t(\"toolBar.lock\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"App-toolbar__divider\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(HandButton, {\n                      checked: isHandToolActive(appState),\n                      onChange: () => onHandToolToggle(),\n                      title: t(\"toolBar.hand\"),\n                      isMobile: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(ShapesSwitcher, {\n                      appState: appState,\n                      canvas: canvas,\n                      activeTool: appState.activeTool,\n                      setAppState: setAppState,\n                      onImageAction: _ref3 => {\n                        let {\n                          pointerType\n                        } = _ref3;\n                        onImageAction({\n                          insertOnCanvasDirectly: pointerType !== \"mouse\"\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(\"layer-ui__wrapper__top-right zen-mode-transition\", {\n            \"transition-right\": appState.zenModeEnabled\n          }),\n          children: [/*#__PURE__*/_jsxDEV(UserList, {\n            collaborators: appState.collaborators\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), renderTopRightUI === null || renderTopRightUI === void 0 ? void 0 : renderTopRightUI(device.isMobile, appState), !appState.viewModeEnabled && (\n          // hide button when sidebar docked\n          !isSidebarDocked || ((_appState$openSidebar = appState.openSidebar) === null || _appState$openSidebar === void 0 ? void 0 : _appState$openSidebar.name) !== DEFAULT_SIDEBAR.name) && /*#__PURE__*/_jsxDEV(tunnels.DefaultSidebarTriggerTunnel.Out, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  };\n  const renderSidebars = () => {\n    return /*#__PURE__*/_jsxDEV(DefaultSidebar, {\n      __fallback: true,\n      onDock: docked => {\n        trackEvent(\"sidebar\", `toggleDock (${docked ? \"dock\" : \"undock\"})`, `(${device.isMobile ? \"mobile\" : \"desktop\"})`);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this);\n  };\n  const isSidebarDocked = useAtomValue(isSidebarDockedAtom, jotaiScope);\n  const layerUIJSX = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [children, /*#__PURE__*/_jsxDEV(DefaultMainMenu, {\n      UIOptions: UIOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DefaultSidebar.Trigger, {\n      __fallback: true,\n      icon: LibraryIcon,\n      title: capitalizeString(t(\"toolBar.library\")),\n      onToggle: open => {\n        if (open) {\n          trackEvent(\"sidebar\", `${DEFAULT_SIDEBAR.name} (open)`, `button (${device.isMobile ? \"mobile\" : \"desktop\"})`);\n        }\n      },\n      tab: DEFAULT_SIDEBAR.defaultTab,\n      children: t(\"toolBar.library\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DefaultOverwriteConfirmDialog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), appState.isLoading && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n      delay: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 30\n    }, this), appState.errorMessage && /*#__PURE__*/_jsxDEV(ErrorDialog, {\n      onClose: () => setAppState({\n        errorMessage: null\n      }),\n      children: appState.errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this), eyeDropperState && !device.isMobile && /*#__PURE__*/_jsxDEV(EyeDropper, {\n      swapPreviewOnAlt: eyeDropperState.swapPreviewOnAlt,\n      previewType: eyeDropperState.previewType,\n      onCancel: () => {\n        setEyeDropperState(null);\n      },\n      onSelect: (color, event) => {\n        var _eyeDropperState$onSe;\n        setEyeDropperState(state => {\n          return state !== null && state !== void 0 && state.keepOpenOnAlt && event.altKey ? state : null;\n        });\n        eyeDropperState === null || eyeDropperState === void 0 ? void 0 : (_eyeDropperState$onSe = eyeDropperState.onSelect) === null || _eyeDropperState$onSe === void 0 ? void 0 : _eyeDropperState$onSe.call(eyeDropperState, color, event);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }, this), appState.openDialog === \"help\" && /*#__PURE__*/_jsxDEV(HelpDialog, {\n      onClose: () => {\n        setAppState({\n          openDialog: null\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ActiveConfirmDialog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(tunnels.OverwriteConfirmDialogTunnel.Out, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), renderImageExportDialog(), renderJSONExportDialog(), appState.pasteDialog.shown && /*#__PURE__*/_jsxDEV(PasteChartDialog, {\n      setAppState: setAppState,\n      appState: appState,\n      onClose: () => setAppState({\n        pasteDialog: {\n          shown: false,\n          data: null\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this), device.isMobile && /*#__PURE__*/_jsxDEV(MobileMenu, {\n      app: app,\n      appState: appState,\n      elements: elements,\n      actionManager: actionManager,\n      renderJSONExportDialog: renderJSONExportDialog,\n      renderImageExportDialog: renderImageExportDialog,\n      setAppState: setAppState,\n      onLockToggle: onLockToggle,\n      onHandToolToggle: onHandToolToggle,\n      onPenModeToggle: onPenModeToggle,\n      canvas: canvas,\n      onImageAction: onImageAction,\n      renderTopRightUI: renderTopRightUI,\n      renderCustomStats: renderCustomStats,\n      renderSidebars: renderSidebars,\n      device: device,\n      renderWelcomeScreen: renderWelcomeScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 9\n    }, this), !device.isMobile && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(\"layer-ui__wrapper\", {\n          \"disable-pointerEvents\": appState.draggingElement || appState.resizingElement || appState.editingElement && !isTextElement(appState.editingElement)\n        }),\n        style: appState.openSidebar && isSidebarDocked && device.canDeviceFitSidebar ? {\n          width: `calc(100% - ${LIBRARY_SIDEBAR_WIDTH}px)`\n        } : {},\n        children: [renderWelcomeScreen && /*#__PURE__*/_jsxDEV(tunnels.WelcomeScreenCenterTunnel.Out, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 37\n        }, this), renderFixedSideContainer(), /*#__PURE__*/_jsxDEV(Footer, {\n          appState: appState,\n          actionManager: actionManager,\n          showExitZenModeBtn: showExitZenModeBtn,\n          renderWelcomeScreen: renderWelcomeScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), appState.showStats && /*#__PURE__*/_jsxDEV(Stats, {\n          appState: appState,\n          setAppState: setAppState,\n          elements: elements,\n          onClose: () => {\n            actionManager.executeAction(actionToggleStats);\n          },\n          renderCustomStats: renderCustomStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 15\n        }, this), appState.scrolledOutside && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scroll-back-to-content\",\n          onClick: () => {\n            setAppState(appState => ({\n              ...calculateScrollCenter(elements, appState, canvas)\n            }));\n          },\n          children: t(\"buttons.scrollBackToContent\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), renderSidebars()]\n    }, void 0, true)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(UIAppStateContext.Provider, {\n    value: appState,\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      scope: tunnels.jotaiScope,\n      children: /*#__PURE__*/_jsxDEV(TunnelsContext.Provider, {\n        value: tunnels,\n        children: layerUIJSX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 482,\n    columnNumber: 5\n  }, this);\n};\nconst stripIrrelevantAppStateProps = appState => {\n  const {\n    suggestedBindings,\n    startBoundElement,\n    cursorButton,\n    scrollX,\n    scrollY,\n    ...ret\n  } = appState;\n  return ret;\n};\nconst areEqual = (prevProps, nextProps) => {\n  // short-circuit early\n  if (prevProps.children !== nextProps.children) {\n    return false;\n  }\n  const {\n    canvas: _prevCanvas,\n    appState: prevAppState,\n    ...prev\n  } = prevProps;\n  const {\n    canvas: _nextCanvas,\n    appState: nextAppState,\n    ...next\n  } = nextProps;\n  return isShallowEqual(\n  // asserting AppState because we're being passed the whole AppState\n  // but resolve to only the UI-relevant props\n  stripIrrelevantAppStateProps(prevAppState), stripIrrelevantAppStateProps(nextAppState), {\n    selectedElementIds: isShallowEqual,\n    selectedGroupIds: isShallowEqual\n  }) && isShallowEqual(prev, next);\n};\nexport default /*#__PURE__*/React.memo(LayerUI, areEqual);","map":{"version":3,"names":["clsx","React","CLASSES","DEFAULT_SIDEBAR","LIBRARY_SIDEBAR_WIDTH","isTextElement","showSelectedShapeActions","t","calculateScrollCenter","capitalizeString","isShallowEqual","SelectedShapeActions","ShapesSwitcher","ErrorDialog","ImageExportDialog","FixedSideContainer","HintViewer","Island","LoadingMessage","LockButton","MobileMenu","PasteChartDialog","Section","HelpDialog","Stack","UserList","JSONExportDialog","PenModeButton","trackEvent","useDevice","Stats","actionToggleStats","Footer","isSidebarDockedAtom","jotaiScope","Provider","useAtom","useAtomValue","MainMenu","ActiveConfirmDialog","OverwriteConfirmDialog","HandButton","isHandToolActive","TunnelsContext","useInitializeTunnels","LibraryIcon","UIAppStateContext","DefaultSidebar","EyeDropper","activeEyeDropperAtom","jsxDEV","_jsxDEV","Fragment","_Fragment","DefaultMainMenu","_ref","UIOptions","__fallback","children","DefaultItems","LoadScene","fileName","_jsxFileName","lineNumber","columnNumber","SaveToActiveFile","canvasActions","export","Export","saveAsImage","SaveAsImage","Help","ClearCanvas","Separator","Group","title","Socials","ToggleTheme","ChangeCanvasBackground","DefaultOverwriteConfirmDialog","Actions","SaveToDisk","ExportToImage","LayerUI","_ref2","actionManager","appState","files","setAppState","elements","canvas","onLockToggle","onHandToolToggle","onPenModeToggle","showExitZenModeBtn","renderTopRightUI","renderCustomStats","onImageAction","onExportImage","renderWelcomeScreen","app","device","tunnels","eyeDropperState","setEyeDropperState","renderJSONExportDialog","exportOpts","renderImageExportDialog","onCloseRequest","openDialog","renderCanvasActions","style","position","MainMenuTunnel","Out","WelcomeScreenMenuHintTunnel","renderSelectedShapeActions","heading","className","zenModeEnabled","SHAPE_ACTIONS_MENU","padding","maxHeight","height","renderAction","renderFixedSideContainer","_appState$openSidebar","shouldRenderSelectedShapeActions","side","Col","gap","viewModeEnabled","WelcomeScreenToolbarHintTunnel","align","Row","isMobile","checked","penMode","onChange","penDetected","activeTool","locked","_ref3","pointerType","insertOnCanvasDirectly","collaborators","isSidebarDocked","openSidebar","name","DefaultSidebarTriggerTunnel","renderSidebars","onDock","docked","layerUIJSX","Trigger","icon","onToggle","open","tab","defaultTab","isLoading","delay","errorMessage","onClose","swapPreviewOnAlt","previewType","onCancel","onSelect","color","event","_eyeDropperState$onSe","state","keepOpenOnAlt","altKey","call","OverwriteConfirmDialogTunnel","pasteDialog","shown","data","draggingElement","resizingElement","editingElement","canDeviceFitSidebar","width","WelcomeScreenCenterTunnel","showStats","executeAction","scrolledOutside","onClick","value","scope","stripIrrelevantAppStateProps","suggestedBindings","startBoundElement","cursorButton","scrollX","scrollY","ret","areEqual","prevProps","nextProps","_prevCanvas","prevAppState","prev","_nextCanvas","nextAppState","next","selectedElementIds","selectedGroupIds","memo"],"sources":["D:/project/excalidraw-cn/src/components/LayerUI.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport React from \"react\";\nimport { ActionManager } from \"../actions/manager\";\nimport { CLASSES, DEFAULT_SIDEBAR, LIBRARY_SIDEBAR_WIDTH } from \"../constants\";\nimport { isTextElement, showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { Language, t } from \"../i18n\";\nimport { calculateScrollCenter } from \"../scene\";\nimport {\n  AppProps,\n  AppState,\n  ExcalidrawProps,\n  BinaryFiles,\n  UIAppState,\n  AppClassProperties,\n} from \"../types\";\nimport { capitalizeString, isShallowEqual } from \"../utils\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ImageExportDialog } from \"./ImageExportDialog\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { HintViewer } from \"./HintViewer\";\nimport { Island } from \"./Island\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { LockButton } from \"./LockButton\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { PasteChartDialog } from \"./PasteChartDialog\";\nimport { Section } from \"./Section\";\nimport { HelpDialog } from \"./HelpDialog\";\nimport Stack from \"./Stack\";\nimport { UserList } from \"./UserList\";\nimport { JSONExportDialog } from \"./JSONExportDialog\";\nimport { PenModeButton } from \"./PenModeButton\";\nimport { trackEvent } from \"../analytics\";\nimport { useDevice } from \"../components/App\";\nimport { Stats } from \"./Stats\";\nimport { actionToggleStats } from \"../actions/actionToggleStats\";\nimport Footer from \"./footer/Footer\";\nimport { isSidebarDockedAtom } from \"./Sidebar/Sidebar\";\nimport { jotaiScope } from \"../jotai\";\nimport { Provider, useAtom, useAtomValue } from \"jotai\";\nimport MainMenu from \"./main-menu/MainMenu\";\nimport { ActiveConfirmDialog } from \"./ActiveConfirmDialog\";\nimport { OverwriteConfirmDialog } from \"./OverwriteConfirm/OverwriteConfirm\";\nimport { HandButton } from \"./HandButton\";\nimport { isHandToolActive } from \"../appState\";\nimport { TunnelsContext, useInitializeTunnels } from \"../context/tunnels\";\nimport { LibraryIcon } from \"./icons\";\nimport { UIAppStateContext } from \"../context/ui-appState\";\nimport { DefaultSidebar } from \"./DefaultSidebar\";\nimport { EyeDropper, activeEyeDropperAtom } from \"./EyeDropper\";\n\nimport \"./LayerUI.scss\";\nimport \"./Toolbar.scss\";\n\ninterface LayerUIProps {\n  actionManager: ActionManager;\n  appState: UIAppState;\n  files: BinaryFiles;\n  canvas: HTMLCanvasElement | null;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  elements: readonly NonDeletedExcalidrawElement[];\n  onLockToggle: () => void;\n  onHandToolToggle: () => void;\n  onPenModeToggle: () => void;\n  showExitZenModeBtn: boolean;\n  langCode: Language[\"code\"];\n  renderTopRightUI?: ExcalidrawProps[\"renderTopRightUI\"];\n  renderCustomStats?: ExcalidrawProps[\"renderCustomStats\"];\n  UIOptions: AppProps[\"UIOptions\"];\n  onImageAction: (data: { insertOnCanvasDirectly: boolean }) => void;\n  onExportImage: AppClassProperties[\"onExportImage\"];\n  renderWelcomeScreen: boolean;\n  children?: React.ReactNode;\n  app: AppClassProperties;\n}\n\nconst DefaultMainMenu: React.FC<{\n  UIOptions: AppProps[\"UIOptions\"];\n}> = ({ UIOptions }) => {\n  return (\n    <MainMenu __fallback>\n      <MainMenu.DefaultItems.LoadScene />\n      <MainMenu.DefaultItems.SaveToActiveFile />\n      {/* FIXME we should to test for this inside the item itself */}\n      {UIOptions.canvasActions.export && <MainMenu.DefaultItems.Export />}\n      {/* FIXME we should to test for this inside the item itself */}\n      {UIOptions.canvasActions.saveAsImage && (\n        <MainMenu.DefaultItems.SaveAsImage />\n      )}\n      <MainMenu.DefaultItems.Help />\n      <MainMenu.DefaultItems.ClearCanvas />\n      <MainMenu.Separator />\n      <MainMenu.Group title=\"Excalidraw links\">\n        <MainMenu.DefaultItems.Socials />\n      </MainMenu.Group>\n      <MainMenu.Separator />\n      <MainMenu.DefaultItems.ToggleTheme />\n      <MainMenu.DefaultItems.ChangeCanvasBackground />\n    </MainMenu>\n  );\n};\n\nconst DefaultOverwriteConfirmDialog = () => {\n  return (\n    <OverwriteConfirmDialog __fallback>\n      <OverwriteConfirmDialog.Actions.SaveToDisk />\n      <OverwriteConfirmDialog.Actions.ExportToImage />\n    </OverwriteConfirmDialog>\n  );\n};\n\nconst LayerUI = ({\n  actionManager,\n  appState,\n  files,\n  setAppState,\n  elements,\n  canvas,\n  onLockToggle,\n  onHandToolToggle,\n  onPenModeToggle,\n  showExitZenModeBtn,\n  renderTopRightUI,\n  renderCustomStats,\n  UIOptions,\n  onImageAction,\n  onExportImage,\n  renderWelcomeScreen,\n  children,\n  app,\n}: LayerUIProps) => {\n  const device = useDevice();\n  const tunnels = useInitializeTunnels();\n\n  const [eyeDropperState, setEyeDropperState] = useAtom(\n    activeEyeDropperAtom,\n    jotaiScope,\n  );\n\n  const renderJSONExportDialog = () => {\n    if (!UIOptions.canvasActions.export) {\n      return null;\n    }\n\n    return (\n      <JSONExportDialog\n        elements={elements}\n        appState={appState}\n        files={files}\n        actionManager={actionManager}\n        exportOpts={UIOptions.canvasActions.export}\n        canvas={canvas}\n        setAppState={setAppState}\n      />\n    );\n  };\n\n  const renderImageExportDialog = () => {\n    if (!UIOptions.canvasActions.saveAsImage) {\n      return null;\n    }\n\n    return (\n      <ImageExportDialog\n        elements={elements}\n        appState={appState}\n        files={files}\n        actionManager={actionManager}\n        onExportImage={onExportImage}\n        onCloseRequest={() => setAppState({ openDialog: null })}\n      />\n    );\n  };\n\n  const renderCanvasActions = () => (\n    <div style={{ position: \"relative\" }}>\n      {/* wrapping to Fragment stops React from occasionally complaining\n                about identical Keys */}\n      <tunnels.MainMenuTunnel.Out />\n      {renderWelcomeScreen && <tunnels.WelcomeScreenMenuHintTunnel.Out />}\n    </div>\n  );\n\n  const renderSelectedShapeActions = () => (\n    <Section\n      heading=\"selectedShapeActions\"\n      className={clsx(\"selected-shape-actions zen-mode-transition\", {\n        \"transition-left\": appState.zenModeEnabled,\n      })}\n    >\n      <Island\n        className={CLASSES.SHAPE_ACTIONS_MENU}\n        padding={2}\n        style={{\n          // we want to make sure this doesn't overflow so subtracting the\n          // approximate height of hamburgerMenu + footer\n          maxHeight: `${appState.height - 166}px`,\n        }}\n      >\n        <SelectedShapeActions\n          appState={appState}\n          elements={elements}\n          renderAction={actionManager.renderAction}\n        />\n      </Island>\n    </Section>\n  );\n\n  const renderFixedSideContainer = () => {\n    const shouldRenderSelectedShapeActions = showSelectedShapeActions(\n      appState,\n      elements,\n    );\n\n    return (\n      <FixedSideContainer side=\"top\">\n        <div className=\"App-menu App-menu_top\">\n          <Stack.Col gap={6} className={clsx(\"App-menu_top__left\")}>\n            {renderCanvasActions()}\n            {shouldRenderSelectedShapeActions && renderSelectedShapeActions()}\n          </Stack.Col>\n          {!appState.viewModeEnabled && (\n            <Section heading=\"shapes\" className=\"shapes-section\">\n              {(heading: React.ReactNode) => (\n                <div style={{ position: \"relative\" }}>\n                  {renderWelcomeScreen && (\n                    <tunnels.WelcomeScreenToolbarHintTunnel.Out />\n                  )}\n                  <Stack.Col gap={4} align=\"start\">\n                    <Stack.Row\n                      gap={1}\n                      className={clsx(\"App-toolbar-container\", {\n                        \"zen-mode\": appState.zenModeEnabled,\n                      })}\n                    >\n                      <Island\n                        padding={1}\n                        className={clsx(\"App-toolbar\", {\n                          \"zen-mode\": appState.zenModeEnabled,\n                        })}\n                      >\n                        <HintViewer\n                          appState={appState}\n                          isMobile={device.isMobile}\n                          device={device}\n                          app={app}\n                        />\n                        {heading}\n                        <Stack.Row gap={1}>\n                          <PenModeButton\n                            zenModeEnabled={appState.zenModeEnabled}\n                            checked={appState.penMode}\n                            onChange={onPenModeToggle}\n                            title={t(\"toolBar.penMode\")}\n                            penDetected={appState.penDetected}\n                          />\n                          <LockButton\n                            checked={appState.activeTool.locked}\n                            onChange={onLockToggle}\n                            title={t(\"toolBar.lock\")}\n                          />\n\n                          <div className=\"App-toolbar__divider\" />\n\n                          <HandButton\n                            checked={isHandToolActive(appState)}\n                            onChange={() => onHandToolToggle()}\n                            title={t(\"toolBar.hand\")}\n                            isMobile\n                          />\n\n                          <ShapesSwitcher\n                            appState={appState}\n                            canvas={canvas}\n                            activeTool={appState.activeTool}\n                            setAppState={setAppState}\n                            onImageAction={({ pointerType }) => {\n                              onImageAction({\n                                insertOnCanvasDirectly: pointerType !== \"mouse\",\n                              });\n                            }}\n                          />\n                        </Stack.Row>\n                      </Island>\n                    </Stack.Row>\n                  </Stack.Col>\n                </div>\n              )}\n            </Section>\n          )}\n          <div\n            className={clsx(\n              \"layer-ui__wrapper__top-right zen-mode-transition\",\n              {\n                \"transition-right\": appState.zenModeEnabled,\n              },\n            )}\n          >\n            <UserList collaborators={appState.collaborators} />\n            {renderTopRightUI?.(device.isMobile, appState)}\n            {!appState.viewModeEnabled &&\n              // hide button when sidebar docked\n              (!isSidebarDocked ||\n                appState.openSidebar?.name !== DEFAULT_SIDEBAR.name) && (\n                <tunnels.DefaultSidebarTriggerTunnel.Out />\n              )}\n          </div>\n        </div>\n      </FixedSideContainer>\n    );\n  };\n\n  const renderSidebars = () => {\n    return (\n      <DefaultSidebar\n        __fallback\n        onDock={(docked) => {\n          trackEvent(\n            \"sidebar\",\n            `toggleDock (${docked ? \"dock\" : \"undock\"})`,\n            `(${device.isMobile ? \"mobile\" : \"desktop\"})`,\n          );\n        }}\n      />\n    );\n  };\n\n  const isSidebarDocked = useAtomValue(isSidebarDockedAtom, jotaiScope);\n\n  const layerUIJSX = (\n    <>\n      {/* ------------------------- tunneled UI ---------------------------- */}\n      {/* make sure we render host app components first so that we can detect\n          them first on initial render to optimize layout shift */}\n      {children}\n      {/* render component fallbacks. Can be rendered anywhere as they'll be\n          tunneled away. We only render tunneled components that actually\n        have defaults when host do not render anything. */}\n      <DefaultMainMenu UIOptions={UIOptions} />\n      <DefaultSidebar.Trigger\n        __fallback\n        icon={LibraryIcon}\n        title={capitalizeString(t(\"toolBar.library\"))}\n        onToggle={(open) => {\n          if (open) {\n            trackEvent(\n              \"sidebar\",\n              `${DEFAULT_SIDEBAR.name} (open)`,\n              `button (${device.isMobile ? \"mobile\" : \"desktop\"})`,\n            );\n          }\n        }}\n        tab={DEFAULT_SIDEBAR.defaultTab}\n      >\n        {t(\"toolBar.library\")}\n      </DefaultSidebar.Trigger>\n      <DefaultOverwriteConfirmDialog />\n      {/* ------------------------------------------------------------------ */}\n\n      {appState.isLoading && <LoadingMessage delay={250} />}\n      {appState.errorMessage && (\n        <ErrorDialog onClose={() => setAppState({ errorMessage: null })}>\n          {appState.errorMessage}\n        </ErrorDialog>\n      )}\n      {eyeDropperState && !device.isMobile && (\n        <EyeDropper\n          swapPreviewOnAlt={eyeDropperState.swapPreviewOnAlt}\n          previewType={eyeDropperState.previewType}\n          onCancel={() => {\n            setEyeDropperState(null);\n          }}\n          onSelect={(color, event) => {\n            setEyeDropperState((state) => {\n              return state?.keepOpenOnAlt && event.altKey ? state : null;\n            });\n            eyeDropperState?.onSelect?.(color, event);\n          }}\n        />\n      )}\n      {appState.openDialog === \"help\" && (\n        <HelpDialog\n          onClose={() => {\n            setAppState({ openDialog: null });\n          }}\n        />\n      )}\n      <ActiveConfirmDialog />\n      <tunnels.OverwriteConfirmDialogTunnel.Out />\n      {renderImageExportDialog()}\n      {renderJSONExportDialog()}\n      {appState.pasteDialog.shown && (\n        <PasteChartDialog\n          setAppState={setAppState}\n          appState={appState}\n          onClose={() =>\n            setAppState({\n              pasteDialog: { shown: false, data: null },\n            })\n          }\n        />\n      )}\n      {device.isMobile && (\n        <MobileMenu\n          app={app}\n          appState={appState}\n          elements={elements}\n          actionManager={actionManager}\n          renderJSONExportDialog={renderJSONExportDialog}\n          renderImageExportDialog={renderImageExportDialog}\n          setAppState={setAppState}\n          onLockToggle={onLockToggle}\n          onHandToolToggle={onHandToolToggle}\n          onPenModeToggle={onPenModeToggle}\n          canvas={canvas}\n          onImageAction={onImageAction}\n          renderTopRightUI={renderTopRightUI}\n          renderCustomStats={renderCustomStats}\n          renderSidebars={renderSidebars}\n          device={device}\n          renderWelcomeScreen={renderWelcomeScreen}\n        />\n      )}\n      {!device.isMobile && (\n        <>\n          <div\n            className={clsx(\"layer-ui__wrapper\", {\n              \"disable-pointerEvents\":\n                appState.draggingElement ||\n                appState.resizingElement ||\n                (appState.editingElement &&\n                  !isTextElement(appState.editingElement)),\n            })}\n            style={\n              appState.openSidebar &&\n              isSidebarDocked &&\n              device.canDeviceFitSidebar\n                ? { width: `calc(100% - ${LIBRARY_SIDEBAR_WIDTH}px)` }\n                : {}\n            }\n          >\n            {renderWelcomeScreen && <tunnels.WelcomeScreenCenterTunnel.Out />}\n            {renderFixedSideContainer()}\n            <Footer\n              appState={appState}\n              actionManager={actionManager}\n              showExitZenModeBtn={showExitZenModeBtn}\n              renderWelcomeScreen={renderWelcomeScreen}\n            />\n            {appState.showStats && (\n              <Stats\n                appState={appState}\n                setAppState={setAppState}\n                elements={elements}\n                onClose={() => {\n                  actionManager.executeAction(actionToggleStats);\n                }}\n                renderCustomStats={renderCustomStats}\n              />\n            )}\n            {appState.scrolledOutside && (\n              <button\n                className=\"scroll-back-to-content\"\n                onClick={() => {\n                  setAppState((appState) => ({\n                    ...calculateScrollCenter(elements, appState, canvas),\n                  }));\n                }}\n              >\n                {t(\"buttons.scrollBackToContent\")}\n              </button>\n            )}\n          </div>\n          {renderSidebars()}\n        </>\n      )}\n    </>\n  );\n\n  return (\n    <UIAppStateContext.Provider value={appState}>\n      <Provider scope={tunnels.jotaiScope}>\n        <TunnelsContext.Provider value={tunnels}>\n          {layerUIJSX}\n        </TunnelsContext.Provider>\n      </Provider>\n    </UIAppStateContext.Provider>\n  );\n};\n\nconst stripIrrelevantAppStateProps = (appState: AppState): UIAppState => {\n  const {\n    suggestedBindings,\n    startBoundElement,\n    cursorButton,\n    scrollX,\n    scrollY,\n    ...ret\n  } = appState;\n  return ret;\n};\n\nconst areEqual = (prevProps: LayerUIProps, nextProps: LayerUIProps) => {\n  // short-circuit early\n  if (prevProps.children !== nextProps.children) {\n    return false;\n  }\n\n  const { canvas: _prevCanvas, appState: prevAppState, ...prev } = prevProps;\n  const { canvas: _nextCanvas, appState: nextAppState, ...next } = nextProps;\n\n  return (\n    isShallowEqual(\n      // asserting AppState because we're being passed the whole AppState\n      // but resolve to only the UI-relevant props\n      stripIrrelevantAppStateProps(prevAppState as AppState),\n      stripIrrelevantAppStateProps(nextAppState as AppState),\n      {\n        selectedElementIds: isShallowEqual,\n        selectedGroupIds: isShallowEqual,\n      },\n    ) && isShallowEqual(prev, next)\n  );\n};\n\nexport default React.memo(LayerUI, areEqual);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}