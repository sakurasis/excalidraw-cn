{"ast":null,"code":"import oc from \"open-color\";\n// FIXME can't put to utils.ts rn because of circular dependency\nconst pick = (source, keys) => {\n  return keys.reduce((acc, key) => {\n    if (key in source) {\n      acc[key] = source[key];\n    }\n    return acc;\n  }, {});\n};\n\n// used general type instead of specific type (ColorPalette) to support custom colors\n\nexport const MAX_CUSTOM_COLORS_USED_IN_CANVAS = 5;\nexport const COLORS_PER_ROW = 5;\nexport const DEFAULT_CHART_COLOR_INDEX = 4;\nexport const DEFAULT_ELEMENT_STROKE_COLOR_INDEX = 4;\nexport const DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX = 1;\nexport const ELEMENTS_PALETTE_SHADE_INDEXES = [0, 2, 4, 6, 8];\nexport const CANVAS_PALETTE_SHADE_INDEXES = [0, 1, 2, 3, 4];\nexport const getSpecificColorShades = (color, indexArr) => {\n  return indexArr.map(index => oc[color][index]);\n};\nexport const COLOR_PALETTE = {\n  transparent: \"transparent\",\n  black: \"#1e1e1e\",\n  white: \"#ffffff\",\n  // open-colors\n  gray: getSpecificColorShades(\"gray\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  red: getSpecificColorShades(\"red\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  pink: getSpecificColorShades(\"pink\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  grape: getSpecificColorShades(\"grape\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  violet: getSpecificColorShades(\"violet\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  blue: getSpecificColorShades(\"blue\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  cyan: getSpecificColorShades(\"cyan\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  teal: getSpecificColorShades(\"teal\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  green: getSpecificColorShades(\"green\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  yellow: getSpecificColorShades(\"yellow\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  orange: getSpecificColorShades(\"orange\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  // radix bronze shades 3,5,7,9,11\n  bronze: [\"#f8f1ee\", \"#eaddd7\", \"#d2bab0\", \"#a18072\", \"#846358\"]\n};\nconst COMMON_ELEMENT_SHADES = pick(COLOR_PALETTE, [\"cyan\", \"blue\", \"violet\", \"grape\", \"pink\", \"green\", \"teal\", \"yellow\", \"orange\", \"red\"]);\n\n// -----------------------------------------------------------------------------\n// quick picks defaults\n// -----------------------------------------------------------------------------\n\n// ORDER matters for positioning in quick picker\nexport const DEFAULT_ELEMENT_STROKE_PICKS = [COLOR_PALETTE.black, COLOR_PALETTE.red[DEFAULT_ELEMENT_STROKE_COLOR_INDEX], COLOR_PALETTE.green[DEFAULT_ELEMENT_STROKE_COLOR_INDEX], COLOR_PALETTE.blue[DEFAULT_ELEMENT_STROKE_COLOR_INDEX], COLOR_PALETTE.yellow[DEFAULT_ELEMENT_STROKE_COLOR_INDEX]];\n\n// ORDER matters for positioning in quick picker\nexport const DEFAULT_ELEMENT_BACKGROUND_PICKS = [COLOR_PALETTE.transparent, COLOR_PALETTE.red[DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX], COLOR_PALETTE.green[DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX], COLOR_PALETTE.blue[DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX], COLOR_PALETTE.yellow[DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX]];\n\n// ORDER matters for positioning in quick picker\nexport const DEFAULT_CANVAS_BACKGROUND_PICKS = [COLOR_PALETTE.white,\n// radix slate2\n\"#f8f9fa\",\n// radix blue2\n\"#f5faff\",\n// radix yellow2\n\"#fffce8\",\n// radix bronze2\n\"#fdf8f6\"];\n\n// -----------------------------------------------------------------------------\n// palette defaults\n// -----------------------------------------------------------------------------\n\nexport const DEFAULT_ELEMENT_STROKE_COLOR_PALETTE = {\n  // 1st row\n  transparent: COLOR_PALETTE.transparent,\n  white: COLOR_PALETTE.white,\n  gray: COLOR_PALETTE.gray,\n  black: COLOR_PALETTE.black,\n  bronze: COLOR_PALETTE.bronze,\n  // rest\n  ...COMMON_ELEMENT_SHADES\n};\n\n// ORDER matters for positioning in pallete (5x3 grid)s\nexport const DEFAULT_ELEMENT_BACKGROUND_COLOR_PALETTE = {\n  transparent: COLOR_PALETTE.transparent,\n  white: COLOR_PALETTE.white,\n  gray: COLOR_PALETTE.gray,\n  black: COLOR_PALETTE.black,\n  bronze: COLOR_PALETTE.bronze,\n  ...COMMON_ELEMENT_SHADES\n};\n\n// -----------------------------------------------------------------------------\n// helpers\n// -----------------------------------------------------------------------------\n\n// !!!MUST BE WITHOUT GRAY, TRANSPARENT AND BLACK!!!\nexport const getAllColorsSpecificShade = index => [\n// 2nd row\nCOLOR_PALETTE.cyan[index], COLOR_PALETTE.blue[index], COLOR_PALETTE.violet[index], COLOR_PALETTE.grape[index], COLOR_PALETTE.pink[index],\n// 3rd row\nCOLOR_PALETTE.green[index], COLOR_PALETTE.teal[index], COLOR_PALETTE.yellow[index], COLOR_PALETTE.orange[index], COLOR_PALETTE.red[index]];\nexport const rgbToHex = (r, g, b) => `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n\n// -----------------------------------------------------------------------------","map":{"version":3,"names":["oc","pick","source","keys","reduce","acc","key","MAX_CUSTOM_COLORS_USED_IN_CANVAS","COLORS_PER_ROW","DEFAULT_CHART_COLOR_INDEX","DEFAULT_ELEMENT_STROKE_COLOR_INDEX","DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX","ELEMENTS_PALETTE_SHADE_INDEXES","CANVAS_PALETTE_SHADE_INDEXES","getSpecificColorShades","color","indexArr","map","index","COLOR_PALETTE","transparent","black","white","gray","red","pink","grape","violet","blue","cyan","teal","green","yellow","orange","bronze","COMMON_ELEMENT_SHADES","DEFAULT_ELEMENT_STROKE_PICKS","DEFAULT_ELEMENT_BACKGROUND_PICKS","DEFAULT_CANVAS_BACKGROUND_PICKS","DEFAULT_ELEMENT_STROKE_COLOR_PALETTE","DEFAULT_ELEMENT_BACKGROUND_COLOR_PALETTE","getAllColorsSpecificShade","rgbToHex","r","g","b","toString","slice"],"sources":["D:/project/excalidraw-cn/src/colors.ts"],"sourcesContent":["import oc from \"open-color\";\nimport { Merge } from \"./utility-types\";\n\n// FIXME can't put to utils.ts rn because of circular dependency\nconst pick = <R extends Record<string, any>, K extends readonly (keyof R)[]>(\n  source: R,\n  keys: K,\n) => {\n  return keys.reduce((acc, key: K[number]) => {\n    if (key in source) {\n      acc[key] = source[key];\n    }\n    return acc;\n  }, {} as Pick<R, K[number]>) as Pick<R, K[number]>;\n};\n\nexport type ColorPickerColor =\n  | Exclude<keyof oc, \"indigo\" | \"lime\">\n  | \"transparent\"\n  | \"bronze\";\nexport type ColorTuple = readonly [string, string, string, string, string];\nexport type ColorPalette = Merge<\n  Record<ColorPickerColor, ColorTuple>,\n  { black: string; white: string; transparent: string }\n>;\n\n// used general type instead of specific type (ColorPalette) to support custom colors\nexport type ColorPaletteCustom = { [key: string]: ColorTuple | string };\nexport type ColorShadesIndexes = [number, number, number, number, number];\n\nexport const MAX_CUSTOM_COLORS_USED_IN_CANVAS = 5;\nexport const COLORS_PER_ROW = 5;\n\nexport const DEFAULT_CHART_COLOR_INDEX = 4;\n\nexport const DEFAULT_ELEMENT_STROKE_COLOR_INDEX = 4;\nexport const DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX = 1;\nexport const ELEMENTS_PALETTE_SHADE_INDEXES = [0, 2, 4, 6, 8] as const;\nexport const CANVAS_PALETTE_SHADE_INDEXES = [0, 1, 2, 3, 4] as const;\n\nexport const getSpecificColorShades = (\n  color: Exclude<\n    ColorPickerColor,\n    \"transparent\" | \"white\" | \"black\" | \"bronze\"\n  >,\n  indexArr: Readonly<ColorShadesIndexes>,\n) => {\n  return indexArr.map((index) => oc[color][index]) as any as ColorTuple;\n};\n\nexport const COLOR_PALETTE = {\n  transparent: \"transparent\",\n  black: \"#1e1e1e\",\n  white: \"#ffffff\",\n  // open-colors\n  gray: getSpecificColorShades(\"gray\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  red: getSpecificColorShades(\"red\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  pink: getSpecificColorShades(\"pink\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  grape: getSpecificColorShades(\"grape\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  violet: getSpecificColorShades(\"violet\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  blue: getSpecificColorShades(\"blue\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  cyan: getSpecificColorShades(\"cyan\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  teal: getSpecificColorShades(\"teal\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  green: getSpecificColorShades(\"green\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  yellow: getSpecificColorShades(\"yellow\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  orange: getSpecificColorShades(\"orange\", ELEMENTS_PALETTE_SHADE_INDEXES),\n  // radix bronze shades 3,5,7,9,11\n  bronze: [\"#f8f1ee\", \"#eaddd7\", \"#d2bab0\", \"#a18072\", \"#846358\"],\n} as ColorPalette;\n\nconst COMMON_ELEMENT_SHADES = pick(COLOR_PALETTE, [\n  \"cyan\",\n  \"blue\",\n  \"violet\",\n  \"grape\",\n  \"pink\",\n  \"green\",\n  \"teal\",\n  \"yellow\",\n  \"orange\",\n  \"red\",\n]);\n\n// -----------------------------------------------------------------------------\n// quick picks defaults\n// -----------------------------------------------------------------------------\n\n// ORDER matters for positioning in quick picker\nexport const DEFAULT_ELEMENT_STROKE_PICKS = [\n  COLOR_PALETTE.black,\n  COLOR_PALETTE.red[DEFAULT_ELEMENT_STROKE_COLOR_INDEX],\n  COLOR_PALETTE.green[DEFAULT_ELEMENT_STROKE_COLOR_INDEX],\n  COLOR_PALETTE.blue[DEFAULT_ELEMENT_STROKE_COLOR_INDEX],\n  COLOR_PALETTE.yellow[DEFAULT_ELEMENT_STROKE_COLOR_INDEX],\n] as ColorTuple;\n\n// ORDER matters for positioning in quick picker\nexport const DEFAULT_ELEMENT_BACKGROUND_PICKS = [\n  COLOR_PALETTE.transparent,\n  COLOR_PALETTE.red[DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX],\n  COLOR_PALETTE.green[DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX],\n  COLOR_PALETTE.blue[DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX],\n  COLOR_PALETTE.yellow[DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX],\n] as ColorTuple;\n\n// ORDER matters for positioning in quick picker\nexport const DEFAULT_CANVAS_BACKGROUND_PICKS = [\n  COLOR_PALETTE.white,\n  // radix slate2\n  \"#f8f9fa\",\n  // radix blue2\n  \"#f5faff\",\n  // radix yellow2\n  \"#fffce8\",\n  // radix bronze2\n  \"#fdf8f6\",\n] as ColorTuple;\n\n// -----------------------------------------------------------------------------\n// palette defaults\n// -----------------------------------------------------------------------------\n\nexport const DEFAULT_ELEMENT_STROKE_COLOR_PALETTE = {\n  // 1st row\n  transparent: COLOR_PALETTE.transparent,\n  white: COLOR_PALETTE.white,\n  gray: COLOR_PALETTE.gray,\n  black: COLOR_PALETTE.black,\n  bronze: COLOR_PALETTE.bronze,\n  // rest\n  ...COMMON_ELEMENT_SHADES,\n} as const;\n\n// ORDER matters for positioning in pallete (5x3 grid)s\nexport const DEFAULT_ELEMENT_BACKGROUND_COLOR_PALETTE = {\n  transparent: COLOR_PALETTE.transparent,\n  white: COLOR_PALETTE.white,\n  gray: COLOR_PALETTE.gray,\n  black: COLOR_PALETTE.black,\n  bronze: COLOR_PALETTE.bronze,\n\n  ...COMMON_ELEMENT_SHADES,\n} as const;\n\n// -----------------------------------------------------------------------------\n// helpers\n// -----------------------------------------------------------------------------\n\n// !!!MUST BE WITHOUT GRAY, TRANSPARENT AND BLACK!!!\nexport const getAllColorsSpecificShade = (index: 0 | 1 | 2 | 3 | 4) =>\n  [\n    // 2nd row\n    COLOR_PALETTE.cyan[index],\n    COLOR_PALETTE.blue[index],\n    COLOR_PALETTE.violet[index],\n    COLOR_PALETTE.grape[index],\n    COLOR_PALETTE.pink[index],\n\n    // 3rd row\n    COLOR_PALETTE.green[index],\n    COLOR_PALETTE.teal[index],\n    COLOR_PALETTE.yellow[index],\n    COLOR_PALETTE.orange[index],\n    COLOR_PALETTE.red[index],\n  ] as const;\n\nexport const rgbToHex = (r: number, g: number, b: number) =>\n  `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n\n// -----------------------------------------------------------------------------\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}