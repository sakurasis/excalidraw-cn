{"ast":null,"code":"import _regeneratorRuntime from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _createForOfIteratorHelper from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import{fileOpen,fileSave}from\"./filesystem\";import{cleanAppStateForExport,clearAppStateForDatabase}from\"../appState\";import{EXPORT_DATA_TYPES,EXPORT_SOURCE,MIME_TYPES,VERSIONS}from\"../constants\";import{clearElementsForDatabase,clearElementsForExport}from\"../element\";import{isImageFileHandle,loadFromBlob,normalizeFile}from\"./blob\";/**\n * Strips out files which are only referenced by deleted elements\n */var filterOutDeletedFiles=function filterOutDeletedFiles(elements,files){var nextFiles={};var _iterator=_createForOfIteratorHelper(elements),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var element=_step.value;if(!element.isDeleted&&\"fileId\"in element&&element.fileId&&files[element.fileId]){nextFiles[element.fileId]=files[element.fileId];}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return nextFiles;};export var serializeAsJSON=function serializeAsJSON(elements,appState,files,type){var data={type:EXPORT_DATA_TYPES.excalidraw,version:VERSIONS.excalidraw,source:EXPORT_SOURCE,elements:type===\"local\"?clearElementsForExport(elements):clearElementsForDatabase(elements),appState:type===\"local\"?cleanAppStateForExport(appState):clearAppStateForDatabase(appState),files:type===\"local\"?filterOutDeletedFiles(elements,files):// will be stripped from JSON\nundefined};return JSON.stringify(data,null,2);};export var saveAsJSON=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(elements,appState,files){var serialized,blob,fileHandle;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:serialized=serializeAsJSON(elements,appState,files,\"local\");blob=new Blob([serialized],{type:MIME_TYPES.excalidraw});_context.next=4;return fileSave(blob,{name:appState.name,extension:\"excalidraw\",description:\"Excalidraw file\",fileHandle:isImageFileHandle(appState.fileHandle)?null:appState.fileHandle});case 4:fileHandle=_context.sent;return _context.abrupt(\"return\",{fileHandle:fileHandle});case 6:case\"end\":return _context.stop();}},_callee);}));return function saveAsJSON(_x,_x2,_x3){return _ref.apply(this,arguments);};}();export var loadFromJSON=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(localAppState,localElements){var file;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fileOpen({description:\"Excalidraw files\"// ToDo: Be over-permissive until https://bugs.webkit.org/show_bug.cgi?id=34442\n// gets resolved. Else, iOS users cannot open `.excalidraw` files.\n// extensions: [\"json\", \"excalidraw\", \"png\", \"svg\"],\n});case 2:file=_context2.sent;_context2.t0=loadFromBlob;_context2.next=6;return normalizeFile(file);case 6:_context2.t1=_context2.sent;_context2.t2=localAppState;_context2.t3=localElements;_context2.t4=file.handle;return _context2.abrupt(\"return\",(0,_context2.t0)(_context2.t1,_context2.t2,_context2.t3,_context2.t4));case 11:case\"end\":return _context2.stop();}},_callee2);}));return function loadFromJSON(_x4,_x5){return _ref2.apply(this,arguments);};}();export var isValidExcalidrawData=function isValidExcalidrawData(data){return(data===null||data===void 0?void 0:data.type)===EXPORT_DATA_TYPES.excalidraw&&(!data.elements||Array.isArray(data.elements)&&(!data.appState||typeof data.appState===\"object\"));};export var isValidLibrary=function isValidLibrary(json){return typeof json===\"object\"&&json&&json.type===EXPORT_DATA_TYPES.excalidrawLibrary&&(json.version===1||json.version===2);};export var serializeLibraryAsJSON=function serializeLibraryAsJSON(libraryItems){var data={type:EXPORT_DATA_TYPES.excalidrawLibrary,version:VERSIONS.excalidrawLibrary,source:EXPORT_SOURCE,libraryItems:libraryItems};return JSON.stringify(data,null,2);};export var saveLibraryAsJSON=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(libraryItems){var serialized;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:serialized=serializeLibraryAsJSON(libraryItems);_context3.next=3;return fileSave(new Blob([serialized],{type:MIME_TYPES.excalidrawlib}),{name:\"library\",extension:\"excalidrawlib\",description:\"Excalidraw library file\"});case 3:case\"end\":return _context3.stop();}},_callee3);}));return function saveLibraryAsJSON(_x6){return _ref3.apply(this,arguments);};}();","map":{"version":3,"names":["fileOpen","fileSave","cleanAppStateForExport","clearAppStateForDatabase","EXPORT_DATA_TYPES","EXPORT_SOURCE","MIME_TYPES","VERSIONS","clearElementsForDatabase","clearElementsForExport","isImageFileHandle","loadFromBlob","normalizeFile","filterOutDeletedFiles","elements","files","nextFiles","_iterator","_createForOfIteratorHelper","_step","s","n","done","element","value","isDeleted","fileId","err","e","f","serializeAsJSON","appState","type","data","excalidraw","version","source","undefined","JSON","stringify","saveAsJSON","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","serialized","blob","fileHandle","wrap","_callee$","_context","prev","next","Blob","name","extension","description","sent","abrupt","stop","_x","_x2","_x3","apply","arguments","loadFromJSON","_ref2","_callee2","localAppState","localElements","file","_callee2$","_context2","t0","t1","t2","t3","t4","handle","_x4","_x5","isValidExcalidrawData","Array","isArray","isValidLibrary","json","excalidrawLibrary","serializeLibraryAsJSON","libraryItems","saveLibraryAsJSON","_ref3","_callee3","_callee3$","_context3","excalidrawlib","_x6"],"sources":["D:/project/excalidraw-cn/src/data/json.ts"],"sourcesContent":["import { fileOpen, fileSave } from \"./filesystem\";\nimport { cleanAppStateForExport, clearAppStateForDatabase } from \"../appState\";\nimport {\n  EXPORT_DATA_TYPES,\n  EXPORT_SOURCE,\n  MIME_TYPES,\n  VERSIONS,\n} from \"../constants\";\nimport { clearElementsForDatabase, clearElementsForExport } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState, BinaryFiles, LibraryItems } from \"../types\";\nimport { isImageFileHandle, loadFromBlob, normalizeFile } from \"./blob\";\n\nimport {\n  ExportedDataState,\n  ImportedDataState,\n  ExportedLibraryData,\n  ImportedLibraryData,\n} from \"./types\";\n\n/**\n * Strips out files which are only referenced by deleted elements\n */\nconst filterOutDeletedFiles = (\n  elements: readonly ExcalidrawElement[],\n  files: BinaryFiles,\n) => {\n  const nextFiles: BinaryFiles = {};\n  for (const element of elements) {\n    if (\n      !element.isDeleted &&\n      \"fileId\" in element &&\n      element.fileId &&\n      files[element.fileId]\n    ) {\n      nextFiles[element.fileId] = files[element.fileId];\n    }\n  }\n  return nextFiles;\n};\n\nexport const serializeAsJSON = (\n  elements: readonly ExcalidrawElement[],\n  appState: Partial<AppState>,\n  files: BinaryFiles,\n  type: \"local\" | \"database\",\n): string => {\n  const data: ExportedDataState = {\n    type: EXPORT_DATA_TYPES.excalidraw,\n    version: VERSIONS.excalidraw,\n    source: EXPORT_SOURCE,\n    elements:\n      type === \"local\"\n        ? clearElementsForExport(elements)\n        : clearElementsForDatabase(elements),\n    appState:\n      type === \"local\"\n        ? cleanAppStateForExport(appState)\n        : clearAppStateForDatabase(appState),\n    files:\n      type === \"local\"\n        ? filterOutDeletedFiles(elements, files)\n        : // will be stripped from JSON\n          undefined,\n  };\n\n  return JSON.stringify(data, null, 2);\n};\n\nexport const saveAsJSON = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  files: BinaryFiles,\n) => {\n  const serialized = serializeAsJSON(elements, appState, files, \"local\");\n  const blob = new Blob([serialized], {\n    type: MIME_TYPES.excalidraw,\n  });\n\n  const fileHandle = await fileSave(blob, {\n    name: appState.name,\n    extension: \"excalidraw\",\n    description: \"Excalidraw file\",\n    fileHandle: isImageFileHandle(appState.fileHandle)\n      ? null\n      : appState.fileHandle,\n  });\n  return { fileHandle };\n};\n\nexport const loadFromJSON = async (\n  localAppState: AppState,\n  localElements: readonly ExcalidrawElement[] | null,\n) => {\n  const file = await fileOpen({\n    description: \"Excalidraw files\",\n    // ToDo: Be over-permissive until https://bugs.webkit.org/show_bug.cgi?id=34442\n    // gets resolved. Else, iOS users cannot open `.excalidraw` files.\n    // extensions: [\"json\", \"excalidraw\", \"png\", \"svg\"],\n  });\n  return loadFromBlob(\n    await normalizeFile(file),\n    localAppState,\n    localElements,\n    file.handle,\n  );\n};\n\nexport const isValidExcalidrawData = (data?: {\n  type?: any;\n  elements?: any;\n  appState?: any;\n}): data is ImportedDataState => {\n  return (\n    data?.type === EXPORT_DATA_TYPES.excalidraw &&\n    (!data.elements ||\n      (Array.isArray(data.elements) &&\n        (!data.appState || typeof data.appState === \"object\")))\n  );\n};\n\nexport const isValidLibrary = (json: any): json is ImportedLibraryData => {\n  return (\n    typeof json === \"object\" &&\n    json &&\n    json.type === EXPORT_DATA_TYPES.excalidrawLibrary &&\n    (json.version === 1 || json.version === 2)\n  );\n};\n\nexport const serializeLibraryAsJSON = (libraryItems: LibraryItems) => {\n  const data: ExportedLibraryData = {\n    type: EXPORT_DATA_TYPES.excalidrawLibrary,\n    version: VERSIONS.excalidrawLibrary,\n    source: EXPORT_SOURCE,\n    libraryItems,\n  };\n  return JSON.stringify(data, null, 2);\n};\n\nexport const saveLibraryAsJSON = async (libraryItems: LibraryItems) => {\n  const serialized = serializeLibraryAsJSON(libraryItems);\n  await fileSave(\n    new Blob([serialized], {\n      type: MIME_TYPES.excalidrawlib,\n    }),\n    {\n      name: \"library\",\n      extension: \"excalidrawlib\",\n      description: \"Excalidraw library file\",\n    },\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}