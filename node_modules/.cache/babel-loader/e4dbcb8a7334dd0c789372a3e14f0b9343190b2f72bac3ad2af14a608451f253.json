{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\Toast.tsx\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { CloseIcon } from \"./icons\";\nimport \"./Toast.scss\";\nimport { ToolButton } from \"./ToolButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_TOAST_TIMEOUT = 5000;\nexport const Toast = _ref => {\n  let {\n    message,\n    onClose,\n    closable = false,\n    // To prevent autoclose, pass duration as Infinity\n    duration = DEFAULT_TOAST_TIMEOUT\n  } = _ref;\n  const timerRef = useRef(0);\n  const shouldAutoClose = duration !== Infinity;\n  const scheduleTimeout = useCallback(() => {\n    if (!shouldAutoClose) {\n      return;\n    }\n    timerRef.current = window.setTimeout(() => onClose(), duration);\n  }, [onClose, duration, shouldAutoClose]);\n  useEffect(() => {\n    if (!shouldAutoClose) {\n      return;\n    }\n    scheduleTimeout();\n    return () => clearTimeout(timerRef.current);\n  }, [scheduleTimeout, message, duration, shouldAutoClose]);\n  const onMouseEnter = shouldAutoClose ? () => clearTimeout(timerRef === null || timerRef === void 0 ? void 0 : timerRef.current) : undefined;\n  const onMouseLeave = shouldAutoClose ? scheduleTimeout : undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Toast\",\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Toast__message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), closable && /*#__PURE__*/_jsxDEV(ToolButton, {\n      icon: CloseIcon,\n      \"aria-label\": \"close\",\n      type: \"icon\",\n      onClick: onClose,\n      className: \"close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["useCallback","useEffect","useRef","CloseIcon","ToolButton","jsxDEV","_jsxDEV","DEFAULT_TOAST_TIMEOUT","Toast","_ref","message","onClose","closable","duration","timerRef","shouldAutoClose","Infinity","scheduleTimeout","current","window","setTimeout","clearTimeout","onMouseEnter","undefined","onMouseLeave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","type","onClick"],"sources":["D:/project/excalidraw-cn/src/components/Toast.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from \"react\";\nimport { CloseIcon } from \"./icons\";\nimport \"./Toast.scss\";\nimport { ToolButton } from \"./ToolButton\";\n\nconst DEFAULT_TOAST_TIMEOUT = 5000;\n\nexport const Toast = ({\n  message,\n  onClose,\n  closable = false,\n  // To prevent autoclose, pass duration as Infinity\n  duration = DEFAULT_TOAST_TIMEOUT,\n}: {\n  message: string;\n  onClose: () => void;\n  closable?: boolean;\n  duration?: number;\n}) => {\n  const timerRef = useRef<number>(0);\n  const shouldAutoClose = duration !== Infinity;\n  const scheduleTimeout = useCallback(() => {\n    if (!shouldAutoClose) {\n      return;\n    }\n    timerRef.current = window.setTimeout(() => onClose(), duration);\n  }, [onClose, duration, shouldAutoClose]);\n\n  useEffect(() => {\n    if (!shouldAutoClose) {\n      return;\n    }\n    scheduleTimeout();\n    return () => clearTimeout(timerRef.current);\n  }, [scheduleTimeout, message, duration, shouldAutoClose]);\n\n  const onMouseEnter = shouldAutoClose\n    ? () => clearTimeout(timerRef?.current)\n    : undefined;\n  const onMouseLeave = shouldAutoClose ? scheduleTimeout : undefined;\n  return (\n    <div\n      className=\"Toast\"\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    >\n      <p className=\"Toast__message\">{message}</p>\n      {closable && (\n        <ToolButton\n          icon={CloseIcon}\n          aria-label=\"close\"\n          type=\"icon\"\n          onClick={onClose}\n          className=\"close\"\n        />\n      )}\n    </div>\n  );\n};\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACtD,SAASC,SAAS,QAAQ,SAAS;AACnC,OAAO,cAAc;AACrB,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,qBAAqB,GAAG,IAAI;AAElC,OAAO,MAAMC,KAAK,GAAGC,IAAA,IAWf;EAAA,IAXgB;IACpBC,OAAO;IACPC,OAAO;IACPC,QAAQ,GAAG,KAAK;IAChB;IACAC,QAAQ,GAAGN;EAMb,CAAC,GAAAE,IAAA;EACC,MAAMK,QAAQ,GAAGZ,MAAM,CAAS,CAAC,CAAC;EAClC,MAAMa,eAAe,GAAGF,QAAQ,KAAKG,QAAQ;EAC7C,MAAMC,eAAe,GAAGjB,WAAW,CAAC,MAAM;IACxC,IAAI,CAACe,eAAe,EAAE;MACpB;IACF;IACAD,QAAQ,CAACI,OAAO,GAAGC,MAAM,CAACC,UAAU,CAAC,MAAMT,OAAO,EAAE,EAAEE,QAAQ,CAAC;EACjE,CAAC,EAAE,CAACF,OAAO,EAAEE,QAAQ,EAAEE,eAAe,CAAC,CAAC;EAExCd,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,eAAe,EAAE;MACpB;IACF;IACAE,eAAe,EAAE;IACjB,OAAO,MAAMI,YAAY,CAACP,QAAQ,CAACI,OAAO,CAAC;EAC7C,CAAC,EAAE,CAACD,eAAe,EAAEP,OAAO,EAAEG,QAAQ,EAAEE,eAAe,CAAC,CAAC;EAEzD,MAAMO,YAAY,GAAGP,eAAe,GAChC,MAAMM,YAAY,CAACP,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,OAAO,CAAC,GACrCK,SAAS;EACb,MAAMC,YAAY,GAAGT,eAAe,GAAGE,eAAe,GAAGM,SAAS;EAClE,oBACEjB,OAAA;IACEmB,SAAS,EAAC,OAAO;IACjBH,YAAY,EAAEA,YAAa;IAC3BE,YAAY,EAAEA,YAAa;IAAAE,QAAA,gBAE3BpB,OAAA;MAAGmB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAEhB;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAC1ClB,QAAQ,iBACPN,OAAA,CAACF,UAAU;MACT2B,IAAI,EAAE5B,SAAU;MAChB,cAAW,OAAO;MAClB6B,IAAI,EAAC,MAAM;MACXC,OAAO,EAAEtB,OAAQ;MACjBc,SAAS,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEpB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}