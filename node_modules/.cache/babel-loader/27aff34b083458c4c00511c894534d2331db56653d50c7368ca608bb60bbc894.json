{"ast":null,"code":"import { __assign, __read, __spread } from \"tslib\";\n/* eslint-disable max-lines */\nimport { SessionStatus } from '@sentry/types';\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\nimport { Session } from './session';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */function () {\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  function Hub(client, scope, _version) {\n    if (scope === void 0) {\n      scope = new Scope();\n    }\n    if (_version === void 0) {\n      _version = API_VERSION;\n    }\n    this._version = _version;\n    /** Is a {@link Layer}[] containing the client and scope */\n    this._stack = [{}];\n    this.getStackTop().scope = scope;\n    this.bindClient(client);\n  }\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.isOlderThan = function (version) {\n    return this._version < version;\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.bindClient = function (client) {\n    var top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.pushScope = function () {\n    // We want to clone the content of prev scope\n    var scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope: scope\n    });\n    return scope;\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.popScope = function () {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.withScope = function (callback) {\n    var scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.getClient = function () {\n    return this.getStackTop().client;\n  };\n  /** Returns the scope of the top stack. */\n  Hub.prototype.getScope = function () {\n    return this.getStackTop().scope;\n  };\n  /** Returns the scope stack for domains or the process. */\n  Hub.prototype.getStack = function () {\n    return this._stack;\n  };\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  Hub.prototype.getStackTop = function () {\n    return this._stack[this._stack.length - 1];\n  };\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  Hub.prototype.captureException = function (exception, hint) {\n    var eventId = this._lastEventId = uuid4();\n    var finalHint = hint;\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      var syntheticException = void 0;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException: syntheticException\n      };\n    }\n    this._invokeClient('captureException', exception, __assign(__assign({}, finalHint), {\n      event_id: eventId\n    }));\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.captureMessage = function (message, level, hint) {\n    var eventId = this._lastEventId = uuid4();\n    var finalHint = hint;\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      var syntheticException = void 0;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException: syntheticException\n      };\n    }\n    this._invokeClient('captureMessage', message, level, __assign(__assign({}, finalHint), {\n      event_id: eventId\n    }));\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.captureEvent = function (event, hint) {\n    var eventId = this._lastEventId = uuid4();\n    this._invokeClient('captureEvent', event, __assign(__assign({}, hint), {\n      event_id: eventId\n    }));\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.lastEventId = function () {\n    return this._lastEventId;\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n    var _a = this.getStackTop(),\n      scope = _a.scope,\n      client = _a.client;\n    if (!scope || !client) return;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    var _b = client.getOptions && client.getOptions() || {},\n      _c = _b.beforeBreadcrumb,\n      beforeBreadcrumb = _c === void 0 ? null : _c,\n      _d = _b.maxBreadcrumbs,\n      maxBreadcrumbs = _d === void 0 ? DEFAULT_BREADCRUMBS : _d;\n    if (maxBreadcrumbs <= 0) return;\n    var timestamp = dateTimestampInSeconds();\n    var mergedBreadcrumb = __assign({\n      timestamp: timestamp\n    }, breadcrumb);\n    var finalBreadcrumb = beforeBreadcrumb ? consoleSandbox(function () {\n      return beforeBreadcrumb(mergedBreadcrumb, hint);\n    }) : mergedBreadcrumb;\n    if (finalBreadcrumb === null) return;\n    scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.setUser = function (user) {\n    var scope = this.getScope();\n    if (scope) scope.setUser(user);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.setTags = function (tags) {\n    var scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.setExtras = function (extras) {\n    var scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.setTag = function (key, value) {\n    var scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.setExtra = function (key, extra) {\n    var scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  };\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Hub.prototype.setContext = function (name, context) {\n    var scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.configureScope = function (callback) {\n    var _a = this.getStackTop(),\n      scope = _a.scope,\n      client = _a.client;\n    if (scope && client) {\n      callback(scope);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.run = function (callback) {\n    var oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.getIntegration = function (integration) {\n    var client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n      return null;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.startSpan = function (context) {\n    return this._callExtensionMethod('startSpan', context);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.startTransaction = function (context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.traceHeaders = function () {\n    return this._callExtensionMethod('traceHeaders');\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.captureSession = function (endSession) {\n    if (endSession === void 0) {\n      endSession = false;\n    }\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n    // only send the update\n    this._sendSessionUpdate();\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.endSession = function () {\n    var _a, _b, _c, _d, _e;\n    (_c = (_b = (_a = this.getStackTop()) === null || _a === void 0 ? void 0 : _a.scope) === null || _b === void 0 ? void 0 : _b.getSession()) === null || _c === void 0 ? void 0 : _c.close();\n    this._sendSessionUpdate();\n    // the session is over; take it off of the scope\n    (_e = (_d = this.getStackTop()) === null || _d === void 0 ? void 0 : _d.scope) === null || _e === void 0 ? void 0 : _e.setSession();\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.startSession = function (context) {\n    var _a = this.getStackTop(),\n      scope = _a.scope,\n      client = _a.client;\n    var _b = client && client.getOptions() || {},\n      release = _b.release,\n      environment = _b.environment;\n    var session = new Session(__assign(__assign({\n      release: release,\n      environment: environment\n    }, scope && {\n      user: scope.getUser()\n    }), context));\n    if (scope) {\n      // End existing session if there's one\n      var currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === SessionStatus.Ok) {\n        currentSession.update({\n          status: SessionStatus.Exited\n        });\n      }\n      this.endSession();\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n    return session;\n  };\n  /**\n   * Sends the current Session on the scope\n   */\n  Hub.prototype._sendSessionUpdate = function () {\n    var _a = this.getStackTop(),\n      scope = _a.scope,\n      client = _a.client;\n    if (!scope) return;\n    var session = scope.getSession && scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  };\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Hub.prototype._invokeClient = function (method) {\n    var _a;\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var _b = this.getStackTop(),\n      scope = _b.scope,\n      client = _b.client;\n    if (client && client[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      (_a = client)[method].apply(_a, __spread(args, [scope]));\n    }\n  };\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Hub.prototype._callExtensionMethod = function (method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var carrier = getMainCarrier();\n    var sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    logger.warn(\"Extension method \" + method + \" couldn't be found, doing nothing.\");\n  };\n  return Hub;\n}();\nexport { Hub };\n/** Returns the global shim registry. */\nexport function getMainCarrier() {\n  var carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined\n  };\n  return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier();\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveDomain() {\n  logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n  var sentry = getMainCarrier().__SENTRY__;\n  return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  var _a, _b, _c;\n  try {\n    var activeDomain = (_c = (_b = (_a = getMainCarrier().__SENTRY__) === null || _a === void 0 ? void 0 : _a.extensions) === null || _b === void 0 ? void 0 : _b.domain) === null || _c === void 0 ? void 0 : _c.active;\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) return carrier.__SENTRY__.hub;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}","map":{"version":3,"names":["SessionStatus","consoleSandbox","dateTimestampInSeconds","getGlobalObject","isNodeEnv","logger","uuid4","Scope","Session","API_VERSION","DEFAULT_BREADCRUMBS","MAX_BREADCRUMBS","Hub","client","scope","_version","_stack","getStackTop","bindClient","prototype","isOlderThan","version","top","setupIntegrations","pushScope","clone","getScope","getStack","push","getClient","popScope","length","pop","withScope","callback","captureException","exception","hint","eventId","_lastEventId","finalHint","syntheticException","Error","originalException","_invokeClient","__assign","event_id","captureMessage","message","level","captureEvent","event","lastEventId","addBreadcrumb","breadcrumb","_a","_b","getOptions","_c","beforeBreadcrumb","_d","maxBreadcrumbs","timestamp","mergedBreadcrumb","finalBreadcrumb","Math","min","setUser","user","setTags","tags","setExtras","extras","setTag","key","value","setExtra","extra","setContext","name","context","configureScope","run","oldHub","makeMain","getIntegration","integration","_oO","warn","id","startSpan","_callExtensionMethod","startTransaction","customSamplingContext","traceHeaders","captureSession","endSession","_sendSessionUpdate","getSession","close","_e","setSession","startSession","release","environment","session","getUser","currentSession","status","Ok","update","Exited","method","args","_i","arguments","apply","__spread","carrier","getMainCarrier","sentry","__SENTRY__","extensions","hub","undefined","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","getHubFromActiveDomain","getActiveDomain","domain","active","activeDomain","registryHubTopStack","_Oo"],"sources":["D:\\project\\excalidraw-cn\\node_modules\\@sentry\\hub\\src\\hub.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  SessionContext,\n  SessionStatus,\n  Severity,\n  Span,\n  SpanContext,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\n\nimport { Carrier, DomainAsCarrier, Layer } from './interfaces';\nimport { Scope } from './scope';\nimport { Session } from './session';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 3;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [{}];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this.getStackTop().scope = scope;\n    this.bindClient(client);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): void {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(context: SpanContext): Span {\n    return this._callExtensionMethod('startSpan', context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public endSession(): void {\n    this.getStackTop()\n      ?.scope?.getSession()\n      ?.close();\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    this.getStackTop()?.scope?.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSession(context?: SessionContext): Session {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n    const session = new Session({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      const currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === SessionStatus.Ok) {\n        currentSession.update({ status: SessionStatus.Exited });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession && scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const { scope, client } = this.getStackTop();\n    if (client && client[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      (client as any)[method](...args, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveDomain(): DomainAsCarrier | undefined {\n  logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n\n  const sentry = getMainCarrier().__SENTRY__;\n\n  return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    const activeDomain = getMainCarrier().__SENTRY__?.extensions?.domain?.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) return carrier.__SENTRY__.hub;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}