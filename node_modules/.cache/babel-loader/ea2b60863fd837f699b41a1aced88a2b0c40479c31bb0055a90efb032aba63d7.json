{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\JSONExportDialog.tsx\";\nimport React from \"react\";\nimport { t } from \"../i18n\";\nimport { Dialog } from \"./Dialog\";\nimport { exportToFileIcon, LinkIcon } from \"./icons\";\nimport { ToolButton } from \"./ToolButton\";\nimport { actionSaveFileToDisk } from \"../actions/actionExport\";\nimport { Card } from \"./Card\";\nimport \"./ExportDialog.scss\";\nimport { nativeFileSystemSupported } from \"../data/filesystem\";\nimport { trackEvent } from \"../analytics\";\nimport { getFrame } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JSONExportModal = _ref => {\n  let {\n    elements,\n    appState,\n    files,\n    actionManager,\n    exportOpts,\n    canvas\n  } = _ref;\n  const {\n    onExportToBackend\n  } = exportOpts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ExportDialog ExportDialog--json\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ExportDialog-cards\",\n      children: [exportOpts.saveFileToDisk && /*#__PURE__*/_jsxDEV(Card, {\n        color: \"lime\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Card-icon\",\n          children: exportToFileIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: t(\"exportDialog.disk_title\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Card-details\",\n          children: [t(\"exportDialog.disk_details\"), !nativeFileSystemSupported && actionManager.renderAction(\"changeProjectName\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToolButton, {\n          className: \"Card-button\",\n          type: \"button\",\n          title: t(\"exportDialog.disk_button\"),\n          \"aria-label\": t(\"exportDialog.disk_button\"),\n          showAriaLabel: true,\n          onClick: () => {\n            actionManager.executeAction(actionSaveFileToDisk, \"ui\");\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), onExportToBackend && /*#__PURE__*/_jsxDEV(Card, {\n        color: \"pink\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Card-icon\",\n          children: LinkIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: t(\"exportDialog.link_title\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Card-details\",\n          children: t(\"exportDialog.link_details\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToolButton, {\n          className: \"Card-button\",\n          type: \"button\",\n          title: t(\"exportDialog.link_button\"),\n          \"aria-label\": t(\"exportDialog.link_button\"),\n          showAriaLabel: true,\n          onClick: () => {\n            onExportToBackend(elements, appState, files, canvas);\n            trackEvent(\"export\", \"link\", `ui (${getFrame()})`);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), exportOpts.renderCustomUI && exportOpts.renderCustomUI(elements, appState, files, canvas)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\nexport const JSONExportDialog = _ref2 => {\n  let {\n    elements,\n    appState,\n    files,\n    actionManager,\n    exportOpts,\n    canvas,\n    setAppState\n  } = _ref2;\n  const handleClose = React.useCallback(() => {\n    setAppState({\n      openDialog: null\n    });\n  }, [setAppState]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: appState.openDialog === \"jsonExport\" && /*#__PURE__*/_jsxDEV(Dialog, {\n      onCloseRequest: handleClose,\n      title: t(\"buttons.export\"),\n      children: /*#__PURE__*/_jsxDEV(JSONExportModal, {\n        elements: elements,\n        appState: appState,\n        files: files,\n        actionManager: actionManager,\n        onCloseRequest: handleClose,\n        exportOpts: exportOpts,\n        canvas: canvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};","map":{"version":3,"names":["React","t","Dialog","exportToFileIcon","LinkIcon","ToolButton","actionSaveFileToDisk","Card","nativeFileSystemSupported","trackEvent","getFrame","jsxDEV","_jsxDEV","Fragment","_Fragment","JSONExportModal","_ref","elements","appState","files","actionManager","exportOpts","canvas","onExportToBackend","className","children","saveFileToDisk","color","fileName","_jsxFileName","lineNumber","columnNumber","renderAction","type","title","showAriaLabel","onClick","executeAction","renderCustomUI","JSONExportDialog","_ref2","setAppState","handleClose","useCallback","openDialog","onCloseRequest"],"sources":["D:/project/excalidraw-cn/src/components/JSONExportDialog.tsx"],"sourcesContent":["import React from \"react\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\n\nimport { ExportOpts, BinaryFiles, UIAppState } from \"../types\";\nimport { Dialog } from \"./Dialog\";\nimport { exportToFileIcon, LinkIcon } from \"./icons\";\nimport { ToolButton } from \"./ToolButton\";\nimport { actionSaveFileToDisk } from \"../actions/actionExport\";\nimport { Card } from \"./Card\";\n\nimport \"./ExportDialog.scss\";\nimport { nativeFileSystemSupported } from \"../data/filesystem\";\nimport { trackEvent } from \"../analytics\";\nimport { ActionManager } from \"../actions/manager\";\nimport { getFrame } from \"../utils\";\n\nexport type ExportCB = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  scale?: number,\n) => void;\n\nconst JSONExportModal = ({\n  elements,\n  appState,\n  files,\n  actionManager,\n  exportOpts,\n  canvas,\n}: {\n  appState: UIAppState;\n  files: BinaryFiles;\n  elements: readonly NonDeletedExcalidrawElement[];\n  actionManager: ActionManager;\n  onCloseRequest: () => void;\n  exportOpts: ExportOpts;\n  canvas: HTMLCanvasElement | null;\n}) => {\n  const { onExportToBackend } = exportOpts;\n  return (\n    <div className=\"ExportDialog ExportDialog--json\">\n      <div className=\"ExportDialog-cards\">\n        {exportOpts.saveFileToDisk && (\n          <Card color=\"lime\">\n            <div className=\"Card-icon\">{exportToFileIcon}</div>\n            <h2>{t(\"exportDialog.disk_title\")}</h2>\n            <div className=\"Card-details\">\n              {t(\"exportDialog.disk_details\")}\n              {!nativeFileSystemSupported &&\n                actionManager.renderAction(\"changeProjectName\")}\n            </div>\n            <ToolButton\n              className=\"Card-button\"\n              type=\"button\"\n              title={t(\"exportDialog.disk_button\")}\n              aria-label={t(\"exportDialog.disk_button\")}\n              showAriaLabel={true}\n              onClick={() => {\n                actionManager.executeAction(actionSaveFileToDisk, \"ui\");\n              }}\n            />\n          </Card>\n        )}\n        {onExportToBackend && (\n          <Card color=\"pink\">\n            <div className=\"Card-icon\">{LinkIcon}</div>\n            <h2>{t(\"exportDialog.link_title\")}</h2>\n            <div className=\"Card-details\">{t(\"exportDialog.link_details\")}</div>\n            <ToolButton\n              className=\"Card-button\"\n              type=\"button\"\n              title={t(\"exportDialog.link_button\")}\n              aria-label={t(\"exportDialog.link_button\")}\n              showAriaLabel={true}\n              onClick={() => {\n                onExportToBackend(elements, appState, files, canvas);\n                trackEvent(\"export\", \"link\", `ui (${getFrame()})`);\n              }}\n            />\n          </Card>\n        )}\n        {exportOpts.renderCustomUI &&\n          exportOpts.renderCustomUI(elements, appState, files, canvas)}\n      </div>\n    </div>\n  );\n};\n\nexport const JSONExportDialog = ({\n  elements,\n  appState,\n  files,\n  actionManager,\n  exportOpts,\n  canvas,\n  setAppState,\n}: {\n  elements: readonly NonDeletedExcalidrawElement[];\n  appState: UIAppState;\n  files: BinaryFiles;\n  actionManager: ActionManager;\n  exportOpts: ExportOpts;\n  canvas: HTMLCanvasElement | null;\n  setAppState: React.Component<any, UIAppState>[\"setState\"];\n}) => {\n  const handleClose = React.useCallback(() => {\n    setAppState({ openDialog: null });\n  }, [setAppState]);\n\n  return (\n    <>\n      {appState.openDialog === \"jsonExport\" && (\n        <Dialog onCloseRequest={handleClose} title={t(\"buttons.export\")}>\n          <JSONExportModal\n            elements={elements}\n            appState={appState}\n            files={files}\n            actionManager={actionManager}\n            onCloseRequest={handleClose}\n            exportOpts={exportOpts}\n            canvas={canvas}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,CAAC,QAAQ,SAAS;AAG3B,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,gBAAgB,EAAEC,QAAQ,QAAQ,SAAS;AACpD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,IAAI,QAAQ,QAAQ;AAE7B,OAAO,qBAAqB;AAC5B,SAASC,yBAAyB,QAAQ,oBAAoB;AAC9D,SAASC,UAAU,QAAQ,cAAc;AAEzC,SAASC,QAAQ,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAOpC,MAAMC,eAAe,GAAGC,IAAA,IAelB;EAAA,IAfmB;IACvBC,QAAQ;IACRC,QAAQ;IACRC,KAAK;IACLC,aAAa;IACbC,UAAU;IACVC;EASF,CAAC,GAAAN,IAAA;EACC,MAAM;IAAEO;EAAkB,CAAC,GAAGF,UAAU;EACxC,oBACET,OAAA;IAAKY,SAAS,EAAC,iCAAiC;IAAAC,QAAA,eAC9Cb,OAAA;MAAKY,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAChCJ,UAAU,CAACK,cAAc,iBACxBd,OAAA,CAACL,IAAI;QAACoB,KAAK,EAAC,MAAM;QAAAF,QAAA,gBAChBb,OAAA;UAAKY,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEtB;QAAgB;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eACnDnB,OAAA;UAAAa,QAAA,EAAKxB,CAAC,CAAC,yBAAyB;QAAC;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACvCnB,OAAA;UAAKY,SAAS,EAAC,cAAc;UAAAC,QAAA,GAC1BxB,CAAC,CAAC,2BAA2B,CAAC,EAC9B,CAACO,yBAAyB,IACzBY,aAAa,CAACY,YAAY,CAAC,mBAAmB,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7C,eACNnB,OAAA,CAACP,UAAU;UACTmB,SAAS,EAAC,aAAa;UACvBS,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEjC,CAAC,CAAC,0BAA0B,CAAE;UACrC,cAAYA,CAAC,CAAC,0BAA0B,CAAE;UAC1CkC,aAAa,EAAE,IAAK;UACpBC,OAAO,EAAEA,CAAA,KAAM;YACbhB,aAAa,CAACiB,aAAa,CAAC/B,oBAAoB,EAAE,IAAI,CAAC;UACzD;QAAE;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEL,EACAR,iBAAiB,iBAChBX,OAAA,CAACL,IAAI;QAACoB,KAAK,EAAC,MAAM;QAAAF,QAAA,gBAChBb,OAAA;UAAKY,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAErB;QAAQ;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAC3CnB,OAAA;UAAAa,QAAA,EAAKxB,CAAC,CAAC,yBAAyB;QAAC;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACvCnB,OAAA;UAAKY,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAExB,CAAC,CAAC,2BAA2B;QAAC;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eACpEnB,OAAA,CAACP,UAAU;UACTmB,SAAS,EAAC,aAAa;UACvBS,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEjC,CAAC,CAAC,0BAA0B,CAAE;UACrC,cAAYA,CAAC,CAAC,0BAA0B,CAAE;UAC1CkC,aAAa,EAAE,IAAK;UACpBC,OAAO,EAAEA,CAAA,KAAM;YACbb,iBAAiB,CAACN,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAEG,MAAM,CAAC;YACpDb,UAAU,CAAC,QAAQ,EAAE,MAAM,EAAG,OAAMC,QAAQ,EAAG,GAAE,CAAC;UACpD;QAAE;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEL,EACAV,UAAU,CAACiB,cAAc,IACxBjB,UAAU,CAACiB,cAAc,CAACrB,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAEG,MAAM,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC1D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAED,OAAO,MAAMQ,gBAAgB,GAAGC,KAAA,IAgB1B;EAAA,IAhB2B;IAC/BvB,QAAQ;IACRC,QAAQ;IACRC,KAAK;IACLC,aAAa;IACbC,UAAU;IACVC,MAAM;IACNmB;EASF,CAAC,GAAAD,KAAA;EACC,MAAME,WAAW,GAAG1C,KAAK,CAAC2C,WAAW,CAAC,MAAM;IAC1CF,WAAW,CAAC;MAAEG,UAAU,EAAE;IAAK,CAAC,CAAC;EACnC,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,oBACE7B,OAAA,CAAAE,SAAA;IAAAW,QAAA,EACGP,QAAQ,CAAC0B,UAAU,KAAK,YAAY,iBACnChC,OAAA,CAACV,MAAM;MAAC2C,cAAc,EAAEH,WAAY;MAACR,KAAK,EAAEjC,CAAC,CAAC,gBAAgB,CAAE;MAAAwB,QAAA,eAC9Db,OAAA,CAACG,eAAe;QACdE,QAAQ,EAAEA,QAAS;QACnBC,QAAQ,EAAEA,QAAS;QACnBC,KAAK,EAAEA,KAAM;QACbC,aAAa,EAAEA,aAAc;QAC7ByB,cAAc,EAAEH,WAAY;QAC5BrB,UAAU,EAAEA,UAAW;QACvBC,MAAM,EAAEA;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACf;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEL,iBACA;AAEP,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}