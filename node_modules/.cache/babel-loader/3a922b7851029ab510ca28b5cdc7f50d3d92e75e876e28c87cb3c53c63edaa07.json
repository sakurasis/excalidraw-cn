{"ast":null,"code":"import { STORAGE_KEYS } from \"../app_constants\";\n\n// in-memory state (this tab's current state) versions. Currently just\n// timestamps of the last time the state was saved to browser storage.\nconst LOCAL_STATE_VERSIONS = {\n  [STORAGE_KEYS.VERSION_DATA_STATE]: -1,\n  [STORAGE_KEYS.VERSION_FILES]: -1\n};\nexport const isBrowserStorageStateNewer = type => {\n  const storageTimestamp = JSON.parse(localStorage.getItem(type) || \"-1\");\n  return storageTimestamp > LOCAL_STATE_VERSIONS[type];\n};\nexport const updateBrowserStateVersion = type => {\n  const timestamp = Date.now();\n  localStorage.setItem(type, JSON.stringify(timestamp));\n  LOCAL_STATE_VERSIONS[type] = timestamp;\n};\nexport const resetBrowserStateVersions = () => {\n  for (const key of Object.keys(LOCAL_STATE_VERSIONS)) {\n    const timestamp = -1;\n    localStorage.setItem(key, JSON.stringify(timestamp));\n    LOCAL_STATE_VERSIONS[key] = timestamp;\n  }\n};","map":{"version":3,"names":["STORAGE_KEYS","LOCAL_STATE_VERSIONS","VERSION_DATA_STATE","VERSION_FILES","isBrowserStorageStateNewer","type","storageTimestamp","JSON","parse","localStorage","getItem","updateBrowserStateVersion","timestamp","Date","now","setItem","stringify","resetBrowserStateVersions","key","Object","keys"],"sources":["D:/project/excalidraw-cn/src/excalidraw-app/data/tabSync.ts"],"sourcesContent":["import { STORAGE_KEYS } from \"../app_constants\";\n\n// in-memory state (this tab's current state) versions. Currently just\n// timestamps of the last time the state was saved to browser storage.\nconst LOCAL_STATE_VERSIONS = {\n  [STORAGE_KEYS.VERSION_DATA_STATE]: -1,\n  [STORAGE_KEYS.VERSION_FILES]: -1,\n};\n\ntype BrowserStateTypes = keyof typeof LOCAL_STATE_VERSIONS;\n\nexport const isBrowserStorageStateNewer = (type: BrowserStateTypes) => {\n  const storageTimestamp = JSON.parse(localStorage.getItem(type) || \"-1\");\n  return storageTimestamp > LOCAL_STATE_VERSIONS[type];\n};\n\nexport const updateBrowserStateVersion = (type: BrowserStateTypes) => {\n  const timestamp = Date.now();\n  localStorage.setItem(type, JSON.stringify(timestamp));\n  LOCAL_STATE_VERSIONS[type] = timestamp;\n};\n\nexport const resetBrowserStateVersions = () => {\n  for (const key of Object.keys(LOCAL_STATE_VERSIONS) as BrowserStateTypes[]) {\n    const timestamp = -1;\n    localStorage.setItem(key, JSON.stringify(timestamp));\n    LOCAL_STATE_VERSIONS[key] = timestamp;\n  }\n};\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;;AAE/C;AACA;AACA,MAAMC,oBAAoB,GAAG;EAC3B,CAACD,YAAY,CAACE,kBAAkB,GAAG,CAAC,CAAC;EACrC,CAACF,YAAY,CAACG,aAAa,GAAG,CAAC;AACjC,CAAC;AAID,OAAO,MAAMC,0BAA0B,GAAIC,IAAuB,IAAK;EACrE,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACL,IAAI,CAAC,IAAI,IAAI,CAAC;EACvE,OAAOC,gBAAgB,GAAGL,oBAAoB,CAACI,IAAI,CAAC;AACtD,CAAC;AAED,OAAO,MAAMM,yBAAyB,GAAIN,IAAuB,IAAK;EACpE,MAAMO,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;EAC5BL,YAAY,CAACM,OAAO,CAACV,IAAI,EAAEE,IAAI,CAACS,SAAS,CAACJ,SAAS,CAAC,CAAC;EACrDX,oBAAoB,CAACI,IAAI,CAAC,GAAGO,SAAS;AACxC,CAAC;AAED,OAAO,MAAMK,yBAAyB,GAAGA,CAAA,KAAM;EAC7C,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACnB,oBAAoB,CAAC,EAAyB;IAC1E,MAAMW,SAAS,GAAG,CAAC,CAAC;IACpBH,YAAY,CAACM,OAAO,CAACG,GAAG,EAAEX,IAAI,CAACS,SAAS,CAACJ,SAAS,CAAC,CAAC;IACpDX,oBAAoB,CAACiB,GAAG,CAAC,GAAGN,SAAS;EACvC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}