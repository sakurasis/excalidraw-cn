{"ast":null,"code":"var _createForOfIteratorHelper = require(\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _slicedToArray = require(\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _toConsumableArray = require(\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n/*\n *  Implements the .roundRect() method of the CanvasPath mixin\n *  as introduced by https://github.com/whatwg/html/pull/6765\n */\n(function () {\n  \"use strict\";\n\n  var _Path2D$prototype, _Path2D$prototype$rou;\n  (_Path2D$prototype$rou = (_Path2D$prototype = Path2D.prototype).roundRect) !== null && _Path2D$prototype$rou !== void 0 ? _Path2D$prototype$rou : _Path2D$prototype.roundRect = roundRect;\n  if (globalThis.CanvasRenderingContext2D) {\n    var _globalThis$CanvasRen, _globalThis$CanvasRen2;\n    (_globalThis$CanvasRen2 = (_globalThis$CanvasRen = globalThis.CanvasRenderingContext2D.prototype).roundRect) !== null && _globalThis$CanvasRen2 !== void 0 ? _globalThis$CanvasRen2 : _globalThis$CanvasRen.roundRect = roundRect;\n  }\n  if (globalThis.OffscreenCanvasRenderingContext2D) {\n    var _globalThis$Offscreen, _globalThis$Offscreen2;\n    (_globalThis$Offscreen2 = (_globalThis$Offscreen = globalThis.OffscreenCanvasRenderingContext2D.prototype).roundRect) !== null && _globalThis$Offscreen2 !== void 0 ? _globalThis$Offscreen2 : _globalThis$Offscreen.roundRect = roundRect;\n  }\n  function roundRect(x, y, w, h, radii) {\n    if (![x, y, w, h].every(function (input) {\n      return Number.isFinite(input);\n    })) {\n      return;\n    }\n    radii = parseRadiiArgument(radii);\n    var upperLeft, upperRight, lowerRight, lowerLeft;\n    if (radii.length === 4) {\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerRight = toCornerPoint(radii[2]);\n      lowerLeft = toCornerPoint(radii[3]);\n    } else if (radii.length === 3) {\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerLeft = toCornerPoint(radii[1]);\n      lowerRight = toCornerPoint(radii[2]);\n    } else if (radii.length === 2) {\n      upperLeft = toCornerPoint(radii[0]);\n      lowerRight = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerLeft = toCornerPoint(radii[1]);\n    } else if (radii.length === 1) {\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[0]);\n      lowerRight = toCornerPoint(radii[0]);\n      lowerLeft = toCornerPoint(radii[0]);\n    } else {\n      throw new RangeError(\"\".concat(getErrorMessageHeader(this), \" \").concat(radii.length, \" is not a valid size for radii sequence.\"));\n    }\n    var corners = [upperLeft, upperRight, lowerRight, lowerLeft];\n    var negativeCorner = corners.find(function (_ref) {\n      var x = _ref.x,\n        y = _ref.y;\n      return x < 0 || y < 0;\n    });\n    var negativeValue = (negativeCorner === null || negativeCorner === void 0 ? void 0 : negativeCorner.x) < 0 ? negativeCorner.x : negativeCorner === null || negativeCorner === void 0 ? void 0 : negativeCorner.y;\n    if (corners.some(function (_ref2) {\n      var x = _ref2.x,\n        y = _ref2.y;\n      return !Number.isFinite(x) || !Number.isFinite(y);\n    })) {\n      return;\n    }\n    if (negativeCorner) {\n      throw new RangeError(\"\".concat(getErrorMessageHeader(this), \" Radius value \").concat(negativeCorner, \" is negative.\"));\n    }\n    fixOverlappingCorners(corners);\n    if (w < 0 && h < 0) {\n      this.moveTo(x - upperLeft.x, y);\n      this.ellipse(x + w + upperRight.x, y - upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI * 1.5, -Math.PI);\n      this.ellipse(x + w + lowerRight.x, y + h + lowerRight.y, lowerRight.x, lowerRight.y, 0, -Math.PI, -Math.PI / 2);\n      this.ellipse(x - lowerLeft.x, y + h + lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, -Math.PI / 2, 0);\n      this.ellipse(x - upperLeft.x, y - upperLeft.y, upperLeft.x, upperLeft.y, 0, 0, -Math.PI / 2);\n    } else if (w < 0) {\n      this.moveTo(x - upperLeft.x, y);\n      this.ellipse(x + w + upperRight.x, y + upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI / 2, -Math.PI, 1);\n      this.ellipse(x + w + lowerRight.x, y + h - lowerRight.y, lowerRight.x, lowerRight.y, 0, -Math.PI, -Math.PI * 1.5, 1);\n      this.ellipse(x - lowerLeft.x, y + h - lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, Math.PI / 2, 0, 1);\n      this.ellipse(x - upperLeft.x, y + upperLeft.y, upperLeft.x, upperLeft.y, 0, 0, -Math.PI / 2, 1);\n    } else if (h < 0) {\n      this.moveTo(x + upperLeft.x, y);\n      this.ellipse(x + w - upperRight.x, y - upperRight.y, upperRight.x, upperRight.y, 0, Math.PI / 2, 0, 1);\n      this.ellipse(x + w - lowerRight.x, y + h + lowerRight.y, lowerRight.x, lowerRight.y, 0, 0, -Math.PI / 2, 1);\n      this.ellipse(x + lowerLeft.x, y + h + lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, -Math.PI / 2, -Math.PI, 1);\n      this.ellipse(x + upperLeft.x, y - upperLeft.y, upperLeft.x, upperLeft.y, 0, -Math.PI, -Math.PI * 1.5, 1);\n    } else {\n      this.moveTo(x + upperLeft.x, y);\n      this.ellipse(x + w - upperRight.x, y + upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI / 2, 0);\n      this.ellipse(x + w - lowerRight.x, y + h - lowerRight.y, lowerRight.x, lowerRight.y, 0, 0, Math.PI / 2);\n      this.ellipse(x + lowerLeft.x, y + h - lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, Math.PI / 2, Math.PI);\n      this.ellipse(x + upperLeft.x, y + upperLeft.y, upperLeft.x, upperLeft.y, 0, Math.PI, Math.PI * 1.5);\n    }\n    this.closePath();\n    this.moveTo(x, y);\n    function toDOMPointInit(value) {\n      var x = value.x,\n        y = value.y,\n        z = value.z,\n        w = value.w;\n      return {\n        x: x,\n        y: y,\n        z: z,\n        w: w\n      };\n    }\n    function parseRadiiArgument(value) {\n      // https://webidl.spec.whatwg.org/#es-union\n      // with 'optional (unrestricted double or DOMPointInit\n      //   or sequence<(unrestricted double or DOMPointInit)>) radii = 0'\n      var type = typeof value;\n      if (type === \"undefined\" || value === null) {\n        return [0];\n      }\n      if (type === \"function\") {\n        return [NaN];\n      }\n      if (type === \"object\") {\n        if (typeof value[Symbol.iterator] === \"function\") {\n          return _toConsumableArray(value).map(function (elem) {\n            // https://webidl.spec.whatwg.org/#es-union\n            // with '(unrestricted double or DOMPointInit)'\n            var elemType = typeof elem;\n            if (elemType === \"undefined\" || elem === null) {\n              return 0;\n            }\n            if (elemType === \"function\") {\n              return NaN;\n            }\n            if (elemType === \"object\") {\n              return toDOMPointInit(elem);\n            }\n            return toUnrestrictedNumber(elem);\n          });\n        }\n        return [toDOMPointInit(value)];\n      }\n      return [toUnrestrictedNumber(value)];\n    }\n    function toUnrestrictedNumber(value) {\n      return +value;\n    }\n    function toCornerPoint(value) {\n      var asNumber = toUnrestrictedNumber(value);\n      if (Number.isFinite(asNumber)) {\n        return {\n          x: asNumber,\n          y: asNumber\n        };\n      }\n      if (Object(value) === value) {\n        var _value$x, _value$y;\n        return {\n          x: toUnrestrictedNumber((_value$x = value.x) !== null && _value$x !== void 0 ? _value$x : 0),\n          y: toUnrestrictedNumber((_value$y = value.y) !== null && _value$y !== void 0 ? _value$y : 0)\n        };\n      }\n      return {\n        x: NaN,\n        y: NaN\n      };\n    }\n    function fixOverlappingCorners(corners) {\n      var _corners = _slicedToArray(corners, 4),\n        upperLeft = _corners[0],\n        upperRight = _corners[1],\n        lowerRight = _corners[2],\n        lowerLeft = _corners[3];\n      var factors = [Math.abs(w) / (upperLeft.x + upperRight.x), Math.abs(h) / (upperRight.y + lowerRight.y), Math.abs(w) / (lowerRight.x + lowerLeft.x), Math.abs(h) / (upperLeft.y + lowerLeft.y)];\n      var minFactor = Math.min.apply(Math, factors);\n      if (minFactor <= 1) {\n        var _iterator = _createForOfIteratorHelper(corners),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _radii = _step.value;\n            _radii.x *= minFactor;\n            _radii.y *= minFactor;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  }\n  function getErrorMessageHeader(instance) {\n    return \"Failed to execute 'roundRect' on '\".concat(getConstructorName(instance), \"':\");\n  }\n  function getConstructorName(instance) {\n    return Object(instance) === instance && instance instanceof Path2D ? \"Path2D\" : instance instanceof (globalThis === null || globalThis === void 0 ? void 0 : globalThis.CanvasRenderingContext2D) ? \"CanvasRenderingContext2D\" : instance instanceof (globalThis === null || globalThis === void 0 ? void 0 : globalThis.OffscreenCanvasRenderingContext2D) ? \"OffscreenCanvasRenderingContext2D\" : (instance === null || instance === void 0 ? void 0 : instance.constructor.name) || instance;\n  }\n})();","map":{"version":3,"names":["_Path2D$prototype","_Path2D$prototype$rou","Path2D","prototype","roundRect","globalThis","CanvasRenderingContext2D","_globalThis$CanvasRen","_globalThis$CanvasRen2","OffscreenCanvasRenderingContext2D","_globalThis$Offscreen","_globalThis$Offscreen2","x","y","w","h","radii","every","input","Number","isFinite","parseRadiiArgument","upperLeft","upperRight","lowerRight","lowerLeft","length","toCornerPoint","RangeError","concat","getErrorMessageHeader","corners","negativeCorner","find","_ref","negativeValue","some","_ref2","fixOverlappingCorners","moveTo","ellipse","Math","PI","closePath","toDOMPointInit","value","z","type","NaN","Symbol","iterator","_toConsumableArray","map","elem","elemType","toUnrestrictedNumber","asNumber","Object","_value$x","_value$y","_corners","_slicedToArray","factors","abs","minFactor","min","apply","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","instance","getConstructorName","constructor","name"],"sources":["D:/project/excalidraw-cn/node_modules/canvas-roundrect-polyfill/roundRect.js"],"sourcesContent":["/*\n *  Implements the .roundRect() method of the CanvasPath mixin\n *  as introduced by https://github.com/whatwg/html/pull/6765\n */\n(() => {\n\n  \"use strict\";\n\n  Path2D.prototype.roundRect ??= roundRect;\n  if (globalThis.CanvasRenderingContext2D) {\n\n    globalThis.CanvasRenderingContext2D.prototype.roundRect ??= roundRect;\n\n  }\n  if (globalThis.OffscreenCanvasRenderingContext2D) {\n\n    globalThis.OffscreenCanvasRenderingContext2D.prototype.roundRect ??= roundRect;\n\n  }\n\n  function roundRect(x, y, w, h, radii) {\n\n    if (!([x, y, w, h].every((input) => Number.isFinite(input)))) {\n\n      return;\n\n    }\n\n    radii = parseRadiiArgument(radii);\n\n    let upperLeft, upperRight, lowerRight, lowerLeft;\n\n    if (radii.length === 4) {\n\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerRight = toCornerPoint(radii[2]);\n      lowerLeft = toCornerPoint(radii[3]);\n\n    } else if (radii.length === 3) {\n\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerLeft = toCornerPoint(radii[1]);\n      lowerRight = toCornerPoint(radii[2]);\n\n    } else if (radii.length === 2) {\n\n      upperLeft = toCornerPoint(radii[0]);\n      lowerRight = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerLeft = toCornerPoint(radii[1]);\n\n    } else if (radii.length === 1) {\n\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[0]);\n      lowerRight = toCornerPoint(radii[0]);\n      lowerLeft = toCornerPoint(radii[0]);\n\n    } else {\n\n      throw new RangeError(`${ getErrorMessageHeader(this) } ${ radii.length } is not a valid size for radii sequence.`);\n\n    }\n\n    const corners = [upperLeft, upperRight, lowerRight, lowerLeft];\n    const negativeCorner = corners.find(({x, y}) => x < 0 || y < 0);\n    const negativeValue = negativeCorner?.x < 0 ? negativeCorner.x : negativeCorner?.y\n\n    if (corners.some(({x, y}) => !Number.isFinite(x) || !Number.isFinite(y))) {\n\n      return;\n\n    }\n\n    if (negativeCorner) {\n\n      throw new RangeError(`${ getErrorMessageHeader(this) } Radius value ${ negativeCorner } is negative.`);\n\n    }\n\n    fixOverlappingCorners(corners);\n\n    if (w < 0 && h < 0) {\n\n      this.moveTo(x - upperLeft.x, y);\n      this.ellipse(x + w + upperRight.x, y - upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI * 1.5, -Math.PI);\n      this.ellipse(x + w + lowerRight.x, y + h + lowerRight.y, lowerRight.x, lowerRight.y, 0, -Math.PI, -Math.PI / 2);\n      this.ellipse(x - lowerLeft.x, y + h + lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, -Math.PI / 2, 0);\n      this.ellipse(x - upperLeft.x, y - upperLeft.y, upperLeft.x, upperLeft.y, 0, 0, -Math.PI / 2);\n\n    } else if (w < 0) {\n\n      this.moveTo(x - upperLeft.x, y);\n      this.ellipse(x + w + upperRight.x, y + upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI / 2, -Math.PI, 1);\n      this.ellipse(x + w + lowerRight.x, y + h - lowerRight.y, lowerRight.x, lowerRight.y, 0, -Math.PI, -Math.PI * 1.5, 1);\n      this.ellipse(x - lowerLeft.x, y + h - lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, Math.PI / 2, 0, 1);\n      this.ellipse(x - upperLeft.x, y + upperLeft.y, upperLeft.x, upperLeft.y, 0, 0, -Math.PI / 2, 1);\n\n    } else if (h < 0) {\n\n      this.moveTo(x + upperLeft.x, y);\n      this.ellipse(x + w - upperRight.x, y - upperRight.y, upperRight.x, upperRight.y, 0, Math.PI / 2, 0, 1);\n      this.ellipse(x + w - lowerRight.x, y + h + lowerRight.y, lowerRight.x, lowerRight.y, 0, 0, -Math.PI / 2, 1);\n      this.ellipse(x + lowerLeft.x, y + h + lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, -Math.PI / 2, -Math.PI, 1);\n      this.ellipse(x + upperLeft.x, y - upperLeft.y, upperLeft.x, upperLeft.y, 0, -Math.PI, -Math.PI * 1.5, 1);\n\n    } else {\n\n      this.moveTo(x + upperLeft.x, y);\n      this.ellipse(x + w - upperRight.x, y + upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI / 2, 0);\n      this.ellipse(x + w - lowerRight.x, y + h - lowerRight.y, lowerRight.x, lowerRight.y, 0, 0, Math.PI / 2);\n      this.ellipse(x + lowerLeft.x, y + h - lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, Math.PI / 2, Math.PI);\n      this.ellipse(x + upperLeft.x, y + upperLeft.y, upperLeft.x, upperLeft.y, 0, Math.PI, Math.PI * 1.5);\n\n    }\n\n    this.closePath();\n    this.moveTo(x, y);\n\n    function toDOMPointInit(value) {\n\n      const {x, y, z, w} = value;\n      return {x, y, z, w};\n\n    }\n\n    function parseRadiiArgument(value) {\n\n      // https://webidl.spec.whatwg.org/#es-union\n      // with 'optional (unrestricted double or DOMPointInit\n      //   or sequence<(unrestricted double or DOMPointInit)>) radii = 0'\n      const type = typeof value;\n\n      if (type === \"undefined\" || value === null) {\n\n        return [0];\n\n      }\n      if (type === \"function\") {\n\n        return [NaN];\n\n      }\n      if (type === \"object\") {\n\n        if (typeof value[Symbol.iterator] === \"function\") {\n\n          return [...value].map((elem) => {\n            // https://webidl.spec.whatwg.org/#es-union\n            // with '(unrestricted double or DOMPointInit)'\n            const elemType = typeof elem;\n            if (elemType === \"undefined\" || elem === null) {\n              return 0;\n            }\n            if (elemType === \"function\") {\n              return NaN;\n            }\n            if (elemType === \"object\") {\n              return toDOMPointInit(elem);\n            }\n            return toUnrestrictedNumber(elem);\n          });\n\n        }\n\n        return [toDOMPointInit(value)];\n\n      }\n\n      return [toUnrestrictedNumber(value)];\n\n    }\n\n    function toUnrestrictedNumber(value) {\n\n      return +value;\n\n    }\n\n    function toCornerPoint(value) {\n\n      const asNumber = toUnrestrictedNumber(value);\n      if (Number.isFinite(asNumber)) {\n\n        return {\n          x: asNumber,\n          y: asNumber\n        };\n\n      }\n      if (Object(value) === value) {\n\n        return {\n          x: toUnrestrictedNumber(value.x ?? 0),\n          y: toUnrestrictedNumber(value.y ?? 0)\n        };\n\n      }\n\n      return {\n        x: NaN,\n        y: NaN\n      };\n\n    }\n\n    function fixOverlappingCorners(corners) {\n\n      const [upperLeft, upperRight, lowerRight, lowerLeft] = corners;\n      const factors = [\n        Math.abs(w) / (upperLeft.x + upperRight.x),\n        Math.abs(h) / (upperRight.y + lowerRight.y),\n        Math.abs(w) / (lowerRight.x + lowerLeft.x),\n        Math.abs(h) / (upperLeft.y + lowerLeft.y)\n      ];\n      const minFactor = Math.min(...factors);\n      if (minFactor <= 1) {\n\n        for (const radii of corners) {\n\n          radii.x *= minFactor;\n          radii.y *= minFactor;\n\n        }\n\n      }\n\n    }\n\n  }\n\n  function getErrorMessageHeader(instance) {\n\n    return `Failed to execute 'roundRect' on '${ getConstructorName(instance) }':`;\n\n  }\n\n  function getConstructorName(instance) {\n\n    return Object(instance) === instance &&\n      instance instanceof Path2D ? \"Path2D\" :\n      instance instanceof globalThis?.CanvasRenderingContext2D ? \"CanvasRenderingContext2D\" :\n      instance instanceof globalThis?.OffscreenCanvasRenderingContext2D ? \"OffscreenCanvasRenderingContext2D\" :\n      instance?.constructor.name ||\n      instance;\n\n  }\n\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}