{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\ButtonIconSelect.tsx\";\nimport clsx from \"clsx\";\n\n// TODO: It might be \"clever\" to add option.icon to the existing component <ButtonSelect />\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ButtonIconSelect = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"buttonList buttonListIcon\",\n  children: props.options.map(option => {\n    var _option$active;\n    return props.type === \"button\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => props.onClick(option.value, event),\n      className: clsx({\n        active: (_option$active = option.active) !== null && _option$active !== void 0 ? _option$active : props.value === option.value\n      }),\n      \"data-testid\": option.testId,\n      title: option.text,\n      children: option.icon\n    }, option.text, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n      className: clsx({\n        active: props.value === option.value\n      }),\n      title: option.text,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: props.group,\n        onChange: () => props.onChange(option.value),\n        checked: props.value === option.value,\n        \"data-testid\": option.testId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), option.icon]\n    }, option.text, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this);","map":{"version":3,"names":["clsx","jsxDEV","_jsxDEV","ButtonIconSelect","props","className","children","options","map","option","_option$active","type","onClick","event","value","active","testId","title","text","icon","fileName","_jsxFileName","lineNumber","columnNumber","name","group","onChange","checked"],"sources":["D:/project/excalidraw-cn/src/components/ButtonIconSelect.tsx"],"sourcesContent":["import clsx from \"clsx\";\n\n// TODO: It might be \"clever\" to add option.icon to the existing component <ButtonSelect />\nexport const ButtonIconSelect = <T extends Object>(\n  props: {\n    options: {\n      value: T;\n      text: string;\n      icon: JSX.Element;\n      testId?: string;\n      /** if not supplied, defaults to value identity check */\n      active?: boolean;\n    }[];\n    value: T | null;\n    type?: \"radio\" | \"button\";\n  } & (\n    | { type?: \"radio\"; group: string; onChange: (value: T) => void }\n    | {\n        type: \"button\";\n        onClick: (\n          value: T,\n          event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n        ) => void;\n      }\n  ),\n) => (\n  <div className=\"buttonList buttonListIcon\">\n    {props.options.map((option) =>\n      props.type === \"button\" ? (\n        <button\n          key={option.text}\n          onClick={(event) => props.onClick(option.value, event)}\n          className={clsx({\n            active: option.active ?? props.value === option.value,\n          })}\n          data-testid={option.testId}\n          title={option.text}\n        >\n          {option.icon}\n        </button>\n      ) : (\n        <label\n          key={option.text}\n          className={clsx({ active: props.value === option.value })}\n          title={option.text}\n        >\n          <input\n            type=\"radio\"\n            name={props.group}\n            onChange={() => props.onChange(option.value)}\n            checked={props.value === option.value}\n            data-testid={option.testId}\n          />\n          {option.icon}\n        </label>\n      ),\n    )}\n  </div>\n);\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,gBAAgB,GAC3BC,KAoBC,iBAEDF,OAAA;EAAKG,SAAS,EAAC,2BAA2B;EAAAC,QAAA,EACvCF,KAAK,CAACG,OAAO,CAACC,GAAG,CAAEC,MAAM;IAAA,IAAAC,cAAA;IAAA,OACxBN,KAAK,CAACO,IAAI,KAAK,QAAQ,gBACrBT,OAAA;MAEEU,OAAO,EAAGC,KAAK,IAAKT,KAAK,CAACQ,OAAO,CAACH,MAAM,CAACK,KAAK,EAAED,KAAK,CAAE;MACvDR,SAAS,EAAEL,IAAI,CAAC;QACde,MAAM,GAAAL,cAAA,GAAED,MAAM,CAACM,MAAM,cAAAL,cAAA,cAAAA,cAAA,GAAIN,KAAK,CAACU,KAAK,KAAKL,MAAM,CAACK;MAClD,CAAC,CAAE;MACH,eAAaL,MAAM,CAACO,MAAO;MAC3BC,KAAK,EAAER,MAAM,CAACS,IAAK;MAAAZ,QAAA,EAElBG,MAAM,CAACU;IAAI,GARPV,MAAM,CAACS,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAST,gBAETrB,OAAA;MAEEG,SAAS,EAAEL,IAAI,CAAC;QAAEe,MAAM,EAAEX,KAAK,CAACU,KAAK,KAAKL,MAAM,CAACK;MAAM,CAAC,CAAE;MAC1DG,KAAK,EAAER,MAAM,CAACS,IAAK;MAAAZ,QAAA,gBAEnBJ,OAAA;QACES,IAAI,EAAC,OAAO;QACZa,IAAI,EAAEpB,KAAK,CAACqB,KAAM;QAClBC,QAAQ,EAAEA,CAAA,KAAMtB,KAAK,CAACsB,QAAQ,CAACjB,MAAM,CAACK,KAAK,CAAE;QAC7Ca,OAAO,EAAEvB,KAAK,CAACU,KAAK,KAAKL,MAAM,CAACK,KAAM;QACtC,eAAaL,MAAM,CAACO;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B,EACDd,MAAM,CAACU,IAAI;IAAA,GAXPV,MAAM,CAACS,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAanB;EAAA;AACF;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}