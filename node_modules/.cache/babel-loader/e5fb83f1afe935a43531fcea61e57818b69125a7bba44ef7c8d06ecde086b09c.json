{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _defineProperty from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{isSyncableElement}from\"../data\";import{WS_EVENTS,FILE_UPLOAD_TIMEOUT,WS_SCENE_EVENT_TYPES}from\"../app_constants\";import{trackEvent}from\"../../analytics\";import throttle from\"lodash.throttle\";import{newElementWith}from\"../../element/mutateElement\";import{encryptData}from\"../../data/encryption\";import{PRECEDING_ELEMENT_KEY}from\"../../constants\";var Portal=/*#__PURE__*/function(){function Portal(collab){var _this=this;_classCallCheck(this,Portal);this.collab=void 0;this.socket=null;this.socketInitialized=false;// we don't want the socket to emit any updates until it is fully initialized\nthis.roomId=null;this.roomKey=null;this.broadcastedElementVersions=new Map();this.queueFileUpload=throttle(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _this.collab.fileManager.saveFiles({elements:_this.collab.excalidrawAPI.getSceneElementsIncludingDeleted(),files:_this.collab.excalidrawAPI.getFiles()});case 3:_context.next=8;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);if(_context.t0.name!==\"AbortError\"){_this.collab.excalidrawAPI.updateScene({appState:{errorMessage:_context.t0.message}});}case 8:_this.collab.excalidrawAPI.updateScene({elements:_this.collab.excalidrawAPI.getSceneElementsIncludingDeleted().map(function(element){if(_this.collab.fileManager.shouldUpdateImageElementStatus(element)){// this will signal collaborators to pull image data from server\n// (using mutation instead of newElementWith otherwise it'd break\n// in-progress dragging)\nreturn newElementWith(element,{status:\"saved\"});}return element;})});case 9:case\"end\":return _context.stop();}},_callee,null,[[0,5]]);})),FILE_UPLOAD_TIMEOUT);this.broadcastScene=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(updateType,allElements,syncAll){var syncableElements,data,_iterator,_step,syncableElement;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!(updateType===WS_SCENE_EVENT_TYPES.INIT&&!syncAll)){_context2.next=2;break;}throw new Error(\"syncAll must be true when sending SCENE.INIT\");case 2:// sync out only the elements we think we need to to save bandwidth.\n// periodically we'll resync the whole thing to make sure no one diverges\n// due to a dropped message (server goes down etc).\nsyncableElements=allElements.reduce(function(acc,element,idx,elements){if((syncAll||!_this.broadcastedElementVersions.has(element.id)||element.version>_this.broadcastedElementVersions.get(element.id))&&isSyncableElement(element)){var _elements;acc.push(_objectSpread(_objectSpread({},element),{},_defineProperty({},PRECEDING_ELEMENT_KEY,idx===0?\"^\":(_elements=elements[idx-1])===null||_elements===void 0?void 0:_elements.id)));}return acc;},[]);data={type:updateType,payload:{elements:syncableElements}};_iterator=_createForOfIteratorHelper(syncableElements);try{for(_iterator.s();!(_step=_iterator.n()).done;){syncableElement=_step.value;_this.broadcastedElementVersions.set(syncableElement.id,syncableElement.version);}}catch(err){_iterator.e(err);}finally{_iterator.f();}_this.queueFileUpload();_context2.next=9;return _this._broadcastSocketData(data);case 9:case\"end\":return _context2.stop();}},_callee2);}));return function(_x,_x2,_x3){return _ref2.apply(this,arguments);};}();this.broadcastIdleChange=function(userState){var _this$socket;if((_this$socket=_this.socket)!==null&&_this$socket!==void 0&&_this$socket.id){var data={type:\"IDLE_STATUS\",payload:{socketId:_this.socket.id,userState:userState,username:_this.collab.state.username}};return _this._broadcastSocketData(data,true// volatile\n);}};this.broadcastMouseLocation=function(payload){var _this$socket2;if((_this$socket2=_this.socket)!==null&&_this$socket2!==void 0&&_this$socket2.id){var data={type:\"MOUSE_LOCATION\",payload:{socketId:_this.socket.id,pointer:payload.pointer,button:payload.button||\"up\",selectedElementIds:_this.collab.excalidrawAPI.getAppState().selectedElementIds,username:_this.collab.state.username}};return _this._broadcastSocketData(data,true// volatile\n);}};this.collab=collab;}_createClass(Portal,[{key:\"open\",value:function open(socket,id,key){var _this2=this;this.socket=socket;this.roomId=id;this.roomKey=key;// Initialize socket listeners\nthis.socket.on(\"init-room\",function(){if(_this2.socket){_this2.socket.emit(\"join-room\",_this2.roomId);trackEvent(\"share\",\"room joined\");}});this.socket.on(\"new-user\",/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_socketId){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_this2.broadcastScene(WS_SCENE_EVENT_TYPES.INIT,_this2.collab.getSceneElementsIncludingDeleted(),/* syncAll */true);case 1:case\"end\":return _context3.stop();}},_callee3);}));return function(_x4){return _ref3.apply(this,arguments);};}());this.socket.on(\"room-user-change\",function(clients){_this2.collab.setCollaborators(clients);});return socket;}},{key:\"close\",value:function close(){if(!this.socket){return;}this.queueFileUpload.flush();this.socket.close();this.socket=null;this.roomId=null;this.roomKey=null;this.socketInitialized=false;this.broadcastedElementVersions=new Map();}},{key:\"isOpen\",value:function isOpen(){return!!(this.socketInitialized&&this.socket&&this.roomId&&this.roomKey);}},{key:\"_broadcastSocketData\",value:function(){var _broadcastSocketData2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(data){var volatile,_this$socket3,json,encoded,_yield$encryptData,encryptedBuffer,iv,_args4=arguments;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:volatile=_args4.length>1&&_args4[1]!==undefined?_args4[1]:false;if(!this.isOpen()){_context4.next=10;break;}json=JSON.stringify(data);encoded=new TextEncoder().encode(json);_context4.next=6;return encryptData(this.roomKey,encoded);case 6:_yield$encryptData=_context4.sent;encryptedBuffer=_yield$encryptData.encryptedBuffer;iv=_yield$encryptData.iv;(_this$socket3=this.socket)===null||_this$socket3===void 0?void 0:_this$socket3.emit(volatile?WS_EVENTS.SERVER_VOLATILE:WS_EVENTS.SERVER,this.roomId,encryptedBuffer,iv);case 10:case\"end\":return _context4.stop();}},_callee4,this);}));function _broadcastSocketData(_x5){return _broadcastSocketData2.apply(this,arguments);}return _broadcastSocketData;}()}]);return Portal;}();export default Portal;","map":{"version":3,"names":["isSyncableElement","WS_EVENTS","FILE_UPLOAD_TIMEOUT","WS_SCENE_EVENT_TYPES","trackEvent","throttle","newElementWith","encryptData","PRECEDING_ELEMENT_KEY","Portal","collab","_this","_classCallCheck","socket","socketInitialized","roomId","roomKey","broadcastedElementVersions","Map","queueFileUpload","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","fileManager","saveFiles","elements","excalidrawAPI","getSceneElementsIncludingDeleted","files","getFiles","t0","name","updateScene","appState","errorMessage","message","map","element","shouldUpdateImageElementStatus","status","stop","broadcastScene","_ref2","_callee2","updateType","allElements","syncAll","syncableElements","data","_iterator","_step","syncableElement","_callee2$","_context2","INIT","Error","reduce","acc","idx","has","id","version","get","_elements","push","_objectSpread","_defineProperty","type","payload","_createForOfIteratorHelper","s","n","done","value","set","err","e","f","_broadcastSocketData","_x","_x2","_x3","apply","arguments","broadcastIdleChange","userState","_this$socket","socketId","username","state","broadcastMouseLocation","_this$socket2","pointer","button","selectedElementIds","getAppState","_createClass","key","open","_this2","on","emit","_ref3","_callee3","_socketId","_callee3$","_context3","_x4","clients","setCollaborators","close","flush","isOpen","_broadcastSocketData2","_callee4","volatile","_this$socket3","json","encoded","_yield$encryptData","encryptedBuffer","iv","_args4","_callee4$","_context4","length","undefined","JSON","stringify","TextEncoder","encode","sent","SERVER_VOLATILE","SERVER","_x5"],"sources":["D:/project/excalidraw-cn/src/excalidraw-app/collab/Portal.tsx"],"sourcesContent":["import {\n  isSyncableElement,\n  SocketUpdateData,\n  SocketUpdateDataSource,\n} from \"../data\";\n\nimport { TCollabClass } from \"./Collab\";\n\nimport { ExcalidrawElement } from \"../../element/types\";\nimport {\n  WS_EVENTS,\n  FILE_UPLOAD_TIMEOUT,\n  WS_SCENE_EVENT_TYPES,\n} from \"../app_constants\";\nimport { UserIdleState } from \"../../types\";\nimport { trackEvent } from \"../../analytics\";\nimport throttle from \"lodash.throttle\";\nimport { newElementWith } from \"../../element/mutateElement\";\nimport { BroadcastedExcalidrawElement } from \"./reconciliation\";\nimport { encryptData } from \"../../data/encryption\";\nimport { PRECEDING_ELEMENT_KEY } from \"../../constants\";\n\nclass Portal {\n  collab: TCollabClass;\n  socket: SocketIOClient.Socket | null = null;\n  socketInitialized: boolean = false; // we don't want the socket to emit any updates until it is fully initialized\n  roomId: string | null = null;\n  roomKey: string | null = null;\n  broadcastedElementVersions: Map<string, number> = new Map();\n\n  constructor(collab: TCollabClass) {\n    this.collab = collab;\n  }\n\n  open(socket: SocketIOClient.Socket, id: string, key: string) {\n    this.socket = socket;\n    this.roomId = id;\n    this.roomKey = key;\n\n    // Initialize socket listeners\n    this.socket.on(\"init-room\", () => {\n      if (this.socket) {\n        this.socket.emit(\"join-room\", this.roomId);\n        trackEvent(\"share\", \"room joined\");\n      }\n    });\n    this.socket.on(\"new-user\", async (_socketId: string) => {\n      this.broadcastScene(\n        WS_SCENE_EVENT_TYPES.INIT,\n        this.collab.getSceneElementsIncludingDeleted(),\n        /* syncAll */ true,\n      );\n    });\n    this.socket.on(\"room-user-change\", (clients: string[]) => {\n      this.collab.setCollaborators(clients);\n    });\n\n    return socket;\n  }\n\n  close() {\n    if (!this.socket) {\n      return;\n    }\n    this.queueFileUpload.flush();\n    this.socket.close();\n    this.socket = null;\n    this.roomId = null;\n    this.roomKey = null;\n    this.socketInitialized = false;\n    this.broadcastedElementVersions = new Map();\n  }\n\n  isOpen() {\n    return !!(\n      this.socketInitialized &&\n      this.socket &&\n      this.roomId &&\n      this.roomKey\n    );\n  }\n\n  async _broadcastSocketData(\n    data: SocketUpdateData,\n    volatile: boolean = false,\n  ) {\n    if (this.isOpen()) {\n      const json = JSON.stringify(data);\n      const encoded = new TextEncoder().encode(json);\n      const { encryptedBuffer, iv } = await encryptData(this.roomKey!, encoded);\n\n      this.socket?.emit(\n        volatile ? WS_EVENTS.SERVER_VOLATILE : WS_EVENTS.SERVER,\n        this.roomId,\n        encryptedBuffer,\n        iv,\n      );\n    }\n  }\n\n  queueFileUpload = throttle(async () => {\n    try {\n      await this.collab.fileManager.saveFiles({\n        elements: this.collab.excalidrawAPI.getSceneElementsIncludingDeleted(),\n        files: this.collab.excalidrawAPI.getFiles(),\n      });\n    } catch (error: any) {\n      if (error.name !== \"AbortError\") {\n        this.collab.excalidrawAPI.updateScene({\n          appState: {\n            errorMessage: error.message,\n          },\n        });\n      }\n    }\n\n    this.collab.excalidrawAPI.updateScene({\n      elements: this.collab.excalidrawAPI\n        .getSceneElementsIncludingDeleted()\n        .map((element) => {\n          if (this.collab.fileManager.shouldUpdateImageElementStatus(element)) {\n            // this will signal collaborators to pull image data from server\n            // (using mutation instead of newElementWith otherwise it'd break\n            // in-progress dragging)\n            return newElementWith(element, { status: \"saved\" });\n          }\n          return element;\n        }),\n    });\n  }, FILE_UPLOAD_TIMEOUT);\n\n  broadcastScene = async (\n    updateType: WS_SCENE_EVENT_TYPES.INIT | WS_SCENE_EVENT_TYPES.UPDATE,\n    allElements: readonly ExcalidrawElement[],\n    syncAll: boolean,\n  ) => {\n    if (updateType === WS_SCENE_EVENT_TYPES.INIT && !syncAll) {\n      throw new Error(\"syncAll must be true when sending SCENE.INIT\");\n    }\n\n    // sync out only the elements we think we need to to save bandwidth.\n    // periodically we'll resync the whole thing to make sure no one diverges\n    // due to a dropped message (server goes down etc).\n    const syncableElements = allElements.reduce(\n      (acc, element: BroadcastedExcalidrawElement, idx, elements) => {\n        if (\n          (syncAll ||\n            !this.broadcastedElementVersions.has(element.id) ||\n            element.version >\n              this.broadcastedElementVersions.get(element.id)!) &&\n          isSyncableElement(element)\n        ) {\n          acc.push({\n            ...element,\n            // z-index info for the reconciler\n            [PRECEDING_ELEMENT_KEY]: idx === 0 ? \"^\" : elements[idx - 1]?.id,\n          });\n        }\n        return acc;\n      },\n      [] as BroadcastedExcalidrawElement[],\n    );\n\n    const data: SocketUpdateDataSource[typeof updateType] = {\n      type: updateType,\n      payload: {\n        elements: syncableElements,\n      },\n    };\n\n    for (const syncableElement of syncableElements) {\n      this.broadcastedElementVersions.set(\n        syncableElement.id,\n        syncableElement.version,\n      );\n    }\n\n    this.queueFileUpload();\n\n    await this._broadcastSocketData(data as SocketUpdateData);\n  };\n\n  broadcastIdleChange = (userState: UserIdleState) => {\n    if (this.socket?.id) {\n      const data: SocketUpdateDataSource[\"IDLE_STATUS\"] = {\n        type: \"IDLE_STATUS\",\n        payload: {\n          socketId: this.socket.id,\n          userState,\n          username: this.collab.state.username,\n        },\n      };\n      return this._broadcastSocketData(\n        data as SocketUpdateData,\n        true, // volatile\n      );\n    }\n  };\n\n  broadcastMouseLocation = (payload: {\n    pointer: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"pointer\"];\n    button: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"button\"];\n  }) => {\n    if (this.socket?.id) {\n      const data: SocketUpdateDataSource[\"MOUSE_LOCATION\"] = {\n        type: \"MOUSE_LOCATION\",\n        payload: {\n          socketId: this.socket.id,\n          pointer: payload.pointer,\n          button: payload.button || \"up\",\n          selectedElementIds:\n            this.collab.excalidrawAPI.getAppState().selectedElementIds,\n          username: this.collab.state.username,\n        },\n      };\n      return this._broadcastSocketData(\n        data as SocketUpdateData,\n        true, // volatile\n      );\n    }\n  };\n}\n\nexport default Portal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}