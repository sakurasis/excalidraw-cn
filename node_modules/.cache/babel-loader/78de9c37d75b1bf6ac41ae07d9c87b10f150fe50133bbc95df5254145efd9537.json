{"ast":null,"code":"import _toConsumableArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{atom}from\"jotai\";import{MAX_CUSTOM_COLORS_USED_IN_CANVAS}from\"../../colors\";export var getColorNameAndShadeFromColor=function getColorNameAndShadeFromColor(_ref){var palette=_ref.palette,color=_ref.color;for(var _i=0,_Object$entries=Object.entries(palette);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),colorName=_Object$entries$_i[0],colorVal=_Object$entries$_i[1];if(Array.isArray(colorVal)){var shade=colorVal.indexOf(color);if(shade>-1){return{colorName:colorName,shade:shade};}}else if(colorVal===color){return{colorName:colorName,shade:null};}}return null;};export var colorPickerHotkeyBindings=[[\"q\",\"w\",\"e\",\"r\",\"t\"],[\"a\",\"s\",\"d\",\"f\",\"g\"],[\"z\",\"x\",\"c\",\"v\",\"b\"]].flat();export var isCustomColor=function isCustomColor(_ref2){var color=_ref2.color,palette=_ref2.palette;var paletteValues=Object.values(palette).flat();return!paletteValues.includes(color);};export var getMostUsedCustomColors=function getMostUsedCustomColors(elements,type,palette){var elementColorTypeMap={elementBackground:\"backgroundColor\",elementStroke:\"strokeColor\"};var colors=elements.filter(function(element){if(element.isDeleted){return false;}var color=element[elementColorTypeMap[type]];return isCustomColor({color:color,palette:palette});});var colorCountMap=new Map();colors.forEach(function(element){var color=element[elementColorTypeMap[type]];if(colorCountMap.has(color)){colorCountMap.set(color,colorCountMap.get(color)+1);}else{colorCountMap.set(color,1);}});return _toConsumableArray(colorCountMap.entries()).sort(function(a,b){return b[1]-a[1];}).map(function(c){return c[0];}).slice(0,MAX_CUSTOM_COLORS_USED_IN_CANVAS);};export var activeColorPickerSectionAtom=atom(null);var calculateContrast=function calculateContrast(r,g,b){var yiq=(r*299+g*587+b*114)/1000;return yiq>=160?\"black\":\"white\";};// inspiration from https://stackoverflow.com/a/11868398\nexport var getContrastYIQ=function getContrastYIQ(bgHex,isCustomColor){if(isCustomColor){var style=new Option().style;style.color=bgHex;if(style.color){var rgb=style.color.replace(/^(rgb|rgba)\\(/,\"\").replace(/\\)$/,\"\").replace(/\\s/g,\"\").split(\",\");var _r=parseInt(rgb[0]);var _g=parseInt(rgb[1]);var _b=parseInt(rgb[2]);return calculateContrast(_r,_g,_b);}}// TODO: ? is this wanted?\nif(bgHex===\"transparent\"){return\"black\";}var r=parseInt(bgHex.substring(1,3),16);var g=parseInt(bgHex.substring(3,5),16);var b=parseInt(bgHex.substring(5,7),16);return calculateContrast(r,g,b);};","map":{"version":3,"names":["atom","MAX_CUSTOM_COLORS_USED_IN_CANVAS","getColorNameAndShadeFromColor","_ref","palette","color","_i","_Object$entries","Object","entries","length","_Object$entries$_i","_slicedToArray","colorName","colorVal","Array","isArray","shade","indexOf","colorPickerHotkeyBindings","flat","isCustomColor","_ref2","paletteValues","values","includes","getMostUsedCustomColors","elements","type","elementColorTypeMap","elementBackground","elementStroke","colors","filter","element","isDeleted","colorCountMap","Map","forEach","has","set","get","_toConsumableArray","sort","a","b","map","c","slice","activeColorPickerSectionAtom","calculateContrast","r","g","yiq","getContrastYIQ","bgHex","style","Option","rgb","replace","split","parseInt","substring"],"sources":["D:/project/excalidraw-cn/src/components/ColorPicker/colorPickerUtils.ts"],"sourcesContent":["import { ExcalidrawElement } from \"../../element/types\";\nimport { atom } from \"jotai\";\nimport {\n  ColorPickerColor,\n  ColorPaletteCustom,\n  MAX_CUSTOM_COLORS_USED_IN_CANVAS,\n} from \"../../colors\";\n\nexport const getColorNameAndShadeFromColor = ({\n  palette,\n  color,\n}: {\n  palette: ColorPaletteCustom;\n  color: string;\n}): {\n  colorName: ColorPickerColor;\n  shade: number | null;\n} | null => {\n  for (const [colorName, colorVal] of Object.entries(palette)) {\n    if (Array.isArray(colorVal)) {\n      const shade = colorVal.indexOf(color);\n      if (shade > -1) {\n        return { colorName: colorName as ColorPickerColor, shade };\n      }\n    } else if (colorVal === color) {\n      return { colorName: colorName as ColorPickerColor, shade: null };\n    }\n  }\n  return null;\n};\n\nexport const colorPickerHotkeyBindings = [\n  [\"q\", \"w\", \"e\", \"r\", \"t\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\"],\n  [\"z\", \"x\", \"c\", \"v\", \"b\"],\n].flat();\n\nexport const isCustomColor = ({\n  color,\n  palette,\n}: {\n  color: string;\n  palette: ColorPaletteCustom;\n}) => {\n  const paletteValues = Object.values(palette).flat();\n  return !paletteValues.includes(color);\n};\n\nexport const getMostUsedCustomColors = (\n  elements: readonly ExcalidrawElement[],\n  type: \"elementBackground\" | \"elementStroke\",\n  palette: ColorPaletteCustom,\n) => {\n  const elementColorTypeMap = {\n    elementBackground: \"backgroundColor\",\n    elementStroke: \"strokeColor\",\n  };\n\n  const colors = elements.filter((element) => {\n    if (element.isDeleted) {\n      return false;\n    }\n\n    const color =\n      element[elementColorTypeMap[type] as \"backgroundColor\" | \"strokeColor\"];\n\n    return isCustomColor({ color, palette });\n  });\n\n  const colorCountMap = new Map<string, number>();\n  colors.forEach((element) => {\n    const color =\n      element[elementColorTypeMap[type] as \"backgroundColor\" | \"strokeColor\"];\n    if (colorCountMap.has(color)) {\n      colorCountMap.set(color, colorCountMap.get(color)! + 1);\n    } else {\n      colorCountMap.set(color, 1);\n    }\n  });\n\n  return [...colorCountMap.entries()]\n    .sort((a, b) => b[1] - a[1])\n    .map((c) => c[0])\n    .slice(0, MAX_CUSTOM_COLORS_USED_IN_CANVAS);\n};\n\nexport type ActiveColorPickerSectionAtomType =\n  | \"custom\"\n  | \"baseColors\"\n  | \"shades\"\n  | \"hex\"\n  | null;\nexport const activeColorPickerSectionAtom =\n  atom<ActiveColorPickerSectionAtomType>(null);\n\nconst calculateContrast = (r: number, g: number, b: number) => {\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  return yiq >= 160 ? \"black\" : \"white\";\n};\n\n// inspiration from https://stackoverflow.com/a/11868398\nexport const getContrastYIQ = (bgHex: string, isCustomColor: boolean) => {\n  if (isCustomColor) {\n    const style = new Option().style;\n    style.color = bgHex;\n\n    if (style.color) {\n      const rgb = style.color\n        .replace(/^(rgb|rgba)\\(/, \"\")\n        .replace(/\\)$/, \"\")\n        .replace(/\\s/g, \"\")\n        .split(\",\");\n      const r = parseInt(rgb[0]);\n      const g = parseInt(rgb[1]);\n      const b = parseInt(rgb[2]);\n\n      return calculateContrast(r, g, b);\n    }\n  }\n\n  // TODO: ? is this wanted?\n  if (bgHex === \"transparent\") {\n    return \"black\";\n  }\n\n  const r = parseInt(bgHex.substring(1, 3), 16);\n  const g = parseInt(bgHex.substring(3, 5), 16);\n  const b = parseInt(bgHex.substring(5, 7), 16);\n\n  return calculateContrast(r, g, b);\n};\n\nexport type ColorPickerType =\n  | \"canvasBackground\"\n  | \"elementBackground\"\n  | \"elementStroke\";\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}