{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\ColorPicker\\\\CustomColorList.tsx\";\nimport clsx from \"clsx\";\nimport { useAtom } from \"jotai\";\nimport { useEffect, useRef } from \"react\";\nimport { activeColorPickerSectionAtom } from \"./colorPickerUtils\";\nimport HotkeyLabel from \"./HotkeyLabel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CustomColorList = _ref => {\n  let {\n    colors,\n    color,\n    onChange,\n    label\n  } = _ref;\n  const [activeColorPickerSection, setActiveColorPickerSection] = useAtom(activeColorPickerSectionAtom);\n  const btnRef = useRef(null);\n  useEffect(() => {\n    if (btnRef.current) {\n      btnRef.current.focus();\n    }\n  }, [color, activeColorPickerSection]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"color-picker-content--default\",\n    children: colors.map((c, i) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: color === c ? btnRef : undefined,\n        tabIndex: -1,\n        type: \"button\",\n        className: clsx(\"color-picker__button color-picker__button--large\", {\n          active: color === c,\n          \"is-transparent\": c === \"transparent\" || !c\n        }),\n        onClick: () => {\n          onChange(c);\n          setActiveColorPickerSection(\"custom\");\n        },\n        title: c,\n        \"aria-label\": label,\n        style: {\n          \"--swatch-color\": c\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-picker__button-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HotkeyLabel, {\n          color: c,\n          keyLabel: i + 1,\n          isCustomColor: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["clsx","useAtom","useEffect","useRef","activeColorPickerSectionAtom","HotkeyLabel","jsxDEV","_jsxDEV","CustomColorList","_ref","colors","color","onChange","label","activeColorPickerSection","setActiveColorPickerSection","btnRef","current","focus","className","children","map","c","i","ref","undefined","tabIndex","type","active","onClick","title","style","fileName","_jsxFileName","lineNumber","columnNumber","keyLabel","isCustomColor"],"sources":["D:/project/excalidraw-cn/src/components/ColorPicker/CustomColorList.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport { useAtom } from \"jotai\";\nimport { useEffect, useRef } from \"react\";\nimport { activeColorPickerSectionAtom } from \"./colorPickerUtils\";\nimport HotkeyLabel from \"./HotkeyLabel\";\n\ninterface CustomColorListProps {\n  colors: string[];\n  color: string;\n  onChange: (color: string) => void;\n  label: string;\n}\n\nexport const CustomColorList = ({\n  colors,\n  color,\n  onChange,\n  label,\n}: CustomColorListProps) => {\n  const [activeColorPickerSection, setActiveColorPickerSection] = useAtom(\n    activeColorPickerSectionAtom,\n  );\n\n  const btnRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (btnRef.current) {\n      btnRef.current.focus();\n    }\n  }, [color, activeColorPickerSection]);\n\n  return (\n    <div className=\"color-picker-content--default\">\n      {colors.map((c, i) => {\n        return (\n          <button\n            ref={color === c ? btnRef : undefined}\n            tabIndex={-1}\n            type=\"button\"\n            className={clsx(\n              \"color-picker__button color-picker__button--large\",\n              {\n                active: color === c,\n                \"is-transparent\": c === \"transparent\" || !c,\n              },\n            )}\n            onClick={() => {\n              onChange(c);\n              setActiveColorPickerSection(\"custom\");\n            }}\n            title={c}\n            aria-label={label}\n            style={{ \"--swatch-color\": c }}\n            key={i}\n          >\n            <div className=\"color-picker__button-outline\" />\n            <HotkeyLabel color={c} keyLabel={i + 1} isCustomColor />\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,4BAA4B,QAAQ,oBAAoB;AACjE,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASxC,OAAO,MAAMC,eAAe,GAAGC,IAAA,IAKH;EAAA,IALI;IAC9BC,MAAM;IACNC,KAAK;IACLC,QAAQ;IACRC;EACoB,CAAC,GAAAJ,IAAA;EACrB,MAAM,CAACK,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGd,OAAO,CACrEG,4BAA4B,CAC7B;EAED,MAAMY,MAAM,GAAGb,MAAM,CAAoB,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,IAAIc,MAAM,CAACC,OAAO,EAAE;MAClBD,MAAM,CAACC,OAAO,CAACC,KAAK,EAAE;IACxB;EACF,CAAC,EAAE,CAACP,KAAK,EAAEG,wBAAwB,CAAC,CAAC;EAErC,oBACEP,OAAA;IAAKY,SAAS,EAAC,+BAA+B;IAAAC,QAAA,EAC3CV,MAAM,CAACW,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACpB,oBACEhB,OAAA;QACEiB,GAAG,EAAEb,KAAK,KAAKW,CAAC,GAAGN,MAAM,GAAGS,SAAU;QACtCC,QAAQ,EAAE,CAAC,CAAE;QACbC,IAAI,EAAC,QAAQ;QACbR,SAAS,EAAEnB,IAAI,CACb,kDAAkD,EAClD;UACE4B,MAAM,EAAEjB,KAAK,KAAKW,CAAC;UACnB,gBAAgB,EAAEA,CAAC,KAAK,aAAa,IAAI,CAACA;QAC5C,CAAC,CACD;QACFO,OAAO,EAAEA,CAAA,KAAM;UACbjB,QAAQ,CAACU,CAAC,CAAC;UACXP,2BAA2B,CAAC,QAAQ,CAAC;QACvC,CAAE;QACFe,KAAK,EAAER,CAAE;QACT,cAAYT,KAAM;QAClBkB,KAAK,EAAE;UAAE,gBAAgB,EAAET;QAAE,CAAE;QAAAF,QAAA,gBAG/Bb,OAAA;UAAKY,SAAS,EAAC;QAA8B;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAChD5B,OAAA,CAACF,WAAW;UAACM,KAAK,EAAEW,CAAE;UAACc,QAAQ,EAAEb,CAAC,GAAG,CAAE;UAACc,aAAa;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA,GAHnDZ,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAIC;IAEb,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}