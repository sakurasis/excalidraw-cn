{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { API, captureException, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue, logger } from '@sentry/utils';\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(function () {\n    ignoreOnError -= 1;\n  });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    }\n    // If this has already been wrapped in the past, return that wrapped function\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n  /* eslint-disable prefer-rest-params */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var sentryWrapped = function () {\n    var args = Array.prototype.slice.call(arguments);\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      var wrappedArguments = args.map(function (arg) {\n        return wrap(arg, options);\n      });\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return fn.handleEvent.apply(this, wrappedArguments);\n      }\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n      withScope(function (scope) {\n        scope.addEventProcessor(function (event) {\n          var processedEvent = __assign({}, event);\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined);\n            addExceptionMechanism(processedEvent, options.mechanism);\n          }\n          processedEvent.extra = __assign(__assign({}, processedEvent.extra), {\n            arguments: args\n          });\n          return processedEvent;\n        });\n        captureException(ex);\n      });\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (var property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped\n  });\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn\n    }\n  });\n  // Restore original function name (not all browsers allow that)\n  try {\n    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get: function () {\n          return fn.name;\n        }\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n  return sentryWrapped;\n}\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (!options.eventId) {\n    logger.error(\"Missing eventId option in showReportDialog call\");\n    return;\n  }\n  if (!options.dsn) {\n    logger.error(\"Missing dsn option in showReportDialog call\");\n    return;\n  }\n  var script = document.createElement('script');\n  script.async = true;\n  script.src = new API(options.dsn).getReportDialogEndpoint(options);\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n  (document.head || document.body).appendChild(script);\n}","map":{"version":3,"names":["API","captureException","withScope","addExceptionMechanism","addExceptionTypeValue","logger","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","setTimeout","wrap","fn","options","before","__sentry__","__sentry_wrapped__","e","sentryWrapped","args","Array","prototype","slice","call","arguments","apply","wrappedArguments","map","arg","handleEvent","ex","scope","addEventProcessor","event","processedEvent","__assign","mechanism","undefined","extra","property","Object","hasOwnProperty","_oO","defineProperty","enumerable","value","defineProperties","__sentry_original__","descriptor","getOwnPropertyDescriptor","configurable","get","name","injectReportDialog","eventId","error","dsn","script","document","createElement","async","src","getReportDialogEndpoint","onLoad","onload","head","body","appendChild"],"sources":["D:\\project\\excalidraw-cn\\node_modules\\@sentry\\browser\\src\\helpers.ts"],"sourcesContent":["import { API, captureException, withScope } from '@sentry/core';\nimport { DsnLike, Event as SentryEvent, Mechanism, Scope, WrappedFunction } from '@sentry/types';\nimport { addExceptionMechanism, addExceptionTypeValue, logger } from '@sentry/utils';\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    }\n\n    // If this has already been wrapped in the past, return that wrapped function\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const sentryWrapped: WrappedFunction = function(this: any): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return fn.handleEvent.apply(this, wrappedArguments);\n      }\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope: Scope) => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          const processedEvent = { ...event };\n\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined);\n            addExceptionMechanism(processedEvent, options.mechanism);\n          }\n\n          processedEvent.extra = {\n            ...processedEvent.extra,\n            arguments: args,\n          };\n\n          return processedEvent;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped,\n  });\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true,\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn,\n    },\n  });\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    logger.error(`Missing eventId option in showReportDialog call`);\n    return;\n  }\n  if (!options.dsn) {\n    logger.error(`Missing dsn option in showReportDialog call`);\n    return;\n  }\n\n  const script = document.createElement('script');\n  script.async = true;\n  script.src = new API(options.dsn).getReportDialogEndpoint(options);\n\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n\n  (document.head || document.body).appendChild(script);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}