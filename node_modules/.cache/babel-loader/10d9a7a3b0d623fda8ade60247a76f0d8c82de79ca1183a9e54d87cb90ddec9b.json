{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{ImportedDataState}from\"./types\";import{getNonDeletedElements,getNormalizedDimensions,isInvisiblySmallElement,refreshTextDimensions}from\"../element\";import{isTextElement,isUsingAdaptiveRadius}from\"../element/typeChecks\";import{randomId}from\"../random\";import{DEFAULT_FONT_FAMILY,DEFAULT_TEXT_ALIGN,DEFAULT_VERTICAL_ALIGN,PRECEDING_ELEMENT_KEY,FONT_FAMILY,ROUNDNESS,DEFAULT_SIDEBAR}from\"../constants\";import{getDefaultAppState}from\"../appState\";import{LinearElementEditor}from\"../element/linearElementEditor\";import{bumpVersion}from\"../element/mutateElement\";import{getFontString,getUpdatedTimestamp,updateActiveTool}from\"../utils\";import{arrayToMap}from\"../utils\";import{detectLineHeight,getDefaultLineHeight,measureBaseline}from\"../element/textElement\";import{COLOR_PALETTE}from\"../colors\";import{normalizeLink}from\"./url\";export var AllowedExcalidrawActiveTools={selection:true,text:true,rectangle:true,diamond:true,ellipse:true,line:true,image:true,arrow:true,freedraw:true,eraser:false,custom:true,frame:true,hand:true};var getFontFamilyByName=function getFontFamilyByName(fontFamilyName){if(Object.keys(FONT_FAMILY).includes(fontFamilyName)){return FONT_FAMILY[fontFamilyName];}return DEFAULT_FONT_FAMILY;};var restoreElementWithProperties=function restoreElementWithProperties(element,extra){var _element$versionNonce,_element$isDeleted,_element$strokeStyle,_element$roughness,_ref,_extra$x,_ref2,_extra$y,_element$seed,_element$groupIds,_element$frameId,_element$boundElement,_element$updated,_element$locked;var base={type:extra.type||element.type,// all elements must have version > 0 so getSceneVersion() will pick up\n// newly added elements\nversion:element.version||1,versionNonce:(_element$versionNonce=element.versionNonce)!==null&&_element$versionNonce!==void 0?_element$versionNonce:0,isDeleted:(_element$isDeleted=element.isDeleted)!==null&&_element$isDeleted!==void 0?_element$isDeleted:false,id:element.id||randomId(),fillStyle:element.fillStyle||\"hachure\",strokeWidth:element.strokeWidth||1,strokeStyle:(_element$strokeStyle=element.strokeStyle)!==null&&_element$strokeStyle!==void 0?_element$strokeStyle:\"solid\",roughness:(_element$roughness=element.roughness)!==null&&_element$roughness!==void 0?_element$roughness:1,opacity:element.opacity==null?100:element.opacity,angle:element.angle||0,x:(_ref=(_extra$x=extra.x)!==null&&_extra$x!==void 0?_extra$x:element.x)!==null&&_ref!==void 0?_ref:0,y:(_ref2=(_extra$y=extra.y)!==null&&_extra$y!==void 0?_extra$y:element.y)!==null&&_ref2!==void 0?_ref2:0,strokeColor:element.strokeColor||COLOR_PALETTE.black,backgroundColor:element.backgroundColor||COLOR_PALETTE.transparent,width:element.width||0,height:element.height||0,seed:(_element$seed=element.seed)!==null&&_element$seed!==void 0?_element$seed:1,groupIds:(_element$groupIds=element.groupIds)!==null&&_element$groupIds!==void 0?_element$groupIds:[],frameId:(_element$frameId=element.frameId)!==null&&_element$frameId!==void 0?_element$frameId:null,roundness:element.roundness?element.roundness:element.strokeSharpness===\"round\"?{// for old elements that would now use adaptive radius algo,\n// use legacy algo instead\ntype:isUsingAdaptiveRadius(element.type)?ROUNDNESS.LEGACY:ROUNDNESS.PROPORTIONAL_RADIUS}:null,boundElements:element.boundElementIds?element.boundElementIds.map(function(id){return{type:\"arrow\",id:id};}):(_element$boundElement=element.boundElements)!==null&&_element$boundElement!==void 0?_element$boundElement:[],updated:(_element$updated=element.updated)!==null&&_element$updated!==void 0?_element$updated:getUpdatedTimestamp(),link:element.link?normalizeLink(element.link):null,locked:(_element$locked=element.locked)!==null&&_element$locked!==void 0?_element$locked:false};if(\"customData\"in element){base.customData=element.customData;}if(PRECEDING_ELEMENT_KEY in element){base[PRECEDING_ELEMENT_KEY]=element[PRECEDING_ELEMENT_KEY];}return _objectSpread(_objectSpread(_objectSpread({},base),getNormalizedDimensions(base)),extra);};var restoreElement=function restoreElement(element){var _element$text,_element$containerId,_element$name;var refreshDimensions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;switch(element.type){case\"text\":var fontSize=element.fontSize;var fontFamily=element.fontFamily;if(\"font\"in element){var _font$split=element.font.split(\" \"),_font$split2=_slicedToArray(_font$split,2),fontPx=_font$split2[0],_fontFamily=_font$split2[1];fontSize=parseFloat(fontPx);fontFamily=getFontFamilyByName(_fontFamily);}var text=(_element$text=element.text)!==null&&_element$text!==void 0?_element$text:\"\";// line-height might not be specified either when creating elements\n// programmatically, or when importing old diagrams.\n// For the latter we want to detect the original line height which\n// will likely differ from our per-font fixed line height we now use,\n// to maintain backward compatibility.\nvar lineHeight=element.lineHeight||(element.height?// detect line-height from current element height and font-size\ndetectLineHeight(element):// no element height likely means programmatic use, so default\n// to a fixed line height\ngetDefaultLineHeight(element.fontFamily));var baseline=measureBaseline(element.text,getFontString(element),lineHeight);element=restoreElementWithProperties(element,{fontSize:fontSize,fontFamily:fontFamily,text:text,textAlign:element.textAlign||DEFAULT_TEXT_ALIGN,verticalAlign:element.verticalAlign||DEFAULT_VERTICAL_ALIGN,containerId:(_element$containerId=element.containerId)!==null&&_element$containerId!==void 0?_element$containerId:null,originalText:element.originalText||text,lineHeight:lineHeight,baseline:baseline});if(refreshDimensions){element=_objectSpread(_objectSpread({},element),refreshTextDimensions(element));}return element;case\"freedraw\":{return restoreElementWithProperties(element,{points:element.points,lastCommittedPoint:null,simulatePressure:element.simulatePressure,pressures:element.pressures});}case\"image\":return restoreElementWithProperties(element,{status:element.status||\"pending\",fileId:element.fileId,scale:element.scale||[1,1]});case\"line\":// @ts-ignore LEGACY type\n// eslint-disable-next-line no-fallthrough\ncase\"draw\":case\"arrow\":{var _element=element,_element$startArrowhe=_element.startArrowhead,startArrowhead=_element$startArrowhe===void 0?null:_element$startArrowhe,_element$endArrowhead=_element.endArrowhead,endArrowhead=_element$endArrowhead===void 0?element.type===\"arrow\"?\"arrow\":null:_element$endArrowhead;var x=element.x;var y=element.y;var points=// migrate old arrow model to new one\n!Array.isArray(element.points)||element.points.length<2?[[0,0],[element.width,element.height]]:element.points;if(points[0][0]!==0||points[0][1]!==0){var _LinearElementEditor$=LinearElementEditor.getNormalizedPoints(element);points=_LinearElementEditor$.points;x=_LinearElementEditor$.x;y=_LinearElementEditor$.y;}return restoreElementWithProperties(element,{type:element.type===\"draw\"?\"line\":element.type,startBinding:element.startBinding,endBinding:element.endBinding,lastCommittedPoint:null,startArrowhead:startArrowhead,endArrowhead:endArrowhead,points:points,x:x,y:y});}// generic elements\ncase\"ellipse\":return restoreElementWithProperties(element,{});case\"rectangle\":return restoreElementWithProperties(element,{});case\"diamond\":return restoreElementWithProperties(element,{});case\"frame\":return restoreElementWithProperties(element,{name:(_element$name=element.name)!==null&&_element$name!==void 0?_element$name:null});// Don't use default case so as to catch a missing an element type case.\n// We also don't want to throw, but instead return void so we filter\n// out these unsupported elements from the restored array.\n}};/**\n * Repairs contaienr element's boundElements array by removing duplicates and\n * fixing containerId of bound elements if not present. Also removes any\n * bound elements that do not exist in the elements array.\n *\n * NOTE mutates elements.\n */var repairContainerElement=function repairContainerElement(container,elementsMap){if(container.boundElements){// copy because we're not cloning on restore, and we don't want to mutate upstream\nvar boundElements=container.boundElements.slice();// dedupe bindings & fix boundElement.containerId if not set already\nvar boundIds=new Set();container.boundElements=boundElements.reduce(function(acc,binding){var boundElement=elementsMap.get(binding.id);if(boundElement&&!boundIds.has(binding.id)){boundIds.add(binding.id);if(boundElement.isDeleted){return acc;}acc.push(binding);if(isTextElement(boundElement)&&// being slightly conservative here, preserving existing containerId\n// if defined, lest boundElements is stale\n!boundElement.containerId){boundElement.containerId=container.id;}}return acc;},[]);}};/**\n * Repairs target bound element's container's boundElements array,\n * or removes contaienrId if container does not exist.\n *\n * NOTE mutates elements.\n */var repairBoundElement=function repairBoundElement(boundElement,elementsMap){var container=boundElement.containerId?elementsMap.get(boundElement.containerId):null;if(!container){boundElement.containerId=null;return;}if(boundElement.isDeleted){return;}if(container.boundElements&&!container.boundElements.find(function(binding){return binding.id===boundElement.id;})){// copy because we're not cloning on restore, and we don't want to mutate upstream\nvar boundElements=(container.boundElements||(container.boundElements=[])).slice();boundElements.push({type:\"text\",id:boundElement.id});container.boundElements=boundElements;}};/**\n * Remove an element's frameId if its containing frame is non-existent\n *\n * NOTE mutates elements.\n */var repairFrameMembership=function repairFrameMembership(element,elementsMap){if(element.frameId){var containingFrame=elementsMap.get(element.frameId);if(!containingFrame){element.frameId=null;}}};export var restoreElements=function restoreElements(elements,localElements,opts){// used to detect duplicate top-level element ids\nvar existingIds=new Set();var localElementsMap=localElements?arrayToMap(localElements):null;var restoredElements=(elements||[]).reduce(function(elements,element){// filtering out selection, which is legacy, no longer kept in elements,\n// and causing issues if retained\nif(element.type!==\"selection\"&&!isInvisiblySmallElement(element)){var migratedElement=restoreElement(element,opts===null||opts===void 0?void 0:opts.refreshDimensions);if(migratedElement){var localElement=localElementsMap===null||localElementsMap===void 0?void 0:localElementsMap.get(element.id);if(localElement&&localElement.version>migratedElement.version){migratedElement=bumpVersion(migratedElement,localElement.version);}if(existingIds.has(migratedElement.id)){migratedElement=_objectSpread(_objectSpread({},migratedElement),{},{id:randomId()});}existingIds.add(migratedElement.id);elements.push(migratedElement);}}return elements;},[]);if(!(opts!==null&&opts!==void 0&&opts.repairBindings)){return restoredElements;}// repair binding. Mutates elements.\nvar restoredElementsMap=arrayToMap(restoredElements);var _iterator=_createForOfIteratorHelper(restoredElements),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var element=_step.value;if(element.frameId){repairFrameMembership(element,restoredElementsMap);}if(isTextElement(element)&&element.containerId){repairBoundElement(element,restoredElementsMap);}else if(element.boundElements){repairContainerElement(element,restoredElementsMap);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return restoredElements;};var coalesceAppStateValue=function coalesceAppStateValue(key,appState,defaultAppState){var value=appState[key];// NOTE the value! assertion is needed in TS 4.5.5 (fixed in newer versions)\nreturn value!==undefined?value:defaultAppState[key];};var LegacyAppStateMigrations={isSidebarDocked:function isSidebarDocked(appState,defaultAppState){var _appState$isSidebarDo;return[\"defaultSidebarDockedPreference\",(_appState$isSidebarDo=appState.isSidebarDocked)!==null&&_appState$isSidebarDo!==void 0?_appState$isSidebarDo:coalesceAppStateValue(\"defaultSidebarDockedPreference\",appState,defaultAppState)];}};export var restoreAppState=function restoreAppState(appState,localAppState){var _localAppState$penDet,_appState$penDetected,_nextAppState$activeT,_appState$zoom;appState=appState||{};var defaultAppState=getDefaultAppState();var nextAppState={};// first, migrate all legacy AppState properties to new ones. We do it\n// in one go before migrate the rest of the properties in case the new ones\n// depend on checking any other key (i.e. they are coupled)\nfor(var _i=0,_arr=Object.keys(LegacyAppStateMigrations);_i<_arr.length;_i++){var legacyKey=_arr[_i];if(legacyKey in appState){var _LegacyAppStateMigrat=LegacyAppStateMigrations[legacyKey](appState,defaultAppState),_LegacyAppStateMigrat2=_slicedToArray(_LegacyAppStateMigrat,2),nextKey=_LegacyAppStateMigrat2[0],nextValue=_LegacyAppStateMigrat2[1];nextAppState[nextKey]=nextValue;}}for(var _i2=0,_arr2=Object.entries(defaultAppState);_i2<_arr2.length;_i2++){var _arr2$_i=_slicedToArray(_arr2[_i2],2),key=_arr2$_i[0],defaultValue=_arr2$_i[1];// if AppState contains a legacy key, prefer that one and migrate its\n// value to the new one\nvar suppliedValue=appState[key];var localValue=localAppState?localAppState[key]:undefined;nextAppState[key]=suppliedValue!==undefined?suppliedValue:localValue!==undefined?localValue:defaultValue;}return _objectSpread(_objectSpread({},nextAppState),{},{cursorButton:(localAppState===null||localAppState===void 0?void 0:localAppState.cursorButton)||\"up\",// reset on fresh restore so as to hide the UI button if penMode not active\npenDetected:(_localAppState$penDet=localAppState===null||localAppState===void 0?void 0:localAppState.penDetected)!==null&&_localAppState$penDet!==void 0?_localAppState$penDet:appState.penMode?(_appState$penDetected=appState.penDetected)!==null&&_appState$penDetected!==void 0?_appState$penDetected:false:false,activeTool:_objectSpread(_objectSpread({},updateActiveTool(defaultAppState,nextAppState.activeTool.type&&AllowedExcalidrawActiveTools[nextAppState.activeTool.type]?nextAppState.activeTool:{type:\"selection\"})),{},{lastActiveTool:null,locked:(_nextAppState$activeT=nextAppState.activeTool.locked)!==null&&_nextAppState$activeT!==void 0?_nextAppState$activeT:false}),// Migrates from previous version where appState.zoom was a number\nzoom:typeof appState.zoom===\"number\"?{value:appState.zoom}:(_appState$zoom=appState.zoom)!==null&&_appState$zoom!==void 0&&_appState$zoom.value?appState.zoom:defaultAppState.zoom,openSidebar:// string (legacy)\ntypeof appState.openSidebar===\"string\"?{name:DEFAULT_SIDEBAR.name}:nextAppState.openSidebar});};export var restore=function restore(data,localAppState,localElements,elementsConfig){return{elements:restoreElements(data===null||data===void 0?void 0:data.elements,localElements,elementsConfig),appState:restoreAppState(data===null||data===void 0?void 0:data.appState,localAppState||null),files:(data===null||data===void 0?void 0:data.files)||{}};};var restoreLibraryItem=function restoreLibraryItem(libraryItem){var elements=restoreElements(getNonDeletedElements(libraryItem.elements),null);return elements.length?_objectSpread(_objectSpread({},libraryItem),{},{elements:elements}):null;};export var restoreLibraryItems=function restoreLibraryItems(){var libraryItems=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var defaultStatus=arguments.length>1?arguments[1]:undefined;var restoredItems=[];var _iterator2=_createForOfIteratorHelper(libraryItems),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var item=_step2.value;// migrate older libraries\nif(Array.isArray(item)){var restoredItem=restoreLibraryItem({status:defaultStatus,elements:item,id:randomId(),created:Date.now()});if(restoredItem){restoredItems.push(restoredItem);}}else{var _item=item;var _restoredItem=restoreLibraryItem(_objectSpread(_objectSpread({},_item),{},{id:_item.id||randomId(),status:_item.status||defaultStatus,created:_item.created||Date.now()}));if(_restoredItem){restoredItems.push(_restoredItem);}}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return restoredItems;};","map":{"version":3,"names":["ImportedDataState","getNonDeletedElements","getNormalizedDimensions","isInvisiblySmallElement","refreshTextDimensions","isTextElement","isUsingAdaptiveRadius","randomId","DEFAULT_FONT_FAMILY","DEFAULT_TEXT_ALIGN","DEFAULT_VERTICAL_ALIGN","PRECEDING_ELEMENT_KEY","FONT_FAMILY","ROUNDNESS","DEFAULT_SIDEBAR","getDefaultAppState","LinearElementEditor","bumpVersion","getFontString","getUpdatedTimestamp","updateActiveTool","arrayToMap","detectLineHeight","getDefaultLineHeight","measureBaseline","COLOR_PALETTE","normalizeLink","AllowedExcalidrawActiveTools","selection","text","rectangle","diamond","ellipse","line","image","arrow","freedraw","eraser","custom","frame","hand","getFontFamilyByName","fontFamilyName","Object","keys","includes","restoreElementWithProperties","element","extra","_element$versionNonce","_element$isDeleted","_element$strokeStyle","_element$roughness","_ref","_extra$x","_ref2","_extra$y","_element$seed","_element$groupIds","_element$frameId","_element$boundElement","_element$updated","_element$locked","base","type","version","versionNonce","isDeleted","id","fillStyle","strokeWidth","strokeStyle","roughness","opacity","angle","x","y","strokeColor","black","backgroundColor","transparent","width","height","seed","groupIds","frameId","roundness","strokeSharpness","LEGACY","PROPORTIONAL_RADIUS","boundElements","boundElementIds","map","updated","link","locked","customData","_objectSpread","restoreElement","_element$text","_element$containerId","_element$name","refreshDimensions","arguments","length","undefined","fontSize","fontFamily","_font$split","font","split","_font$split2","_slicedToArray","fontPx","_fontFamily","parseFloat","lineHeight","baseline","textAlign","verticalAlign","containerId","originalText","points","lastCommittedPoint","simulatePressure","pressures","status","fileId","scale","_element","_element$startArrowhe","startArrowhead","_element$endArrowhead","endArrowhead","Array","isArray","_LinearElementEditor$","getNormalizedPoints","startBinding","endBinding","name","repairContainerElement","container","elementsMap","slice","boundIds","Set","reduce","acc","binding","boundElement","get","has","add","push","repairBoundElement","find","repairFrameMembership","containingFrame","restoreElements","elements","localElements","opts","existingIds","localElementsMap","restoredElements","migratedElement","localElement","repairBindings","restoredElementsMap","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","err","e","f","coalesceAppStateValue","key","appState","defaultAppState","LegacyAppStateMigrations","isSidebarDocked","_appState$isSidebarDo","restoreAppState","localAppState","_localAppState$penDet","_appState$penDetected","_nextAppState$activeT","_appState$zoom","nextAppState","_i","_arr","legacyKey","_LegacyAppStateMigrat","_LegacyAppStateMigrat2","nextKey","nextValue","_i2","_arr2","entries","_arr2$_i","defaultValue","suppliedValue","localValue","cursorButton","penDetected","penMode","activeTool","lastActiveTool","zoom","openSidebar","restore","data","elementsConfig","files","restoreLibraryItem","libraryItem","restoreLibraryItems","libraryItems","defaultStatus","restoredItems","_iterator2","_step2","item","restoredItem","created","Date","now","_item"],"sources":["D:/project/excalidraw-cn/src/data/restore.ts"],"sourcesContent":["import {\n  ExcalidrawElement,\n  ExcalidrawSelectionElement,\n  ExcalidrawTextElement,\n  FontFamilyValues,\n  StrokeRoundness,\n} from \"../element/types\";\nimport {\n  AppState,\n  BinaryFiles,\n  LibraryItem,\n  NormalizedZoomValue,\n} from \"../types\";\nimport { ImportedDataState, LegacyAppState } from \"./types\";\nimport {\n  getNonDeletedElements,\n  getNormalizedDimensions,\n  isInvisiblySmallElement,\n  refreshTextDimensions,\n} from \"../element\";\nimport { isTextElement, isUsingAdaptiveRadius } from \"../element/typeChecks\";\nimport { randomId } from \"../random\";\nimport {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n  DEFAULT_VERTICAL_ALIGN,\n  PRECEDING_ELEMENT_KEY,\n  FONT_FAMILY,\n  ROUNDNESS,\n  DEFAULT_SIDEBAR,\n} from \"../constants\";\nimport { getDefaultAppState } from \"../appState\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { bumpVersion } from \"../element/mutateElement\";\nimport { getFontString, getUpdatedTimestamp, updateActiveTool } from \"../utils\";\nimport { arrayToMap } from \"../utils\";\nimport { MarkOptional, Mutable } from \"../utility-types\";\nimport {\n  detectLineHeight,\n  getDefaultLineHeight,\n  measureBaseline,\n} from \"../element/textElement\";\nimport { COLOR_PALETTE } from \"../colors\";\nimport { normalizeLink } from \"./url\";\n\ntype RestoredAppState = Omit<\n  AppState,\n  \"offsetTop\" | \"offsetLeft\" | \"width\" | \"height\"\n>;\n\nexport const AllowedExcalidrawActiveTools: Record<\n  AppState[\"activeTool\"][\"type\"],\n  boolean\n> = {\n  selection: true,\n  text: true,\n  rectangle: true,\n  diamond: true,\n  ellipse: true,\n  line: true,\n  image: true,\n  arrow: true,\n  freedraw: true,\n  eraser: false,\n  custom: true,\n  frame: true,\n  hand: true,\n};\n\nexport type RestoredDataState = {\n  elements: ExcalidrawElement[];\n  appState: RestoredAppState;\n  files: BinaryFiles;\n};\n\nconst getFontFamilyByName = (fontFamilyName: string): FontFamilyValues => {\n  if (Object.keys(FONT_FAMILY).includes(fontFamilyName)) {\n    return FONT_FAMILY[\n      fontFamilyName as keyof typeof FONT_FAMILY\n    ] as FontFamilyValues;\n  }\n  return DEFAULT_FONT_FAMILY;\n};\n\nconst restoreElementWithProperties = <\n  T extends Required<Omit<ExcalidrawElement, \"customData\">> & {\n    customData?: ExcalidrawElement[\"customData\"];\n    /** @deprecated */\n    boundElementIds?: readonly ExcalidrawElement[\"id\"][];\n    /** @deprecated */\n    strokeSharpness?: StrokeRoundness;\n    /** metadata that may be present in elements during collaboration */\n    [PRECEDING_ELEMENT_KEY]?: string;\n  },\n  K extends Pick<T, keyof Omit<Required<T>, keyof ExcalidrawElement>>,\n>(\n  element: T,\n  extra: Pick<\n    T,\n    // This extra Pick<T, keyof K> ensure no excess properties are passed.\n    // @ts-ignore TS complains here but type checks the call sites fine.\n    keyof K\n  > &\n    Partial<Pick<ExcalidrawElement, \"type\" | \"x\" | \"y\">>,\n): T => {\n  const base: Pick<T, keyof ExcalidrawElement> & {\n    [PRECEDING_ELEMENT_KEY]?: string;\n  } = {\n    type: extra.type || element.type,\n    // all elements must have version > 0 so getSceneVersion() will pick up\n    // newly added elements\n    version: element.version || 1,\n    versionNonce: element.versionNonce ?? 0,\n    isDeleted: element.isDeleted ?? false,\n    id: element.id || randomId(),\n    fillStyle: element.fillStyle || \"hachure\",\n    strokeWidth: element.strokeWidth || 1,\n    strokeStyle: element.strokeStyle ?? \"solid\",\n    roughness: element.roughness ?? 1,\n    opacity: element.opacity == null ? 100 : element.opacity,\n    angle: element.angle || 0,\n    x: extra.x ?? element.x ?? 0,\n    y: extra.y ?? element.y ?? 0,\n    strokeColor: element.strokeColor || COLOR_PALETTE.black,\n    backgroundColor: element.backgroundColor || COLOR_PALETTE.transparent,\n    width: element.width || 0,\n    height: element.height || 0,\n    seed: element.seed ?? 1,\n    groupIds: element.groupIds ?? [],\n    frameId: element.frameId ?? null,\n    roundness: element.roundness\n      ? element.roundness\n      : element.strokeSharpness === \"round\"\n      ? {\n          // for old elements that would now use adaptive radius algo,\n          // use legacy algo instead\n          type: isUsingAdaptiveRadius(element.type)\n            ? ROUNDNESS.LEGACY\n            : ROUNDNESS.PROPORTIONAL_RADIUS,\n        }\n      : null,\n    boundElements: element.boundElementIds\n      ? element.boundElementIds.map((id) => ({ type: \"arrow\", id }))\n      : element.boundElements ?? [],\n    updated: element.updated ?? getUpdatedTimestamp(),\n    link: element.link ? normalizeLink(element.link) : null,\n    locked: element.locked ?? false,\n  };\n\n  if (\"customData\" in element) {\n    base.customData = element.customData;\n  }\n\n  if (PRECEDING_ELEMENT_KEY in element) {\n    base[PRECEDING_ELEMENT_KEY] = element[PRECEDING_ELEMENT_KEY];\n  }\n\n  return {\n    ...base,\n    ...getNormalizedDimensions(base),\n    ...extra,\n  } as unknown as T;\n};\n\nconst restoreElement = (\n  element: Exclude<ExcalidrawElement, ExcalidrawSelectionElement>,\n  refreshDimensions = false,\n): typeof element | null => {\n  switch (element.type) {\n    case \"text\":\n      let fontSize = element.fontSize;\n      let fontFamily = element.fontFamily;\n      if (\"font\" in element) {\n        const [fontPx, _fontFamily]: [string, string] = (\n          element as any\n        ).font.split(\" \");\n        fontSize = parseFloat(fontPx);\n        fontFamily = getFontFamilyByName(_fontFamily);\n      }\n      const text = element.text ?? \"\";\n\n      // line-height might not be specified either when creating elements\n      // programmatically, or when importing old diagrams.\n      // For the latter we want to detect the original line height which\n      // will likely differ from our per-font fixed line height we now use,\n      // to maintain backward compatibility.\n      const lineHeight =\n        element.lineHeight ||\n        (element.height\n          ? // detect line-height from current element height and font-size\n            detectLineHeight(element)\n          : // no element height likely means programmatic use, so default\n            // to a fixed line height\n            getDefaultLineHeight(element.fontFamily));\n      const baseline = measureBaseline(\n        element.text,\n        getFontString(element),\n        lineHeight,\n      );\n      element = restoreElementWithProperties(element, {\n        fontSize,\n        fontFamily,\n        text,\n        textAlign: element.textAlign || DEFAULT_TEXT_ALIGN,\n        verticalAlign: element.verticalAlign || DEFAULT_VERTICAL_ALIGN,\n        containerId: element.containerId ?? null,\n        originalText: element.originalText || text,\n\n        lineHeight,\n        baseline,\n      });\n\n      if (refreshDimensions) {\n        element = { ...element, ...refreshTextDimensions(element) };\n      }\n      return element;\n    case \"freedraw\": {\n      return restoreElementWithProperties(element, {\n        points: element.points,\n        lastCommittedPoint: null,\n        simulatePressure: element.simulatePressure,\n        pressures: element.pressures,\n      });\n    }\n    case \"image\":\n      return restoreElementWithProperties(element, {\n        status: element.status || \"pending\",\n        fileId: element.fileId,\n        scale: element.scale || [1, 1],\n      });\n    case \"line\":\n    // @ts-ignore LEGACY type\n    // eslint-disable-next-line no-fallthrough\n    case \"draw\":\n    case \"arrow\": {\n      const {\n        startArrowhead = null,\n        endArrowhead = element.type === \"arrow\" ? \"arrow\" : null,\n      } = element;\n\n      let x = element.x;\n      let y = element.y;\n      let points = // migrate old arrow model to new one\n        !Array.isArray(element.points) || element.points.length < 2\n          ? [\n              [0, 0],\n              [element.width, element.height],\n            ]\n          : element.points;\n\n      if (points[0][0] !== 0 || points[0][1] !== 0) {\n        ({ points, x, y } = LinearElementEditor.getNormalizedPoints(element));\n      }\n\n      return restoreElementWithProperties(element, {\n        type:\n          (element.type as ExcalidrawElement[\"type\"] | \"draw\") === \"draw\"\n            ? \"line\"\n            : element.type,\n        startBinding: element.startBinding,\n        endBinding: element.endBinding,\n        lastCommittedPoint: null,\n        startArrowhead,\n        endArrowhead,\n        points,\n        x,\n        y,\n      });\n    }\n\n    // generic elements\n    case \"ellipse\":\n      return restoreElementWithProperties(element, {});\n    case \"rectangle\":\n      return restoreElementWithProperties(element, {});\n    case \"diamond\":\n      return restoreElementWithProperties(element, {});\n    case \"frame\":\n      return restoreElementWithProperties(element, {\n        name: element.name ?? null,\n      });\n\n    // Don't use default case so as to catch a missing an element type case.\n    // We also don't want to throw, but instead return void so we filter\n    // out these unsupported elements from the restored array.\n  }\n};\n\n/**\n * Repairs contaienr element's boundElements array by removing duplicates and\n * fixing containerId of bound elements if not present. Also removes any\n * bound elements that do not exist in the elements array.\n *\n * NOTE mutates elements.\n */\nconst repairContainerElement = (\n  container: Mutable<ExcalidrawElement>,\n  elementsMap: Map<string, Mutable<ExcalidrawElement>>,\n) => {\n  if (container.boundElements) {\n    // copy because we're not cloning on restore, and we don't want to mutate upstream\n    const boundElements = container.boundElements.slice();\n\n    // dedupe bindings & fix boundElement.containerId if not set already\n    const boundIds = new Set<ExcalidrawElement[\"id\"]>();\n    container.boundElements = boundElements.reduce(\n      (\n        acc: Mutable<NonNullable<ExcalidrawElement[\"boundElements\"]>>,\n        binding,\n      ) => {\n        const boundElement = elementsMap.get(binding.id);\n        if (boundElement && !boundIds.has(binding.id)) {\n          boundIds.add(binding.id);\n\n          if (boundElement.isDeleted) {\n            return acc;\n          }\n\n          acc.push(binding);\n\n          if (\n            isTextElement(boundElement) &&\n            // being slightly conservative here, preserving existing containerId\n            // if defined, lest boundElements is stale\n            !boundElement.containerId\n          ) {\n            (boundElement as Mutable<ExcalidrawTextElement>).containerId =\n              container.id;\n          }\n        }\n        return acc;\n      },\n      [],\n    );\n  }\n};\n\n/**\n * Repairs target bound element's container's boundElements array,\n * or removes contaienrId if container does not exist.\n *\n * NOTE mutates elements.\n */\nconst repairBoundElement = (\n  boundElement: Mutable<ExcalidrawTextElement>,\n  elementsMap: Map<string, Mutable<ExcalidrawElement>>,\n) => {\n  const container = boundElement.containerId\n    ? elementsMap.get(boundElement.containerId)\n    : null;\n\n  if (!container) {\n    boundElement.containerId = null;\n    return;\n  }\n\n  if (boundElement.isDeleted) {\n    return;\n  }\n\n  if (\n    container.boundElements &&\n    !container.boundElements.find((binding) => binding.id === boundElement.id)\n  ) {\n    // copy because we're not cloning on restore, and we don't want to mutate upstream\n    const boundElements = (\n      container.boundElements || (container.boundElements = [])\n    ).slice();\n    boundElements.push({ type: \"text\", id: boundElement.id });\n    container.boundElements = boundElements;\n  }\n};\n\n/**\n * Remove an element's frameId if its containing frame is non-existent\n *\n * NOTE mutates elements.\n */\nconst repairFrameMembership = (\n  element: Mutable<ExcalidrawElement>,\n  elementsMap: Map<string, Mutable<ExcalidrawElement>>,\n) => {\n  if (element.frameId) {\n    const containingFrame = elementsMap.get(element.frameId);\n\n    if (!containingFrame) {\n      element.frameId = null;\n    }\n  }\n};\n\nexport const restoreElements = (\n  elements: ImportedDataState[\"elements\"],\n  /** NOTE doesn't serve for reconciliation */\n  localElements: readonly ExcalidrawElement[] | null | undefined,\n  opts?: { refreshDimensions?: boolean; repairBindings?: boolean } | undefined,\n): ExcalidrawElement[] => {\n  // used to detect duplicate top-level element ids\n  const existingIds = new Set<string>();\n\n  const localElementsMap = localElements ? arrayToMap(localElements) : null;\n  const restoredElements = (elements || []).reduce((elements, element) => {\n    // filtering out selection, which is legacy, no longer kept in elements,\n    // and causing issues if retained\n    if (element.type !== \"selection\" && !isInvisiblySmallElement(element)) {\n      let migratedElement: ExcalidrawElement | null = restoreElement(\n        element,\n        opts?.refreshDimensions,\n      );\n      if (migratedElement) {\n        const localElement = localElementsMap?.get(element.id);\n        if (localElement && localElement.version > migratedElement.version) {\n          migratedElement = bumpVersion(migratedElement, localElement.version);\n        }\n        if (existingIds.has(migratedElement.id)) {\n          migratedElement = { ...migratedElement, id: randomId() };\n        }\n        existingIds.add(migratedElement.id);\n        elements.push(migratedElement);\n      }\n    }\n    return elements;\n  }, [] as ExcalidrawElement[]);\n\n  if (!opts?.repairBindings) {\n    return restoredElements;\n  }\n\n  // repair binding. Mutates elements.\n  const restoredElementsMap = arrayToMap(restoredElements);\n  for (const element of restoredElements) {\n    if (element.frameId) {\n      repairFrameMembership(element, restoredElementsMap);\n    }\n\n    if (isTextElement(element) && element.containerId) {\n      repairBoundElement(element, restoredElementsMap);\n    } else if (element.boundElements) {\n      repairContainerElement(element, restoredElementsMap);\n    }\n  }\n\n  return restoredElements;\n};\n\nconst coalesceAppStateValue = <\n  T extends keyof ReturnType<typeof getDefaultAppState>,\n>(\n  key: T,\n  appState: Exclude<ImportedDataState[\"appState\"], null | undefined>,\n  defaultAppState: ReturnType<typeof getDefaultAppState>,\n) => {\n  const value = appState[key];\n  // NOTE the value! assertion is needed in TS 4.5.5 (fixed in newer versions)\n  return value !== undefined ? value! : defaultAppState[key];\n};\n\nconst LegacyAppStateMigrations: {\n  [K in keyof LegacyAppState]: (\n    ImportedDataState: Exclude<ImportedDataState[\"appState\"], null | undefined>,\n    defaultAppState: ReturnType<typeof getDefaultAppState>,\n  ) => [LegacyAppState[K][1], AppState[LegacyAppState[K][1]]];\n} = {\n  isSidebarDocked: (appState, defaultAppState) => {\n    return [\n      \"defaultSidebarDockedPreference\",\n      appState.isSidebarDocked ??\n        coalesceAppStateValue(\n          \"defaultSidebarDockedPreference\",\n          appState,\n          defaultAppState,\n        ),\n    ];\n  },\n};\n\nexport const restoreAppState = (\n  appState: ImportedDataState[\"appState\"],\n  localAppState: Partial<AppState> | null | undefined,\n): RestoredAppState => {\n  appState = appState || {};\n  const defaultAppState = getDefaultAppState();\n  const nextAppState = {} as typeof defaultAppState;\n\n  // first, migrate all legacy AppState properties to new ones. We do it\n  // in one go before migrate the rest of the properties in case the new ones\n  // depend on checking any other key (i.e. they are coupled)\n  for (const legacyKey of Object.keys(\n    LegacyAppStateMigrations,\n  ) as (keyof typeof LegacyAppStateMigrations)[]) {\n    if (legacyKey in appState) {\n      const [nextKey, nextValue] = LegacyAppStateMigrations[legacyKey](\n        appState,\n        defaultAppState,\n      );\n      (nextAppState as any)[nextKey] = nextValue;\n    }\n  }\n\n  for (const [key, defaultValue] of Object.entries(defaultAppState) as [\n    keyof typeof defaultAppState,\n    any,\n  ][]) {\n    // if AppState contains a legacy key, prefer that one and migrate its\n    // value to the new one\n    const suppliedValue = appState[key];\n\n    const localValue = localAppState ? localAppState[key] : undefined;\n    (nextAppState as any)[key] =\n      suppliedValue !== undefined\n        ? suppliedValue\n        : localValue !== undefined\n        ? localValue\n        : defaultValue;\n  }\n\n  return {\n    ...nextAppState,\n    cursorButton: localAppState?.cursorButton || \"up\",\n    // reset on fresh restore so as to hide the UI button if penMode not active\n    penDetected:\n      localAppState?.penDetected ??\n      (appState.penMode ? appState.penDetected ?? false : false),\n    activeTool: {\n      ...updateActiveTool(\n        defaultAppState,\n        nextAppState.activeTool.type &&\n          AllowedExcalidrawActiveTools[nextAppState.activeTool.type]\n          ? nextAppState.activeTool\n          : { type: \"selection\" },\n      ),\n      lastActiveTool: null,\n      locked: nextAppState.activeTool.locked ?? false,\n    },\n    // Migrates from previous version where appState.zoom was a number\n    zoom:\n      typeof appState.zoom === \"number\"\n        ? {\n            value: appState.zoom as NormalizedZoomValue,\n          }\n        : appState.zoom?.value\n        ? appState.zoom\n        : defaultAppState.zoom,\n    openSidebar:\n      // string (legacy)\n      typeof (appState.openSidebar as any as string) === \"string\"\n        ? { name: DEFAULT_SIDEBAR.name }\n        : nextAppState.openSidebar,\n  };\n};\n\nexport const restore = (\n  data: Pick<ImportedDataState, \"appState\" | \"elements\" | \"files\"> | null,\n  /**\n   * Local AppState (`this.state` or initial state from localStorage) so that we\n   * don't overwrite local state with default values (when values not\n   * explicitly specified).\n   * Supply `null` if you can't get access to it.\n   */\n  localAppState: Partial<AppState> | null | undefined,\n  localElements: readonly ExcalidrawElement[] | null | undefined,\n  elementsConfig?: { refreshDimensions?: boolean; repairBindings?: boolean },\n): RestoredDataState => {\n  return {\n    elements: restoreElements(data?.elements, localElements, elementsConfig),\n    appState: restoreAppState(data?.appState, localAppState || null),\n    files: data?.files || {},\n  };\n};\n\nconst restoreLibraryItem = (libraryItem: LibraryItem) => {\n  const elements = restoreElements(\n    getNonDeletedElements(libraryItem.elements),\n    null,\n  );\n  return elements.length ? { ...libraryItem, elements } : null;\n};\n\nexport const restoreLibraryItems = (\n  libraryItems: ImportedDataState[\"libraryItems\"] = [],\n  defaultStatus: LibraryItem[\"status\"],\n) => {\n  const restoredItems: LibraryItem[] = [];\n  for (const item of libraryItems) {\n    // migrate older libraries\n    if (Array.isArray(item)) {\n      const restoredItem = restoreLibraryItem({\n        status: defaultStatus,\n        elements: item,\n        id: randomId(),\n        created: Date.now(),\n      });\n      if (restoredItem) {\n        restoredItems.push(restoredItem);\n      }\n    } else {\n      const _item = item as MarkOptional<\n        LibraryItem,\n        \"id\" | \"status\" | \"created\"\n      >;\n      const restoredItem = restoreLibraryItem({\n        ..._item,\n        id: _item.id || randomId(),\n        status: _item.status || defaultStatus,\n        created: _item.created || Date.now(),\n      });\n      if (restoredItem) {\n        restoredItems.push(restoredItem);\n      }\n    }\n  }\n  return restoredItems;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}