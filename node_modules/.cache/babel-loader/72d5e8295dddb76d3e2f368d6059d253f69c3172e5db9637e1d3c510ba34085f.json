{"ast":null,"code":"import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { GRID_SIZE } from \"../constants\";\nexport const actionToggleGridMode = register({\n  name: \"gridMode\",\n  viewMode: true,\n  trackEvent: {\n    category: \"canvas\",\n    predicate: appState => !appState.gridSize\n  },\n  perform(elements, appState) {\n    return {\n      appState: {\n        ...appState,\n        gridSize: this.checked(appState) ? null : GRID_SIZE\n      },\n      commitToHistory: false\n    };\n  },\n  checked: appState => appState.gridSize !== null,\n  predicate: (element, appState, props) => {\n    return typeof props.gridModeEnabled === \"undefined\";\n  },\n  contextItemLabel: \"labels.showGrid\",\n  keyTest: event => event[KEYS.CTRL_OR_CMD] && event.code === CODES.QUOTE\n});","map":{"version":3,"names":["CODES","KEYS","register","GRID_SIZE","actionToggleGridMode","name","viewMode","trackEvent","category","predicate","appState","gridSize","perform","elements","checked","commitToHistory","element","props","gridModeEnabled","contextItemLabel","keyTest","event","CTRL_OR_CMD","code","QUOTE"],"sources":["D:/project/excalidraw-cn/src/actions/actionToggleGridMode.tsx"],"sourcesContent":["import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { GRID_SIZE } from \"../constants\";\nimport { AppState } from \"../types\";\n\nexport const actionToggleGridMode = register({\n  name: \"gridMode\",\n  viewMode: true,\n  trackEvent: {\n    category: \"canvas\",\n    predicate: (appState) => !appState.gridSize,\n  },\n  perform(elements, appState) {\n    return {\n      appState: {\n        ...appState,\n        gridSize: this.checked!(appState) ? null : GRID_SIZE,\n      },\n      commitToHistory: false,\n    };\n  },\n  checked: (appState: AppState) => appState.gridSize !== null,\n  predicate: (element, appState, props) => {\n    return typeof props.gridModeEnabled === \"undefined\";\n  },\n  contextItemLabel: \"labels.showGrid\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.code === CODES.QUOTE,\n});\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,IAAI,QAAQ,SAAS;AACrC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,SAAS,QAAQ,cAAc;AAGxC,OAAO,MAAMC,oBAAoB,GAAGF,QAAQ,CAAC;EAC3CG,IAAI,EAAE,UAAU;EAChBC,QAAQ,EAAE,IAAI;EACdC,UAAU,EAAE;IACVC,QAAQ,EAAE,QAAQ;IAClBC,SAAS,EAAGC,QAAQ,IAAK,CAACA,QAAQ,CAACC;EACrC,CAAC;EACDC,OAAOA,CAACC,QAAQ,EAAEH,QAAQ,EAAE;IAC1B,OAAO;MACLA,QAAQ,EAAE;QACR,GAAGA,QAAQ;QACXC,QAAQ,EAAE,IAAI,CAACG,OAAO,CAAEJ,QAAQ,CAAC,GAAG,IAAI,GAAGP;MAC7C,CAAC;MACDY,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDD,OAAO,EAAGJ,QAAkB,IAAKA,QAAQ,CAACC,QAAQ,KAAK,IAAI;EAC3DF,SAAS,EAAEA,CAACO,OAAO,EAAEN,QAAQ,EAAEO,KAAK,KAAK;IACvC,OAAO,OAAOA,KAAK,CAACC,eAAe,KAAK,WAAW;EACrD,CAAC;EACDC,gBAAgB,EAAE,iBAAiB;EACnCC,OAAO,EAAGC,KAAK,IAAKA,KAAK,CAACpB,IAAI,CAACqB,WAAW,CAAC,IAAID,KAAK,CAACE,IAAI,KAAKvB,KAAK,CAACwB;AACtE,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}