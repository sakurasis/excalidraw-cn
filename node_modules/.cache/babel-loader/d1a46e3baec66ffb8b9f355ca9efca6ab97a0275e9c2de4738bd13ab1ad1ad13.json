{"ast":null,"code":"import _regeneratorRuntime from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{copyBlobToClipboardAsPng,copyTextToSystemClipboard}from\"../clipboard\";import{DEFAULT_EXPORT_PADDING,isFirefox,MIME_TYPES}from\"../constants\";import{t}from\"../i18n\";import{exportToCanvas,exportToSvg}from\"../scene/export\";import{canvasToBlob}from\"./blob\";import{fileSave}from\"./filesystem\";import{serializeAsJSON}from\"./json\";export{loadFromBlob}from\"./blob\";export{loadFromJSON,saveAsJSON}from\"./json\";export var exportCanvas=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(type,elements,appState,files,_ref){var exportBackground,_ref$exportPadding,exportPadding,viewBackgroundColor,name,_ref$fileHandle,fileHandle,tempSvg,tempCanvas,blob,_blob;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:exportBackground=_ref.exportBackground,_ref$exportPadding=_ref.exportPadding,exportPadding=_ref$exportPadding===void 0?DEFAULT_EXPORT_PADDING:_ref$exportPadding,viewBackgroundColor=_ref.viewBackgroundColor,name=_ref.name,_ref$fileHandle=_ref.fileHandle,fileHandle=_ref$fileHandle===void 0?null:_ref$fileHandle;if(!(elements.length===0)){_context.next=3;break;}throw new Error(t(\"alerts.cannotExportEmptyCanvas\"));case 3:if(!(type===\"svg\"||type===\"clipboard-svg\")){_context.next=17;break;}_context.next=6;return exportToSvg(elements,{exportBackground:exportBackground,exportWithDarkMode:appState.exportWithDarkMode,viewBackgroundColor:viewBackgroundColor,exportPadding:exportPadding,exportScale:appState.exportScale,exportEmbedScene:appState.exportEmbedScene&&type===\"svg\"},files);case 6:tempSvg=_context.sent;if(!(type===\"svg\")){_context.next=13;break;}_context.next=10;return fileSave(new Blob([tempSvg.outerHTML],{type:MIME_TYPES.svg}),{description:\"Export to SVG\",name:name,extension:appState.exportEmbedScene?\"excalidraw.svg\":\"svg\",fileHandle:fileHandle});case 10:return _context.abrupt(\"return\",_context.sent);case 13:if(!(type===\"clipboard-svg\")){_context.next=17;break;}_context.next=16;return copyTextToSystemClipboard(tempSvg.outerHTML);case 16:return _context.abrupt(\"return\");case 17:_context.next=19;return exportToCanvas(elements,appState,files,{exportBackground:exportBackground,viewBackgroundColor:viewBackgroundColor,exportPadding:exportPadding});case 19:tempCanvas=_context.sent;tempCanvas.style.display=\"none\";document.body.appendChild(tempCanvas);if(!(type===\"png\")){_context.next=38;break;}_context.next=25;return canvasToBlob(tempCanvas);case 25:blob=_context.sent;tempCanvas.remove();if(!appState.exportEmbedScene){_context.next=33;break;}_context.next=30;return import(/* webpackChunkName: \"image\" */\"./image\");case 30:_context.next=32;return _context.sent.encodePngMetadata({blob:blob,metadata:serializeAsJSON(elements,appState,files,\"local\")});case 32:blob=_context.sent;case 33:_context.next=35;return fileSave(blob,{description:\"Export to PNG\",name:name,// FIXME reintroduce `excalidraw.png` when most people upgrade away\n// from 111.0.5563.64 (arm64), see #6349\nextension:/* appState.exportEmbedScene ? \"excalidraw.png\" : */\"png\",fileHandle:fileHandle});case 35:return _context.abrupt(\"return\",_context.sent);case 38:if(!(type===\"clipboard\")){_context.next=60;break;}_context.prev=39;_blob=canvasToBlob(tempCanvas);_context.next=43;return copyBlobToClipboardAsPng(_blob);case 43:_context.next=55;break;case 45:_context.prev=45;_context.t0=_context[\"catch\"](39);console.warn(_context.t0);if(!(_context.t0.name===\"CANVAS_POSSIBLY_TOO_BIG\")){_context.next=50;break;}throw _context.t0;case 50:if(!(isFirefox&&_context.t0.name===\"TypeError\")){_context.next=54;break;}throw new Error(\"\".concat(t(\"alerts.couldNotCopyToClipboard\"),\"\\n\\n\").concat(t(\"hints.firefox_clipboard_write\")));case 54:throw new Error(t(\"alerts.couldNotCopyToClipboard\"));case 55:_context.prev=55;tempCanvas.remove();return _context.finish(55);case 58:_context.next=62;break;case 60:tempCanvas.remove();// shouldn't happen\nthrow new Error(\"Unsupported export type\");case 62:case\"end\":return _context.stop();}},_callee,null,[[39,45,55,58]]);}));return function exportCanvas(_x,_x2,_x3,_x4,_x5){return _ref2.apply(this,arguments);};}();","map":{"version":3,"names":["copyBlobToClipboardAsPng","copyTextToSystemClipboard","DEFAULT_EXPORT_PADDING","isFirefox","MIME_TYPES","t","exportToCanvas","exportToSvg","canvasToBlob","fileSave","serializeAsJSON","loadFromBlob","loadFromJSON","saveAsJSON","exportCanvas","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","type","elements","appState","files","_ref","exportBackground","_ref$exportPadding","exportPadding","viewBackgroundColor","name","_ref$fileHandle","fileHandle","tempSvg","tempCanvas","blob","_blob","wrap","_callee$","_context","prev","next","length","Error","exportWithDarkMode","exportScale","exportEmbedScene","sent","Blob","outerHTML","svg","description","extension","abrupt","style","display","document","body","appendChild","remove","encodePngMetadata","metadata","t0","console","warn","concat","finish","stop","_x","_x2","_x3","_x4","_x5","apply","arguments"],"sources":["D:/project/excalidraw-cn/src/data/index.ts"],"sourcesContent":["import {\n  copyBlobToClipboardAsPng,\n  copyTextToSystemClipboard,\n} from \"../clipboard\";\nimport { DEFAULT_EXPORT_PADDING, isFirefox, MIME_TYPES } from \"../constants\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { exportToCanvas, exportToSvg } from \"../scene/export\";\nimport { ExportType } from \"../scene/types\";\nimport { AppState, BinaryFiles } from \"../types\";\nimport { canvasToBlob } from \"./blob\";\nimport { fileSave, FileSystemHandle } from \"./filesystem\";\nimport { serializeAsJSON } from \"./json\";\n\nexport { loadFromBlob } from \"./blob\";\nexport { loadFromJSON, saveAsJSON } from \"./json\";\n\nexport const exportCanvas = async (\n  type: Omit<ExportType, \"backend\">,\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  files: BinaryFiles,\n  {\n    exportBackground,\n    exportPadding = DEFAULT_EXPORT_PADDING,\n    viewBackgroundColor,\n    name,\n    fileHandle = null,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    name: string;\n    fileHandle?: FileSystemHandle | null;\n  },\n) => {\n  if (elements.length === 0) {\n    throw new Error(t(\"alerts.cannotExportEmptyCanvas\"));\n  }\n  if (type === \"svg\" || type === \"clipboard-svg\") {\n    const tempSvg = await exportToSvg(\n      elements,\n      {\n        exportBackground,\n        exportWithDarkMode: appState.exportWithDarkMode,\n        viewBackgroundColor,\n        exportPadding,\n        exportScale: appState.exportScale,\n        exportEmbedScene: appState.exportEmbedScene && type === \"svg\",\n      },\n      files,\n    );\n    if (type === \"svg\") {\n      return await fileSave(\n        new Blob([tempSvg.outerHTML], { type: MIME_TYPES.svg }),\n        {\n          description: \"Export to SVG\",\n          name,\n          extension: appState.exportEmbedScene ? \"excalidraw.svg\" : \"svg\",\n          fileHandle,\n        },\n      );\n    } else if (type === \"clipboard-svg\") {\n      await copyTextToSystemClipboard(tempSvg.outerHTML);\n      return;\n    }\n  }\n\n  const tempCanvas = await exportToCanvas(elements, appState, files, {\n    exportBackground,\n    viewBackgroundColor,\n    exportPadding,\n  });\n  tempCanvas.style.display = \"none\";\n  document.body.appendChild(tempCanvas);\n\n  if (type === \"png\") {\n    let blob = await canvasToBlob(tempCanvas);\n    tempCanvas.remove();\n    if (appState.exportEmbedScene) {\n      blob = await (\n        await import(/* webpackChunkName: \"image\" */ \"./image\")\n      ).encodePngMetadata({\n        blob,\n        metadata: serializeAsJSON(elements, appState, files, \"local\"),\n      });\n    }\n\n    return await fileSave(blob, {\n      description: \"Export to PNG\",\n      name,\n      // FIXME reintroduce `excalidraw.png` when most people upgrade away\n      // from 111.0.5563.64 (arm64), see #6349\n      extension: /* appState.exportEmbedScene ? \"excalidraw.png\" : */ \"png\",\n      fileHandle,\n    });\n  } else if (type === \"clipboard\") {\n    try {\n      const blob = canvasToBlob(tempCanvas);\n      await copyBlobToClipboardAsPng(blob);\n    } catch (error: any) {\n      console.warn(error);\n      if (error.name === \"CANVAS_POSSIBLY_TOO_BIG\") {\n        throw error;\n      }\n      // TypeError *probably* suggests ClipboardItem not defined, which\n      // people on Firefox can enable through a flag, so let's tell them.\n      if (isFirefox && error.name === \"TypeError\") {\n        throw new Error(\n          `${t(\"alerts.couldNotCopyToClipboard\")}\\n\\n${t(\n            \"hints.firefox_clipboard_write\",\n          )}`,\n        );\n      } else {\n        throw new Error(t(\"alerts.couldNotCopyToClipboard\"));\n      }\n    } finally {\n      tempCanvas.remove();\n    }\n  } else {\n    tempCanvas.remove();\n    // shouldn't happen\n    throw new Error(\"Unsupported export type\");\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}