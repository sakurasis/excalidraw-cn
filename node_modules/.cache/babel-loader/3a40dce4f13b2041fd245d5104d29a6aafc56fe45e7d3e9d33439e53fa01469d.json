{"ast":null,"code":"/**\n * https://stackoverflow.com/a/3368118\n * Draws a rounded rectangle using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius\n */\nexport const roundRect = (context, x, y, width, height, radius, strokeColor) => {\n  context.beginPath();\n  context.moveTo(x + radius, y);\n  context.lineTo(x + width - radius, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius);\n  context.lineTo(x + width, y + height - radius);\n  context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n  context.lineTo(x + radius, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius);\n  context.lineTo(x, y + radius);\n  context.quadraticCurveTo(x, y, x + radius, y);\n  context.closePath();\n  context.fill();\n  if (strokeColor) {\n    context.strokeStyle = strokeColor;\n  }\n  context.stroke();\n};","map":{"version":3,"names":["roundRect","context","x","y","width","height","radius","strokeColor","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","strokeStyle","stroke"],"sources":["D:/project/excalidraw-cn/src/renderer/roundRect.ts"],"sourcesContent":["/**\n * https://stackoverflow.com/a/3368118\n * Draws a rounded rectangle using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius\n */\nexport const roundRect = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n  strokeColor?: string,\n) => {\n  context.beginPath();\n  context.moveTo(x + radius, y);\n  context.lineTo(x + width - radius, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius);\n  context.lineTo(x + width, y + height - radius);\n  context.quadraticCurveTo(\n    x + width,\n    y + height,\n    x + width - radius,\n    y + height,\n  );\n  context.lineTo(x + radius, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius);\n  context.lineTo(x, y + radius);\n  context.quadraticCurveTo(x, y, x + radius, y);\n  context.closePath();\n  context.fill();\n  if (strokeColor) {\n    context.strokeStyle = strokeColor;\n  }\n  context.stroke();\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,SAAS,GAAGA,CACvBC,OAAiC,EACjCC,CAAS,EACTC,CAAS,EACTC,KAAa,EACbC,MAAc,EACdC,MAAc,EACdC,WAAoB,KACjB;EACHN,OAAO,CAACO,SAAS,EAAE;EACnBP,OAAO,CAACQ,MAAM,CAACP,CAAC,GAAGI,MAAM,EAAEH,CAAC,CAAC;EAC7BF,OAAO,CAACS,MAAM,CAACR,CAAC,GAAGE,KAAK,GAAGE,MAAM,EAAEH,CAAC,CAAC;EACrCF,OAAO,CAACU,gBAAgB,CAACT,CAAC,GAAGE,KAAK,EAAED,CAAC,EAAED,CAAC,GAAGE,KAAK,EAAED,CAAC,GAAGG,MAAM,CAAC;EAC7DL,OAAO,CAACS,MAAM,CAACR,CAAC,GAAGE,KAAK,EAAED,CAAC,GAAGE,MAAM,GAAGC,MAAM,CAAC;EAC9CL,OAAO,CAACU,gBAAgB,CACtBT,CAAC,GAAGE,KAAK,EACTD,CAAC,GAAGE,MAAM,EACVH,CAAC,GAAGE,KAAK,GAAGE,MAAM,EAClBH,CAAC,GAAGE,MAAM,CACX;EACDJ,OAAO,CAACS,MAAM,CAACR,CAAC,GAAGI,MAAM,EAAEH,CAAC,GAAGE,MAAM,CAAC;EACtCJ,OAAO,CAACU,gBAAgB,CAACT,CAAC,EAAEC,CAAC,GAAGE,MAAM,EAAEH,CAAC,EAAEC,CAAC,GAAGE,MAAM,GAAGC,MAAM,CAAC;EAC/DL,OAAO,CAACS,MAAM,CAACR,CAAC,EAAEC,CAAC,GAAGG,MAAM,CAAC;EAC7BL,OAAO,CAACU,gBAAgB,CAACT,CAAC,EAAEC,CAAC,EAAED,CAAC,GAAGI,MAAM,EAAEH,CAAC,CAAC;EAC7CF,OAAO,CAACW,SAAS,EAAE;EACnBX,OAAO,CAACY,IAAI,EAAE;EACd,IAAIN,WAAW,EAAE;IACfN,OAAO,CAACa,WAAW,GAAGP,WAAW;EACnC;EACAN,OAAO,CAACc,MAAM,EAAE;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}