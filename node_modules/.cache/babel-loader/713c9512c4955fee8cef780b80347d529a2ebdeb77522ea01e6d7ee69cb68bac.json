{"ast":null,"code":"import _toConsumableArray from \"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport React from 'react';\nimport { create } from 'zustand';\nvar _window$document, _window$navigator;\n/**\n * An SSR-friendly useLayoutEffect.\n *\n * React currently throws a warning when using useLayoutEffect on the server.\n * To get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect elsewhere.\n *\n * @see https://github.com/facebook/react/issues/14927\n */\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' && ((_window$document = window.document) != null && _window$document.createElement || ((_window$navigator = window.navigator) == null ? void 0 : _window$navigator.product) === 'ReactNative') ? React.useLayoutEffect : React.useEffect;\nfunction tunnel() {\n  var useStore = create(function (set) {\n    return {\n      current: new Array(),\n      version: 0,\n      set: set\n    };\n  });\n  return {\n    In: function In(_ref) {\n      var children = _ref.children;\n      var set = useStore(function (state) {\n        return state.set;\n      });\n      var version = useStore(function (state) {\n        return state.version;\n      });\n      /* When this component mounts, we increase the store's version number.\n      This will cause all existing rats to re-render (just like if the Out component\n      were mapping items to a list.) The re-rendering will cause the final \n      order of rendered components to match what the user is expecting. */\n\n      useIsomorphicLayoutEffect(function () {\n        set(function (state) {\n          return {\n            version: state.version + 1\n          };\n        });\n      }, []);\n      /* Any time the children _or_ the store's version number change, insert\n      the specified React children into the list of rats. */\n\n      useIsomorphicLayoutEffect(function () {\n        set(function (_ref2) {\n          var current = _ref2.current;\n          return {\n            current: [].concat(_toConsumableArray(current), [children])\n          };\n        });\n        return function () {\n          return set(function (_ref3) {\n            var current = _ref3.current;\n            return {\n              current: current.filter(function (c) {\n                return c !== children;\n              })\n            };\n          });\n        };\n      }, [children, version]);\n      return null;\n    },\n    Out: function Out() {\n      var current = useStore(function (state) {\n        return state.current;\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, current);\n    }\n  };\n}\nexport { tunnel as default };","map":{"version":3,"names":["React","create","_window$document","_window$navigator","useIsomorphicLayoutEffect","window","document","createElement","navigator","product","useLayoutEffect","useEffect","tunnel","useStore","set","current","Array","version","In","_ref","children","state","_ref2","concat","_toConsumableArray","_ref3","filter","c","Out","Fragment","default"],"sources":["D:/project/excalidraw-cn/node_modules/tunnel-rat/dist/index.js"],"sourcesContent":["import React from 'react';\nimport { create } from 'zustand';\n\nvar _window$document, _window$navigator;\n/**\n * An SSR-friendly useLayoutEffect.\n *\n * React currently throws a warning when using useLayoutEffect on the server.\n * To get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect elsewhere.\n *\n * @see https://github.com/facebook/react/issues/14927\n */\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && ((_window$document = window.document) != null && _window$document.createElement || ((_window$navigator = window.navigator) == null ? void 0 : _window$navigator.product) === 'ReactNative') ? React.useLayoutEffect : React.useEffect;\n\nfunction tunnel() {\n  const useStore = create(set => ({\n    current: new Array(),\n    version: 0,\n    set\n  }));\n  return {\n    In: ({\n      children\n    }) => {\n      const set = useStore(state => state.set);\n      const version = useStore(state => state.version);\n      /* When this component mounts, we increase the store's version number.\n      This will cause all existing rats to re-render (just like if the Out component\n      were mapping items to a list.) The re-rendering will cause the final \n      order of rendered components to match what the user is expecting. */\n\n      useIsomorphicLayoutEffect(() => {\n        set(state => ({\n          version: state.version + 1\n        }));\n      }, []);\n      /* Any time the children _or_ the store's version number change, insert\n      the specified React children into the list of rats. */\n\n      useIsomorphicLayoutEffect(() => {\n        set(({\n          current\n        }) => ({\n          current: [...current, children]\n        }));\n        return () => set(({\n          current\n        }) => ({\n          current: current.filter(c => c !== children)\n        }));\n      }, [children, version]);\n      return null;\n    },\n    Out: () => {\n      const current = useStore(state => state.current);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, current);\n    }\n  };\n}\n\nexport { tunnel as default };\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,SAAS;AAEhC,IAAIC,gBAAgB,EAAEC,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,yBAAyB,GAAG,OAAOC,MAAM,KAAK,WAAW,KAAK,CAACH,gBAAgB,GAAGG,MAAM,CAACC,QAAQ,KAAK,IAAI,IAAIJ,gBAAgB,CAACK,aAAa,IAAI,CAAC,CAACJ,iBAAiB,GAAGE,MAAM,CAACG,SAAS,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGL,iBAAiB,CAACM,OAAO,MAAM,aAAa,CAAC,GAAGT,KAAK,CAACU,eAAe,GAAGV,KAAK,CAACW,SAAS;AAExS,SAASC,MAAMA,CAAA,EAAG;EAChB,IAAMC,QAAQ,GAAGZ,MAAM,CAAC,UAAAa,GAAG;IAAA,OAAK;MAC9BC,OAAO,EAAE,IAAIC,KAAK,EAAE;MACpBC,OAAO,EAAE,CAAC;MACVH,GAAG,EAAHA;IACF,CAAC;EAAA,CAAC,CAAC;EACH,OAAO;IACLI,EAAE,EAAE,SAAAA,GAAAC,IAAA,EAEE;MAAA,IADJC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;MAER,IAAMN,GAAG,GAAGD,QAAQ,CAAC,UAAAQ,KAAK;QAAA,OAAIA,KAAK,CAACP,GAAG;MAAA,EAAC;MACxC,IAAMG,OAAO,GAAGJ,QAAQ,CAAC,UAAAQ,KAAK;QAAA,OAAIA,KAAK,CAACJ,OAAO;MAAA,EAAC;MAChD;AACN;AACA;AACA;;MAEMb,yBAAyB,CAAC,YAAM;QAC9BU,GAAG,CAAC,UAAAO,KAAK;UAAA,OAAK;YACZJ,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAG;UAC3B,CAAC;QAAA,CAAC,CAAC;MACL,CAAC,EAAE,EAAE,CAAC;MACN;AACN;;MAEMb,yBAAyB,CAAC,YAAM;QAC9BU,GAAG,CAAC,UAAAQ,KAAA;UAAA,IACFP,OAAO,GAAAO,KAAA,CAAPP,OAAO;UAAA,OACF;YACLA,OAAO,KAAAQ,MAAA,CAAAC,kBAAA,CAAMT,OAAO,IAAEK,QAAQ;UAChC,CAAC;QAAA,CAAC,CAAC;QACH,OAAO;UAAA,OAAMN,GAAG,CAAC,UAAAW,KAAA;YAAA,IACfV,OAAO,GAAAU,KAAA,CAAPV,OAAO;YAAA,OACF;cACLA,OAAO,EAAEA,OAAO,CAACW,MAAM,CAAC,UAAAC,CAAC;gBAAA,OAAIA,CAAC,KAAKP,QAAQ;cAAA;YAC7C,CAAC;UAAA,CAAC,CAAC;QAAA;MACL,CAAC,EAAE,CAACA,QAAQ,EAAEH,OAAO,CAAC,CAAC;MACvB,OAAO,IAAI;IACb,CAAC;IACDW,GAAG,EAAE,SAAAA,IAAA,EAAM;MACT,IAAMb,OAAO,GAAGF,QAAQ,CAAC,UAAAQ,KAAK;QAAA,OAAIA,KAAK,CAACN,OAAO;MAAA,EAAC;MAChD,OAAO,aAAaf,KAAK,CAACO,aAAa,CAACP,KAAK,CAAC6B,QAAQ,EAAE,IAAI,EAAEd,OAAO,CAAC;IACxE;EACF,CAAC;AACH;AAEA,SAASH,MAAM,IAAIkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}