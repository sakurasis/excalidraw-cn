{"ast":null,"code":"import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"name\",\"children\",\"onDock\",\"docked\",\"className\"];import React,{useEffect,useLayoutEffect,useRef,useState,forwardRef,useImperativeHandle,useCallback}from\"react\";import{Island}from\".././Island\";import{atom,useSetAtom}from\"jotai\";import{jotaiScope}from\"../../jotai\";import{SidebarPropsContext}from\"./common\";import{SidebarHeader}from\"./SidebarHeader\";import clsx from\"clsx\";import{useDevice,useExcalidrawSetAppState}from\"../App\";import{updateObject}from\"../../utils\";import{KEYS}from\"../../keys\";import{EVENT}from\"../../constants\";import{SidebarTrigger}from\"./SidebarTrigger\";import{SidebarTabTriggers}from\"./SidebarTabTriggers\";import{SidebarTabTrigger}from\"./SidebarTabTrigger\";import{SidebarTabs}from\"./SidebarTabs\";import{SidebarTab}from\"./SidebarTab\";import{useUIAppState}from\"../../context/ui-appState\";import{useOutsideClick}from\"../../hooks/useOutsideClick\";import\"./Sidebar.scss\";/**\n * Flags whether the currently rendered Sidebar is docked or not, for use\n * in upstream components that need to act on this (e.g. LayerUI to shift the\n * UI). We use an atom because of potential host app sidebars (for the default\n * sidebar we could just read from appState.defaultSidebarDockedPreference).\n *\n * Since we can only render one Sidebar at a time, we can use a simple flag.\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";export var isSidebarDockedAtom=atom(false);export var SidebarInner=/*#__PURE__*/forwardRef(function(_ref,ref){var name=_ref.name,children=_ref.children,onDock=_ref.onDock,docked=_ref.docked,className=_ref.className,rest=_objectWithoutProperties(_ref,_excluded);if(process.env.NODE_ENV===\"development\"&&onDock&&docked==null){console.warn(\"Sidebar: `docked` must be set when `onDock` is supplied for the sidebar to be user-dockable. To hide this message, either pass `docked` or remove `onDock`\");}var setAppState=useExcalidrawSetAppState();var setIsSidebarDockedAtom=useSetAtom(isSidebarDockedAtom,jotaiScope);useLayoutEffect(function(){setIsSidebarDockedAtom(!!docked);return function(){setIsSidebarDockedAtom(false);};},[setIsSidebarDockedAtom,docked]);var headerPropsRef=useRef({});headerPropsRef.current.onCloseRequest=function(){setAppState({openSidebar:null});};headerPropsRef.current.onDock=function(isDocked){return onDock===null||onDock===void 0?void 0:onDock(isDocked);};// renew the ref object if the following props change since we want to\n// rerender. We can't pass down as component props manually because\n// the <Sidebar.Header/> can be rendered upstream.\nheaderPropsRef.current=updateObject(headerPropsRef.current,{docked:docked,// explicit prop to rerender on update\nshouldRenderDockButton:!!onDock&&docked!=null});var islandRef=useRef(null);useImperativeHandle(ref,function(){return islandRef.current;});var device=useDevice();var closeLibrary=useCallback(function(){var isDialogOpen=!!document.querySelector(\".Dialog\");// Prevent closing if any dialog is open\nif(isDialogOpen){return;}setAppState({openSidebar:null});},[setAppState]);useOutsideClick(islandRef,useCallback(function(event){// If click on the library icon, do nothing so that LibraryButton\n// can toggle library menu\nif(event.target.closest(\".sidebar-trigger\")){return;}if(!docked||!device.canDeviceFitSidebar){closeLibrary();}},[closeLibrary,docked,device.canDeviceFitSidebar]));useEffect(function(){var handleKeyDown=function handleKeyDown(event){if(event.key===KEYS.ESCAPE&&(!docked||!device.canDeviceFitSidebar)){closeLibrary();}};document.addEventListener(EVENT.KEYDOWN,handleKeyDown);return function(){document.removeEventListener(EVENT.KEYDOWN,handleKeyDown);};},[closeLibrary,docked,device.canDeviceFitSidebar]);return/*#__PURE__*/_jsx(Island,_objectSpread(_objectSpread({},rest),{},{className:clsx(\"sidebar\",{\"sidebar--docked\":docked},className),ref:islandRef,children:/*#__PURE__*/_jsx(SidebarPropsContext.Provider,{value:headerPropsRef.current,children:children})}));});SidebarInner.displayName=\"SidebarInner\";export var Sidebar=Object.assign(/*#__PURE__*/forwardRef(function(props,ref){var _appState$openSidebar3;var appState=useUIAppState();var onStateChange=props.onStateChange;var refPrevOpenSidebar=useRef(appState.openSidebar);useEffect(function(){var _refPrevOpenSidebar$c,_appState$openSidebar,_refPrevOpenSidebar$c2,_refPrevOpenSidebar$c3;if(// closing sidebar\n(!appState.openSidebar&&(refPrevOpenSidebar===null||refPrevOpenSidebar===void 0?void 0:(_refPrevOpenSidebar$c=refPrevOpenSidebar.current)===null||_refPrevOpenSidebar$c===void 0?void 0:_refPrevOpenSidebar$c.name)===props.name||// opening current sidebar\n((_appState$openSidebar=appState.openSidebar)===null||_appState$openSidebar===void 0?void 0:_appState$openSidebar.name)===props.name&&(refPrevOpenSidebar===null||refPrevOpenSidebar===void 0?void 0:(_refPrevOpenSidebar$c2=refPrevOpenSidebar.current)===null||_refPrevOpenSidebar$c2===void 0?void 0:_refPrevOpenSidebar$c2.name)!==props.name||// switching tabs or switching to a different sidebar\n((_refPrevOpenSidebar$c3=refPrevOpenSidebar.current)===null||_refPrevOpenSidebar$c3===void 0?void 0:_refPrevOpenSidebar$c3.name)===props.name)&&appState.openSidebar!==refPrevOpenSidebar.current){var _appState$openSidebar2;onStateChange===null||onStateChange===void 0?void 0:onStateChange(((_appState$openSidebar2=appState.openSidebar)===null||_appState$openSidebar2===void 0?void 0:_appState$openSidebar2.name)!==props.name?null:appState.openSidebar);}refPrevOpenSidebar.current=appState.openSidebar;},[appState.openSidebar,onStateChange,props.name]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),mounted=_useState2[0],setMounted=_useState2[1];useLayoutEffect(function(){setMounted(true);return function(){return setMounted(false);};},[]);// We want to render in the next tick (hence `mounted` flag) so that it's\n// guaranteed to happen after unmount of the previous sidebar (in case the\n// previous sidebar is mounted after the next one). This is necessary to\n// prevent flicker of subcomponents that support fallbacks\n// (e.g. SidebarHeader). This is because we're using flags to determine\n// whether prefer the fallback component or not (otherwise both will render\n// initially), and the flag won't be reset in time if the unmount order\n// it not correct.\n//\n// Alternative, and more general solution would be to namespace the fallback\n// HoC so that state is not shared between subcomponents when the wrapping\n// component is of the same type (e.g. Sidebar -> SidebarHeader).\nvar shouldRender=mounted&&((_appState$openSidebar3=appState.openSidebar)===null||_appState$openSidebar3===void 0?void 0:_appState$openSidebar3.name)===props.name;if(!shouldRender){return null;}return/*#__PURE__*/_createElement(SidebarInner,_objectSpread(_objectSpread({},props),{},{ref:ref,key:props.name}));}),{Header:SidebarHeader,TabTriggers:SidebarTabTriggers,TabTrigger:SidebarTabTrigger,Tabs:SidebarTabs,Tab:SidebarTab,Trigger:SidebarTrigger});Sidebar.displayName=\"Sidebar\";","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useRef","useState","forwardRef","useImperativeHandle","useCallback","Island","atom","useSetAtom","jotaiScope","SidebarPropsContext","SidebarHeader","clsx","useDevice","useExcalidrawSetAppState","updateObject","KEYS","EVENT","SidebarTrigger","SidebarTabTriggers","SidebarTabTrigger","SidebarTabs","SidebarTab","useUIAppState","useOutsideClick","jsx","_jsx","createElement","_createElement","isSidebarDockedAtom","SidebarInner","_ref","ref","name","children","onDock","docked","className","rest","_objectWithoutProperties","_excluded","process","env","NODE_ENV","console","warn","setAppState","setIsSidebarDockedAtom","headerPropsRef","current","onCloseRequest","openSidebar","isDocked","shouldRenderDockButton","islandRef","device","closeLibrary","isDialogOpen","document","querySelector","event","target","closest","canDeviceFitSidebar","handleKeyDown","key","ESCAPE","addEventListener","KEYDOWN","removeEventListener","_objectSpread","Provider","value","displayName","Sidebar","Object","assign","props","_appState$openSidebar3","appState","onStateChange","refPrevOpenSidebar","_refPrevOpenSidebar$c","_appState$openSidebar","_refPrevOpenSidebar$c2","_refPrevOpenSidebar$c3","_appState$openSidebar2","_useState","_useState2","_slicedToArray","mounted","setMounted","shouldRender","Header","TabTriggers","TabTrigger","Tabs","Tab","Trigger"],"sources":["D:/project/excalidraw-cn/src/components/Sidebar/Sidebar.tsx"],"sourcesContent":["import React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useCallback,\n} from \"react\";\nimport { Island } from \".././Island\";\nimport { atom, useSetAtom } from \"jotai\";\nimport { jotaiScope } from \"../../jotai\";\nimport {\n  SidebarPropsContext,\n  SidebarProps,\n  SidebarPropsContextValue,\n} from \"./common\";\nimport { SidebarHeader } from \"./SidebarHeader\";\nimport clsx from \"clsx\";\nimport { useDevice, useExcalidrawSetAppState } from \"../App\";\nimport { updateObject } from \"../../utils\";\nimport { KEYS } from \"../../keys\";\nimport { EVENT } from \"../../constants\";\nimport { SidebarTrigger } from \"./SidebarTrigger\";\nimport { SidebarTabTriggers } from \"./SidebarTabTriggers\";\nimport { SidebarTabTrigger } from \"./SidebarTabTrigger\";\nimport { SidebarTabs } from \"./SidebarTabs\";\nimport { SidebarTab } from \"./SidebarTab\";\nimport { useUIAppState } from \"../../context/ui-appState\";\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\n\nimport \"./Sidebar.scss\";\n\n/**\n * Flags whether the currently rendered Sidebar is docked or not, for use\n * in upstream components that need to act on this (e.g. LayerUI to shift the\n * UI). We use an atom because of potential host app sidebars (for the default\n * sidebar we could just read from appState.defaultSidebarDockedPreference).\n *\n * Since we can only render one Sidebar at a time, we can use a simple flag.\n */\nexport const isSidebarDockedAtom = atom(false);\n\nexport const SidebarInner = forwardRef(\n  (\n    {\n      name,\n      children,\n      onDock,\n      docked,\n      className,\n      ...rest\n    }: SidebarProps & Omit<React.RefAttributes<HTMLDivElement>, \"onSelect\">,\n    ref: React.ForwardedRef<HTMLDivElement>,\n  ) => {\n    if (process.env.NODE_ENV === \"development\" && onDock && docked == null) {\n      console.warn(\n        \"Sidebar: `docked` must be set when `onDock` is supplied for the sidebar to be user-dockable. To hide this message, either pass `docked` or remove `onDock`\",\n      );\n    }\n\n    const setAppState = useExcalidrawSetAppState();\n\n    const setIsSidebarDockedAtom = useSetAtom(isSidebarDockedAtom, jotaiScope);\n\n    useLayoutEffect(() => {\n      setIsSidebarDockedAtom(!!docked);\n      return () => {\n        setIsSidebarDockedAtom(false);\n      };\n    }, [setIsSidebarDockedAtom, docked]);\n\n    const headerPropsRef = useRef<SidebarPropsContextValue>(\n      {} as SidebarPropsContextValue,\n    );\n    headerPropsRef.current.onCloseRequest = () => {\n      setAppState({ openSidebar: null });\n    };\n    headerPropsRef.current.onDock = (isDocked) => onDock?.(isDocked);\n    // renew the ref object if the following props change since we want to\n    // rerender. We can't pass down as component props manually because\n    // the <Sidebar.Header/> can be rendered upstream.\n    headerPropsRef.current = updateObject(headerPropsRef.current, {\n      docked,\n      // explicit prop to rerender on update\n      shouldRenderDockButton: !!onDock && docked != null,\n    });\n\n    const islandRef = useRef<HTMLDivElement>(null);\n\n    useImperativeHandle(ref, () => {\n      return islandRef.current!;\n    });\n\n    const device = useDevice();\n\n    const closeLibrary = useCallback(() => {\n      const isDialogOpen = !!document.querySelector(\".Dialog\");\n\n      // Prevent closing if any dialog is open\n      if (isDialogOpen) {\n        return;\n      }\n      setAppState({ openSidebar: null });\n    }, [setAppState]);\n\n    useOutsideClick(\n      islandRef,\n      useCallback(\n        (event) => {\n          // If click on the library icon, do nothing so that LibraryButton\n          // can toggle library menu\n          if ((event.target as Element).closest(\".sidebar-trigger\")) {\n            return;\n          }\n          if (!docked || !device.canDeviceFitSidebar) {\n            closeLibrary();\n          }\n        },\n        [closeLibrary, docked, device.canDeviceFitSidebar],\n      ),\n    );\n\n    useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === KEYS.ESCAPE &&\n          (!docked || !device.canDeviceFitSidebar)\n        ) {\n          closeLibrary();\n        }\n      };\n      document.addEventListener(EVENT.KEYDOWN, handleKeyDown);\n      return () => {\n        document.removeEventListener(EVENT.KEYDOWN, handleKeyDown);\n      };\n    }, [closeLibrary, docked, device.canDeviceFitSidebar]);\n\n    return (\n      <Island\n        {...rest}\n        className={clsx(\"sidebar\", { \"sidebar--docked\": docked }, className)}\n        ref={islandRef}\n      >\n        <SidebarPropsContext.Provider value={headerPropsRef.current}>\n          {children}\n        </SidebarPropsContext.Provider>\n      </Island>\n    );\n  },\n);\nSidebarInner.displayName = \"SidebarInner\";\n\nexport const Sidebar = Object.assign(\n  forwardRef((props: SidebarProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const appState = useUIAppState();\n\n    const { onStateChange } = props;\n\n    const refPrevOpenSidebar = useRef(appState.openSidebar);\n    useEffect(() => {\n      if (\n        // closing sidebar\n        ((!appState.openSidebar &&\n          refPrevOpenSidebar?.current?.name === props.name) ||\n          // opening current sidebar\n          (appState.openSidebar?.name === props.name &&\n            refPrevOpenSidebar?.current?.name !== props.name) ||\n          // switching tabs or switching to a different sidebar\n          refPrevOpenSidebar.current?.name === props.name) &&\n        appState.openSidebar !== refPrevOpenSidebar.current\n      ) {\n        onStateChange?.(\n          appState.openSidebar?.name !== props.name\n            ? null\n            : appState.openSidebar,\n        );\n      }\n      refPrevOpenSidebar.current = appState.openSidebar;\n    }, [appState.openSidebar, onStateChange, props.name]);\n\n    const [mounted, setMounted] = useState(false);\n    useLayoutEffect(() => {\n      setMounted(true);\n      return () => setMounted(false);\n    }, []);\n\n    // We want to render in the next tick (hence `mounted` flag) so that it's\n    // guaranteed to happen after unmount of the previous sidebar (in case the\n    // previous sidebar is mounted after the next one). This is necessary to\n    // prevent flicker of subcomponents that support fallbacks\n    // (e.g. SidebarHeader). This is because we're using flags to determine\n    // whether prefer the fallback component or not (otherwise both will render\n    // initially), and the flag won't be reset in time if the unmount order\n    // it not correct.\n    //\n    // Alternative, and more general solution would be to namespace the fallback\n    // HoC so that state is not shared between subcomponents when the wrapping\n    // component is of the same type (e.g. Sidebar -> SidebarHeader).\n    const shouldRender = mounted && appState.openSidebar?.name === props.name;\n\n    if (!shouldRender) {\n      return null;\n    }\n\n    return <SidebarInner {...props} ref={ref} key={props.name} />;\n  }),\n  {\n    Header: SidebarHeader,\n    TabTriggers: SidebarTabTriggers,\n    TabTrigger: SidebarTabTrigger,\n    Tabs: SidebarTabs,\n    Tab: SidebarTab,\n    Trigger: SidebarTrigger,\n  },\n);\nSidebar.displayName = \"Sidebar\";\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}