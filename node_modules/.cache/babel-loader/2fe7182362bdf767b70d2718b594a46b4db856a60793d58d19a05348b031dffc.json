{"ast":null,"code":"import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{LinearElementEditor}from\"../element/linearElementEditor\";import{isLinearElement}from\"../element/typeChecks\";import{register}from\"./register\";export var actionToggleLinearEditor=register({name:\"toggleLinearEditor\",trackEvent:{category:\"element\"},predicate:function predicate(elements,appState,_,app){var selectedElements=app.scene.getSelectedElements(appState);if(selectedElements.length===1&&isLinearElement(selectedElements[0])){return true;}return false;},perform:function perform(elements,appState,_,app){var _appState$editingLine;var selectedElement=app.scene.getSelectedElements({selectedElementIds:appState.selectedElementIds,includeBoundTextElement:true})[0];var editingLinearElement=((_appState$editingLine=appState.editingLinearElement)===null||_appState$editingLine===void 0?void 0:_appState$editingLine.elementId)===selectedElement.id?null:new LinearElementEditor(selectedElement,app.scene);return{appState:_objectSpread(_objectSpread({},appState),{},{editingLinearElement:editingLinearElement}),commitToHistory:false};},contextItemLabel:function contextItemLabel(elements,appState,app){var _appState$editingLine2;var selectedElement=app.scene.getSelectedElements({selectedElementIds:appState.selectedElementIds,includeBoundTextElement:true})[0];return((_appState$editingLine2=appState.editingLinearElement)===null||_appState$editingLine2===void 0?void 0:_appState$editingLine2.elementId)===selectedElement.id?\"labels.lineEditor.exit\":\"labels.lineEditor.edit\";}});","map":{"version":3,"names":["LinearElementEditor","isLinearElement","register","actionToggleLinearEditor","name","trackEvent","category","predicate","elements","appState","_","app","selectedElements","scene","getSelectedElements","length","perform","_appState$editingLine","selectedElement","selectedElementIds","includeBoundTextElement","editingLinearElement","elementId","id","_objectSpread","commitToHistory","contextItemLabel","_appState$editingLine2"],"sources":["D:/project/excalidraw-cn/src/actions/actionLinearEditor.ts"],"sourcesContent":["import { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { ExcalidrawLinearElement } from \"../element/types\";\nimport { register } from \"./register\";\n\nexport const actionToggleLinearEditor = register({\n  name: \"toggleLinearEditor\",\n  trackEvent: {\n    category: \"element\",\n  },\n  predicate: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n    if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n      return true;\n    }\n    return false;\n  },\n  perform(elements, appState, _, app) {\n    const selectedElement = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n    })[0] as ExcalidrawLinearElement;\n\n    const editingLinearElement =\n      appState.editingLinearElement?.elementId === selectedElement.id\n        ? null\n        : new LinearElementEditor(selectedElement, app.scene);\n    return {\n      appState: {\n        ...appState,\n        editingLinearElement,\n      },\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: (elements, appState, app) => {\n    const selectedElement = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n    })[0] as ExcalidrawLinearElement;\n    return appState.editingLinearElement?.elementId === selectedElement.id\n      ? \"labels.lineEditor.exit\"\n      : \"labels.lineEditor.edit\";\n  },\n});\n"],"mappings":"6GAAA,OAASA,mBAAmB,KAAQ,gCAAgC,CACpE,OAASC,eAAe,KAAQ,uBAAuB,CAEvD,OAASC,QAAQ,KAAQ,YAAY,CAErC,MAAO,IAAM,CAAAC,wBAAwB,CAAGD,QAAQ,CAAC,CAC/CE,IAAI,CAAE,oBAAoB,CAC1BC,UAAU,CAAE,CACVC,QAAQ,CAAE,SACZ,CAAC,CACDC,SAAS,CAAE,SAAAA,UAACC,QAAQ,CAAEC,QAAQ,CAAEC,CAAC,CAAEC,GAAG,CAAK,CACzC,GAAM,CAAAC,gBAAgB,CAAGD,GAAG,CAACE,KAAK,CAACC,mBAAmB,CAACL,QAAQ,CAAC,CAChE,GAAIG,gBAAgB,CAACG,MAAM,GAAK,CAAC,EAAId,eAAe,CAACW,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAE,CACzE,MAAO,KAAI,CACb,CACA,MAAO,MAAK,CACd,CAAC,CACDI,OAAO,UAAAA,QAACR,QAAQ,CAAEC,QAAQ,CAAEC,CAAC,CAAEC,GAAG,CAAE,KAAAM,qBAAA,CAClC,GAAM,CAAAC,eAAe,CAAGP,GAAG,CAACE,KAAK,CAACC,mBAAmB,CAAC,CACpDK,kBAAkB,CAAEV,QAAQ,CAACU,kBAAkB,CAC/CC,uBAAuB,CAAE,IAC3B,CAAC,CAAC,CAAC,CAAC,CAA4B,CAEhC,GAAM,CAAAC,oBAAoB,CACxB,EAAAJ,qBAAA,CAAAR,QAAQ,CAACY,oBAAoB,UAAAJ,qBAAA,iBAA7BA,qBAAA,CAA+BK,SAAS,IAAKJ,eAAe,CAACK,EAAE,CAC3D,IAAI,CACJ,GAAI,CAAAvB,mBAAmB,CAACkB,eAAe,CAAEP,GAAG,CAACE,KAAK,CAAC,CACzD,MAAO,CACLJ,QAAQ,CAAAe,aAAA,CAAAA,aAAA,IACHf,QAAQ,MACXY,oBAAoB,CAApBA,oBAAoB,EACrB,CACDI,eAAe,CAAE,KACnB,CAAC,CACH,CAAC,CACDC,gBAAgB,CAAE,SAAAA,iBAAClB,QAAQ,CAAEC,QAAQ,CAAEE,GAAG,CAAK,KAAAgB,sBAAA,CAC7C,GAAM,CAAAT,eAAe,CAAGP,GAAG,CAACE,KAAK,CAACC,mBAAmB,CAAC,CACpDK,kBAAkB,CAAEV,QAAQ,CAACU,kBAAkB,CAC/CC,uBAAuB,CAAE,IAC3B,CAAC,CAAC,CAAC,CAAC,CAA4B,CAChC,MAAO,EAAAO,sBAAA,CAAAlB,QAAQ,CAACY,oBAAoB,UAAAM,sBAAA,iBAA7BA,sBAAA,CAA+BL,SAAS,IAAKJ,eAAe,CAACK,EAAE,CAClE,wBAAwB,CACxB,wBAAwB,CAC9B,CACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}