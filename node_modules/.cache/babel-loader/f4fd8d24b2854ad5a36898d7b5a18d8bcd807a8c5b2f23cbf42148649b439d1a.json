{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */function () {\n  function UserAgent() {\n    /**\n     * @inheritDoc\n     */\n    this.name = UserAgent.id;\n  }\n  /**\n   * @inheritDoc\n   */\n  UserAgent.prototype.setupOnce = function () {\n    addGlobalEventProcessor(function (event) {\n      var _a, _b, _c;\n      if (getCurrentHub().getIntegration(UserAgent)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n        // grab as much info as exists and add it to the event\n        var url = ((_a = event.request) === null || _a === void 0 ? void 0 : _a.url) || ((_b = global.location) === null || _b === void 0 ? void 0 : _b.href);\n        var referrer = (global.document || {}).referrer;\n        var userAgent = (global.navigator || {}).userAgent;\n        var headers = __assign(__assign(__assign({}, (_c = event.request) === null || _c === void 0 ? void 0 : _c.headers), referrer && {\n          Referer: referrer\n        }), userAgent && {\n          'User-Agent': userAgent\n        });\n        var request = __assign(__assign({}, url && {\n          url: url\n        }), {\n          headers: headers\n        });\n        return __assign(__assign({}, event), {\n          request: request\n        });\n      }\n      return event;\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  UserAgent.id = 'UserAgent';\n  return UserAgent;\n}();\nexport { UserAgent };","map":{"version":3,"names":["addGlobalEventProcessor","getCurrentHub","getGlobalObject","global","UserAgent","name","id","prototype","setupOnce","event","getIntegration","navigator","location","document","url","_a","request","_b","href","referrer","userAgent","headers","__assign","_c","Referer"],"sources":["D:\\project\\excalidraw-cn\\node_modules\\@sentry\\browser\\src\\integrations\\useragent.ts"],"sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, Integration } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\n\n/** UserAgent */\nexport class UserAgent implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'UserAgent';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = UserAgent.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(UserAgent)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = event.request?.url || global.location?.href;\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        const headers = {\n          ...event.request?.headers,\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,uBAAuB,EAAEC,aAAa,QAAQ,cAAc;AAErE,SAASC,eAAe,QAAQ,eAAe;AAE/C,IAAMC,MAAM,GAAGD,eAAe,EAAU;AAExC;AACA,IAAAE,SAAA;EAAA,SAAAA,UAAA;IAME;;;IAGO,KAAAC,IAAI,GAAWD,SAAS,CAACE,EAAE;EA8BpC;EA5BE;;;EAGOF,SAAA,CAAAG,SAAA,CAAAC,SAAS,GAAhB;IACER,uBAAuB,CAAC,UAACS,KAAY;;MACnC,IAAIR,aAAa,EAAE,CAACS,cAAc,CAACN,SAAS,CAAC,EAAE;QAC7C;QACA,IAAI,CAACD,MAAM,CAACQ,SAAS,IAAI,CAACR,MAAM,CAACS,QAAQ,IAAI,CAACT,MAAM,CAACU,QAAQ,EAAE;UAC7D,OAAOJ,KAAK;;QAGd;QACA,IAAMK,GAAG,GAAG,EAAAC,EAAA,GAAAN,KAAK,CAACO,OAAO,cAAAD,EAAA,uBAAAA,EAAA,CAAED,GAAG,OAAAG,EAAA,GAAId,MAAM,CAACS,QAAQ,cAAAK,EAAA,uBAAAA,EAAA,CAAEC,IAAI;QAC/C,IAAAC,QAAA,IAAAhB,MAAA,CAAAU,QAAA,QAAAM,QAAQ;QACR,IAAAC,SAAA,IAAAjB,MAAA,CAAAQ,SAAA,QAAAS,SAAS;QAEjB,IAAMC,OAAO,GAAAC,QAAA,CAAAA,QAAA,CAAAA,QAAA,MAAAC,EAAA,GACRd,KAAK,CAACO,OAAO,cAAAO,EAAA,uBAAAA,EAAA,CAAEF,OAAO,GACrBF,QAAQ,IAAI;UAAEK,OAAO,EAAEL;QAAQ,CAAE,CAAC,EAClCC,SAAS,IAAI;UAAE,YAAY,EAAEA;QAAS,CAAE,CAC7C;QACD,IAAMJ,OAAO,GAAAM,QAAA,CAAAA,QAAA,KAASR,GAAG,IAAI;UAAEA,GAAG,EAAAA;QAAA,CAAE,CAAC;UAAEO,OAAO,EAAAA;QAAA,EAAE;QAEhD,OAAAC,QAAA,CAAAA,QAAA,KAAYb,KAAK;UAAEO,OAAO,EAAAA;QAAA;;MAE5B,OAAOP,KAAK;IACd,CAAC,CAAC;EACJ,CAAC;EArCD;;;EAGcL,SAAA,CAAAE,EAAE,GAAW,WAAW;EAmCxC,OAAAF,SAAC;CAAA,EAvCD;SAAaA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}