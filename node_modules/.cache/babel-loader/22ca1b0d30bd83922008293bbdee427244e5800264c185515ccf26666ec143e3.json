{"ast":null,"code":"import _toConsumableArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{isTextElement,isLinearElement,isFreeDrawElement,isInitializedImageElement,isArrowElement,hasBoundTextElement}from\"../element/typeChecks\";import{getDiamondPoints,getElementAbsoluteCoords,getArrowheadPoints}from\"../element/bounds\";import{distance,getFontString,getFontFamilyString,isRTL}from\"../utils\";import{getCornerRadius,isPathALoop,isRightAngle}from\"../math\";import rough from\"roughjs/bin/rough\";import{getDefaultAppState}from\"../appState\";import{BOUND_TEXT_PADDING,FRAME_STYLE,MAX_DECIMALS_FOR_SVG_EXPORT,MIME_TYPES,SVG_NS}from\"../constants\";import{getStroke}from\"perfect-freehand\";import{getBoundTextElement,getContainerCoords,getContainerElement,getLineHeightInPx,getBoundTextMaxHeight,getBoundTextMaxWidth}from\"../element/textElement\";import{LinearElementEditor}from\"../element/linearElementEditor\";import{getContainingFrame}from\"../frame\";import{normalizeLink}from\"../data/url\";// using a stronger invert (100% vs our regular 93%) and saturate\n// as a temp hack to make images in dark theme look closer to original\n// color scheme (it's still not quite there and the colors look slightly\n// desatured, alas...)\nvar IMAGE_INVERT_FILTER=\"invert(100%) hue-rotate(180deg) saturate(1.25)\";var defaultAppState=getDefaultAppState();var isPendingImageElement=function isPendingImageElement(element,renderConfig){return isInitializedImageElement(element)&&!renderConfig.imageCache.has(element.fileId);};var shouldResetImageFilter=function shouldResetImageFilter(element,renderConfig){var _renderConfig$imageCa;return renderConfig.theme===\"dark\"&&isInitializedImageElement(element)&&!isPendingImageElement(element,renderConfig)&&((_renderConfig$imageCa=renderConfig.imageCache.get(element.fileId))===null||_renderConfig$imageCa===void 0?void 0:_renderConfig$imageCa.mimeType)!==MIME_TYPES.svg;};var getDashArrayDashed=function getDashArrayDashed(strokeWidth){return[8,8+strokeWidth];};var getDashArrayDotted=function getDashArrayDotted(strokeWidth){return[1.5,6+strokeWidth];};var getCanvasPadding=function getCanvasPadding(element){return element.type===\"freedraw\"?element.strokeWidth*12:20;};var cappedElementCanvasSize=function cappedElementCanvasSize(element,zoom){// these limits are ballpark, they depend on specific browsers and device.\n// We've chosen lower limits to be safe. We might want to change these limits\n// based on browser/device type, if we get reports of low quality rendering\n// on zoom.\n//\n// ~ safari mobile canvas area limit\nvar AREA_LIMIT=16777216;// ~ safari width/height limit based on developer.mozilla.org.\nvar WIDTH_HEIGHT_LIMIT=32767;var padding=getCanvasPadding(element);var _getElementAbsoluteCo=getElementAbsoluteCoords(element),_getElementAbsoluteCo2=_slicedToArray(_getElementAbsoluteCo,4),x1=_getElementAbsoluteCo2[0],y1=_getElementAbsoluteCo2[1],x2=_getElementAbsoluteCo2[2],y2=_getElementAbsoluteCo2[3];var elementWidth=isLinearElement(element)||isFreeDrawElement(element)?distance(x1,x2):element.width;var elementHeight=isLinearElement(element)||isFreeDrawElement(element)?distance(y1,y2):element.height;var width=elementWidth*window.devicePixelRatio+padding*2;var height=elementHeight*window.devicePixelRatio+padding*2;var scale=zoom.value;// rescale to ensure width and height is within limits\nif(width*scale>WIDTH_HEIGHT_LIMIT||height*scale>WIDTH_HEIGHT_LIMIT){scale=Math.min(WIDTH_HEIGHT_LIMIT/width,WIDTH_HEIGHT_LIMIT/height);}// rescale to ensure canvas area is within limits\nif(width*height*scale*scale>AREA_LIMIT){scale=Math.sqrt(AREA_LIMIT/(width*height));}width=Math.floor(width*scale);height=Math.floor(height*scale);return{width:width,height:height,scale:scale};};var generateElementCanvas=function generateElementCanvas(element,zoom,renderConfig){var _getBoundTextElement,_getContainingFrame;var canvas=document.createElement(\"canvas\");var context=canvas.getContext(\"2d\");var padding=getCanvasPadding(element);var _cappedElementCanvasS=cappedElementCanvasSize(element,zoom),width=_cappedElementCanvasS.width,height=_cappedElementCanvasS.height,scale=_cappedElementCanvasS.scale;canvas.width=width;canvas.height=height;var canvasOffsetX=0;var canvasOffsetY=0;if(isLinearElement(element)||isFreeDrawElement(element)){var _getElementAbsoluteCo3=getElementAbsoluteCoords(element),_getElementAbsoluteCo4=_slicedToArray(_getElementAbsoluteCo3,2),x1=_getElementAbsoluteCo4[0],y1=_getElementAbsoluteCo4[1];canvasOffsetX=element.x>x1?distance(element.x,x1)*window.devicePixelRatio*scale:0;canvasOffsetY=element.y>y1?distance(element.y,y1)*window.devicePixelRatio*scale:0;context.translate(canvasOffsetX,canvasOffsetY);}context.save();context.translate(padding*scale,padding*scale);context.scale(window.devicePixelRatio*scale,window.devicePixelRatio*scale);var rc=rough.canvas(canvas);// in dark theme, revert the image color filter\nif(shouldResetImageFilter(element,renderConfig)){context.filter=IMAGE_INVERT_FILTER;}drawElementOnCanvas(element,rc,context,renderConfig);context.restore();return{element:element,canvas:canvas,theme:renderConfig.theme,scale:scale,zoomValue:zoom.value,canvasOffsetX:canvasOffsetX,canvasOffsetY:canvasOffsetY,boundTextElementVersion:((_getBoundTextElement=getBoundTextElement(element))===null||_getBoundTextElement===void 0?void 0:_getBoundTextElement.version)||null,containingFrameOpacity:((_getContainingFrame=getContainingFrame(element))===null||_getContainingFrame===void 0?void 0:_getContainingFrame.opacity)||100};};export var DEFAULT_LINK_SIZE=14;var IMAGE_PLACEHOLDER_IMG=document.createElement(\"img\");IMAGE_PLACEHOLDER_IMG.src=\"data:\".concat(MIME_TYPES.svg,\",\").concat(encodeURIComponent(\"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" data-prefix=\\\"fas\\\" data-icon=\\\"image\\\" class=\\\"svg-inline--fa fa-image fa-w-16\\\" role=\\\"img\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path fill=\\\"#888\\\" d=\\\"M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48z\\\"></path></svg>\"));var IMAGE_ERROR_PLACEHOLDER_IMG=document.createElement(\"img\");IMAGE_ERROR_PLACEHOLDER_IMG.src=\"data:\".concat(MIME_TYPES.svg,\",\").concat(encodeURIComponent(\"<svg viewBox=\\\"0 0 668 668\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xml:space=\\\"preserve\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2\\\"><path d=\\\"M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48ZM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56ZM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48Z\\\" style=\\\"fill:#888;fill-rule:nonzero\\\" transform=\\\"matrix(.81709 0 0 .81709 124.825 145.825)\\\"/><path d=\\\"M256 8C119.034 8 8 119.033 8 256c0 136.967 111.034 248 248 248s248-111.034 248-248S392.967 8 256 8Zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676ZM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676Z\\\" style=\\\"fill:#888;fill-rule:nonzero\\\" transform=\\\"matrix(.30366 0 0 .30366 506.822 60.065)\\\"/></svg>\"));var drawImagePlaceholder=function drawImagePlaceholder(element,context,zoomValue){context.fillStyle=\"#E7E7E7\";context.fillRect(0,0,element.width,element.height);var imageMinWidthOrHeight=Math.min(element.width,element.height);var size=Math.min(imageMinWidthOrHeight,Math.min(imageMinWidthOrHeight*0.4,100));context.drawImage(element.status===\"error\"?IMAGE_ERROR_PLACEHOLDER_IMG:IMAGE_PLACEHOLDER_IMG,element.width/2-size/2,element.height/2-size/2,size,size);};var drawElementOnCanvas=function drawElementOnCanvas(element,rc,context,renderConfig){var _getContainingFrame$o,_getContainingFrame2;context.globalAlpha=((_getContainingFrame$o=(_getContainingFrame2=getContainingFrame(element))===null||_getContainingFrame2===void 0?void 0:_getContainingFrame2.opacity)!==null&&_getContainingFrame$o!==void 0?_getContainingFrame$o:100)*element.opacity/10000;switch(element.type){case\"rectangle\":case\"diamond\":case\"ellipse\":{context.lineJoin=\"round\";context.lineCap=\"round\";rc.draw(getShapeForElement(element));break;}case\"arrow\":case\"line\":{context.lineJoin=\"round\";context.lineCap=\"round\";getShapeForElement(element).forEach(function(shape){rc.draw(shape);});break;}case\"freedraw\":{// Draw directly to canvas\ncontext.save();context.fillStyle=element.strokeColor;var path=getFreeDrawPath2D(element);var fillShape=getShapeForElement(element);if(fillShape){rc.draw(fillShape);}context.fillStyle=element.strokeColor;context.fill(path);context.restore();break;}case\"image\":{var _renderConfig$imageCa2;var img=isInitializedImageElement(element)?(_renderConfig$imageCa2=renderConfig.imageCache.get(element.fileId))===null||_renderConfig$imageCa2===void 0?void 0:_renderConfig$imageCa2.image:undefined;if(img!=null&&!(img instanceof Promise)){context.drawImage(img,0/* hardcoded for the selection box*/,0,element.width,element.height);}else{drawImagePlaceholder(element,context,renderConfig.zoom.value);}break;}default:{if(isTextElement(element)){var rtl=isRTL(element.text);var shouldTemporarilyAttach=rtl&&!context.canvas.isConnected;if(shouldTemporarilyAttach){// to correctly render RTL text mixed with LTR, we have to append it\n// to the DOM\ndocument.body.appendChild(context.canvas);}context.canvas.setAttribute(\"dir\",rtl?\"rtl\":\"ltr\");context.save();context.font=getFontString(element);context.fillStyle=element.strokeColor;context.textAlign=element.textAlign;// Canvas does not support multiline text by default\nvar lines=element.text.replace(/\\r\\n?/g,\"\\n\").split(\"\\n\");var horizontalOffset=element.textAlign===\"center\"?element.width/2:element.textAlign===\"right\"?element.width:0;var lineHeightPx=getLineHeightInPx(element.fontSize,element.lineHeight);var verticalOffset=element.height-element.baseline;for(var index=0;index<lines.length;index++){context.fillText(lines[index],horizontalOffset,(index+1)*lineHeightPx-verticalOffset);}context.restore();if(shouldTemporarilyAttach){context.canvas.remove();}}else{throw new Error(\"Unimplemented type \".concat(element.type));}}}context.globalAlpha=1;};var elementWithCanvasCache=new WeakMap();var shapeCache=new WeakMap();export var getShapeForElement=function getShapeForElement(element){return shapeCache.get(element);};export var setShapeForElement=function setShapeForElement(element,shape){return shapeCache.set(element,shape);};export var invalidateShapeForElement=function invalidateShapeForElement(element){return shapeCache.delete(element);};export var generateRoughOptions=function generateRoughOptions(element){var continuousPath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var options={seed:element.seed,strokeLineDash:element.strokeStyle===\"dashed\"?getDashArrayDashed(element.strokeWidth):element.strokeStyle===\"dotted\"?getDashArrayDotted(element.strokeWidth):undefined,// for non-solid strokes, disable multiStroke because it tends to make\n// dashes/dots overlay each other\ndisableMultiStroke:element.strokeStyle!==\"solid\",// for non-solid strokes, increase the width a bit to make it visually\n// similar to solid strokes, because we're also disabling multiStroke\nstrokeWidth:element.strokeStyle!==\"solid\"?element.strokeWidth+0.5:element.strokeWidth,// when increasing strokeWidth, we must explicitly set fillWeight and\n// hachureGap because if not specified, roughjs uses strokeWidth to\n// calculate them (and we don't want the fills to be modified)\nfillWeight:element.strokeWidth/2,hachureGap:element.strokeWidth*4,roughness:element.roughness,stroke:element.strokeColor,preserveVertices:continuousPath};switch(element.type){case\"rectangle\":case\"diamond\":case\"ellipse\":{options.fillStyle=element.fillStyle;options.fill=element.backgroundColor===\"transparent\"?undefined:element.backgroundColor;if(element.type===\"ellipse\"){options.curveFitting=1;}return options;}case\"line\":case\"freedraw\":{if(isPathALoop(element.points)){options.fillStyle=element.fillStyle;options.fill=element.backgroundColor===\"transparent\"?undefined:element.backgroundColor;}return options;}case\"arrow\":return options;default:{throw new Error(\"Unimplemented type \".concat(element.type));}}};/**\n * Generates the element's shape and puts it into the cache.\n * @param element\n * @param generator\n */var generateElementShape=function generateElementShape(element,generator){var shape=shapeCache.get(element);// `null` indicates no rc shape applicable for this element type\n// (= do not generate anything)\nif(shape===undefined){elementWithCanvasCache.delete(element);switch(element.type){case\"rectangle\":{if(element.roundness){var w=element.width;var h=element.height;var r=getCornerRadius(Math.min(w,h),element);shape=generator.path(\"M \".concat(r,\" 0 L \").concat(w-r,\" 0 Q \").concat(w,\" 0, \").concat(w,\" \").concat(r,\" L \").concat(w,\" \").concat(h-r,\" Q \").concat(w,\" \").concat(h,\", \").concat(w-r,\" \").concat(h,\" L \").concat(r,\" \").concat(h,\" Q 0 \").concat(h,\", 0 \").concat(h-r,\" L 0 \").concat(r,\" Q 0 0, \").concat(r,\" 0\"),generateRoughOptions(element,true));}else{shape=generator.rectangle(0,0,element.width,element.height,generateRoughOptions(element));}setShapeForElement(element,shape);break;}case\"diamond\":{var _getDiamondPoints=getDiamondPoints(element),_getDiamondPoints2=_slicedToArray(_getDiamondPoints,8),topX=_getDiamondPoints2[0],topY=_getDiamondPoints2[1],rightX=_getDiamondPoints2[2],rightY=_getDiamondPoints2[3],bottomX=_getDiamondPoints2[4],bottomY=_getDiamondPoints2[5],leftX=_getDiamondPoints2[6],leftY=_getDiamondPoints2[7];if(element.roundness){var verticalRadius=getCornerRadius(Math.abs(topX-leftX),element);var horizontalRadius=getCornerRadius(Math.abs(rightY-topY),element);shape=generator.path(\"M \".concat(topX+verticalRadius,\" \").concat(topY+horizontalRadius,\" L \").concat(rightX-verticalRadius,\" \").concat(rightY-horizontalRadius,\"\\n            C \").concat(rightX,\" \").concat(rightY,\", \").concat(rightX,\" \").concat(rightY,\", \").concat(rightX-verticalRadius,\" \").concat(rightY+horizontalRadius,\"\\n            L \").concat(bottomX+verticalRadius,\" \").concat(bottomY-horizontalRadius,\"\\n            C \").concat(bottomX,\" \").concat(bottomY,\", \").concat(bottomX,\" \").concat(bottomY,\", \").concat(bottomX-verticalRadius,\" \").concat(bottomY-horizontalRadius,\"\\n            L \").concat(leftX+verticalRadius,\" \").concat(leftY+horizontalRadius,\"\\n            C \").concat(leftX,\" \").concat(leftY,\", \").concat(leftX,\" \").concat(leftY,\", \").concat(leftX+verticalRadius,\" \").concat(leftY-horizontalRadius,\"\\n            L \").concat(topX-verticalRadius,\" \").concat(topY+horizontalRadius,\"\\n            C \").concat(topX,\" \").concat(topY,\", \").concat(topX,\" \").concat(topY,\", \").concat(topX+verticalRadius,\" \").concat(topY+horizontalRadius),generateRoughOptions(element,true));}else{shape=generator.polygon([[topX,topY],[rightX,rightY],[bottomX,bottomY],[leftX,leftY]],generateRoughOptions(element));}setShapeForElement(element,shape);break;}case\"ellipse\":shape=generator.ellipse(element.width/2,element.height/2,element.width,element.height,generateRoughOptions(element));setShapeForElement(element,shape);break;case\"line\":case\"arrow\":{var options=generateRoughOptions(element);// points array can be empty in the beginning, so it is important to add\n// initial position to it\nvar points=element.points.length?element.points:[[0,0]];// curve is always the first element\n// this simplifies finding the curve for an element\nif(!element.roundness){if(options.fill){shape=[generator.polygon(points,options)];}else{shape=[generator.linearPath(points,options)];}}else{shape=[generator.curve(points,options)];}// add lines only in arrow\nif(element.type===\"arrow\"){var _element$startArrowhe=element.startArrowhead,startArrowhead=_element$startArrowhe===void 0?null:_element$startArrowhe,_element$endArrowhead=element.endArrowhead,endArrowhead=_element$endArrowhead===void 0?\"arrow\":_element$endArrowhead;var getArrowheadShapes=function getArrowheadShapes(element,shape,position,arrowhead){var arrowheadPoints=getArrowheadPoints(element,shape,position,arrowhead);if(arrowheadPoints===null){return[];}// Other arrowheads here...\nif(arrowhead===\"dot\"){var _arrowheadPoints=_slicedToArray(arrowheadPoints,3),x=_arrowheadPoints[0],y=_arrowheadPoints[1],_r=_arrowheadPoints[2];return[generator.circle(x,y,_r,_objectSpread(_objectSpread({},options),{},{fill:element.strokeColor,fillStyle:\"solid\",stroke:\"none\"}))];}if(arrowhead===\"triangle\"){var _arrowheadPoints2=_slicedToArray(arrowheadPoints,6),_x=_arrowheadPoints2[0],_y=_arrowheadPoints2[1],_x2=_arrowheadPoints2[2],_y2=_arrowheadPoints2[3],_x3=_arrowheadPoints2[4],_y3=_arrowheadPoints2[5];// always use solid stroke for triangle arrowhead\ndelete options.strokeLineDash;return[generator.polygon([[_x,_y],[_x2,_y2],[_x3,_y3],[_x,_y]],_objectSpread(_objectSpread({},options),{},{fill:element.strokeColor,fillStyle:\"solid\"}))];}// Arrow arrowheads\nvar _arrowheadPoints3=_slicedToArray(arrowheadPoints,6),x2=_arrowheadPoints3[0],y2=_arrowheadPoints3[1],x3=_arrowheadPoints3[2],y3=_arrowheadPoints3[3],x4=_arrowheadPoints3[4],y4=_arrowheadPoints3[5];if(element.strokeStyle===\"dotted\"){// for dotted arrows caps, reduce gap to make it more legible\nvar dash=getDashArrayDotted(element.strokeWidth-1);options.strokeLineDash=[dash[0],dash[1]-1];}else{// for solid/dashed, keep solid arrow cap\ndelete options.strokeLineDash;}return[generator.line(x3,y3,x2,y2,options),generator.line(x4,y4,x2,y2,options)];};if(startArrowhead!==null){var _shape;var shapes=getArrowheadShapes(element,shape,\"start\",startArrowhead);(_shape=shape).push.apply(_shape,_toConsumableArray(shapes));}if(endArrowhead!==null){var _shape2;if(endArrowhead===undefined){// Hey, we have an old arrow here!\n}var _shapes=getArrowheadShapes(element,shape,\"end\",endArrowhead);(_shape2=shape).push.apply(_shape2,_toConsumableArray(_shapes));}}setShapeForElement(element,shape);break;}case\"freedraw\":{generateFreeDrawShape(element);if(isPathALoop(element.points)){// generate rough polygon to fill freedraw shape\nshape=generator.polygon(element.points,_objectSpread(_objectSpread({},generateRoughOptions(element)),{},{stroke:\"none\"}));}else{shape=null;}setShapeForElement(element,shape);break;}case\"text\":case\"image\":{// just to ensure we don't regenerate element.canvas on rerenders\nsetShapeForElement(element,null);break;}}}};var generateElementWithCanvas=function generateElementWithCanvas(element,renderConfig){var _getBoundTextElement2,_getContainingFrame3;var zoom=renderConfig?renderConfig.zoom:defaultAppState.zoom;var prevElementWithCanvas=elementWithCanvasCache.get(element);var shouldRegenerateBecauseZoom=prevElementWithCanvas&&prevElementWithCanvas.zoomValue!==zoom.value&&!(renderConfig!==null&&renderConfig!==void 0&&renderConfig.shouldCacheIgnoreZoom);var boundTextElementVersion=((_getBoundTextElement2=getBoundTextElement(element))===null||_getBoundTextElement2===void 0?void 0:_getBoundTextElement2.version)||null;var containingFrameOpacity=((_getContainingFrame3=getContainingFrame(element))===null||_getContainingFrame3===void 0?void 0:_getContainingFrame3.opacity)||100;if(!prevElementWithCanvas||shouldRegenerateBecauseZoom||prevElementWithCanvas.theme!==renderConfig.theme||prevElementWithCanvas.boundTextElementVersion!==boundTextElementVersion||prevElementWithCanvas.containingFrameOpacity!==containingFrameOpacity){var elementWithCanvas=generateElementCanvas(element,zoom,renderConfig);elementWithCanvasCache.set(element,elementWithCanvas);return elementWithCanvas;}return prevElementWithCanvas;};var drawElementFromCanvas=function drawElementFromCanvas(elementWithCanvas,rc,context,renderConfig){var element=elementWithCanvas.element;var padding=getCanvasPadding(element);var zoom=elementWithCanvas.scale;var _getElementAbsoluteCo5=getElementAbsoluteCoords(element),_getElementAbsoluteCo6=_slicedToArray(_getElementAbsoluteCo5,4),x1=_getElementAbsoluteCo6[0],y1=_getElementAbsoluteCo6[1],x2=_getElementAbsoluteCo6[2],y2=_getElementAbsoluteCo6[3];// Free draw elements will otherwise \"shuffle\" as the min x and y change\nif(isFreeDrawElement(element)){x1=Math.floor(x1);x2=Math.ceil(x2);y1=Math.floor(y1);y2=Math.ceil(y2);}var cx=((x1+x2)/2+renderConfig.scrollX)*window.devicePixelRatio;var cy=((y1+y2)/2+renderConfig.scrollY)*window.devicePixelRatio;context.save();context.scale(1/window.devicePixelRatio,1/window.devicePixelRatio);var boundTextElement=getBoundTextElement(element);if(isArrowElement(element)&&boundTextElement){var tempCanvas=document.createElement(\"canvas\");var tempCanvasContext=tempCanvas.getContext(\"2d\");// Take max dimensions of arrow canvas so that when canvas is rotated\n// the arrow doesn't get clipped\nvar maxDim=Math.max(distance(x1,x2),distance(y1,y2));tempCanvas.width=maxDim*window.devicePixelRatio*zoom+padding*elementWithCanvas.scale*10;tempCanvas.height=maxDim*window.devicePixelRatio*zoom+padding*elementWithCanvas.scale*10;var offsetX=(tempCanvas.width-elementWithCanvas.canvas.width)/2;var offsetY=(tempCanvas.height-elementWithCanvas.canvas.height)/2;tempCanvasContext.translate(tempCanvas.width/2,tempCanvas.height/2);tempCanvasContext.rotate(element.angle);tempCanvasContext.drawImage(elementWithCanvas.canvas,-elementWithCanvas.canvas.width/2,-elementWithCanvas.canvas.height/2,elementWithCanvas.canvas.width,elementWithCanvas.canvas.height);var _getElementAbsoluteCo7=getElementAbsoluteCoords(boundTextElement),_getElementAbsoluteCo8=_slicedToArray(_getElementAbsoluteCo7,6),boundTextCx=_getElementAbsoluteCo8[4],boundTextCy=_getElementAbsoluteCo8[5];tempCanvasContext.rotate(-element.angle);// Shift the canvas to the center of the bound text element\nvar shiftX=tempCanvas.width/2-(boundTextCx-x1)*window.devicePixelRatio*zoom-offsetX-padding*zoom;var shiftY=tempCanvas.height/2-(boundTextCy-y1)*window.devicePixelRatio*zoom-offsetY-padding*zoom;tempCanvasContext.translate(-shiftX,-shiftY);// Clear the bound text area\ntempCanvasContext.clearRect(-(boundTextElement.width/2+BOUND_TEXT_PADDING)*window.devicePixelRatio*zoom,-(boundTextElement.height/2+BOUND_TEXT_PADDING)*window.devicePixelRatio*zoom,(boundTextElement.width+BOUND_TEXT_PADDING*2)*window.devicePixelRatio*zoom,(boundTextElement.height+BOUND_TEXT_PADDING*2)*window.devicePixelRatio*zoom);context.translate(cx,cy);context.drawImage(tempCanvas,-(x2-x1)/2*window.devicePixelRatio-offsetX/zoom-padding,-(y2-y1)/2*window.devicePixelRatio-offsetY/zoom-padding,tempCanvas.width/zoom,tempCanvas.height/zoom);}else{// we translate context to element center so that rotation and scale\n// originates from the element center\ncontext.translate(cx,cy);context.rotate(element.angle);if(\"scale\"in elementWithCanvas.element&&!isPendingImageElement(element,renderConfig)){context.scale(elementWithCanvas.element.scale[0],elementWithCanvas.element.scale[1]);}// revert afterwards we don't have account for it during drawing\ncontext.translate(-cx,-cy);context.drawImage(elementWithCanvas.canvas,(x1+renderConfig.scrollX)*window.devicePixelRatio-padding*elementWithCanvas.scale/elementWithCanvas.scale,(y1+renderConfig.scrollY)*window.devicePixelRatio-padding*elementWithCanvas.scale/elementWithCanvas.scale,elementWithCanvas.canvas.width/elementWithCanvas.scale,elementWithCanvas.canvas.height/elementWithCanvas.scale);if(process.env.REACT_APP_DEBUG_ENABLE_TEXT_CONTAINER_BOUNDING_BOX===\"true\"&&hasBoundTextElement(element)){var textElement=getBoundTextElement(element);var coords=getContainerCoords(element);context.strokeStyle=\"#c92a2a\";context.lineWidth=3;context.strokeRect((coords.x+renderConfig.scrollX)*window.devicePixelRatio,(coords.y+renderConfig.scrollY)*window.devicePixelRatio,getBoundTextMaxWidth(element)*window.devicePixelRatio,getBoundTextMaxHeight(element,textElement)*window.devicePixelRatio);}}context.restore();// Clear the nested element we appended to the DOM\n};export var renderElement=function renderElement(element,rc,context,renderConfig,appState){var generator=rc.generator;switch(element.type){case\"selection\":{// do not render selection when exporting\nif(!renderConfig.isExporting){context.save();context.translate(element.x+renderConfig.scrollX,element.y+renderConfig.scrollY);context.fillStyle=\"rgba(0, 0, 200, 0.04)\";// render from 0.5px offset  to get 1px wide line\n// https://stackoverflow.com/questions/7530593/html5-canvas-and-line-width/7531540#7531540\n// TODO can be be improved by offseting to the negative when user selects\n// from right to left\nvar offset=0.5/renderConfig.zoom.value;context.fillRect(offset,offset,element.width,element.height);context.lineWidth=1/renderConfig.zoom.value;context.strokeStyle=\" rgb(105, 101, 219)\";context.strokeRect(offset,offset,element.width,element.height);context.restore();}break;}case\"frame\":{if(!renderConfig.isExporting&&appState.frameRendering.enabled&&appState.frameRendering.outline){context.save();context.translate(element.x+renderConfig.scrollX,element.y+renderConfig.scrollY);context.fillStyle=\"rgba(0, 0, 200, 0.04)\";context.lineWidth=2/renderConfig.zoom.value;context.strokeStyle=FRAME_STYLE.strokeColor;if(FRAME_STYLE.radius&&context.roundRect){context.beginPath();context.roundRect(0,0,element.width,element.height,FRAME_STYLE.radius/renderConfig.zoom.value);context.stroke();context.closePath();}else{context.strokeRect(0,0,element.width,element.height);}context.restore();}break;}case\"freedraw\":{generateElementShape(element,generator);if(renderConfig.isExporting){var _getElementAbsoluteCo9=getElementAbsoluteCoords(element),_getElementAbsoluteCo10=_slicedToArray(_getElementAbsoluteCo9,4),x1=_getElementAbsoluteCo10[0],y1=_getElementAbsoluteCo10[1],x2=_getElementAbsoluteCo10[2],y2=_getElementAbsoluteCo10[3];var cx=(x1+x2)/2+renderConfig.scrollX;var cy=(y1+y2)/2+renderConfig.scrollY;var shiftX=(x2-x1)/2-(element.x-x1);var shiftY=(y2-y1)/2-(element.y-y1);context.save();context.translate(cx,cy);context.rotate(element.angle);context.translate(-shiftX,-shiftY);drawElementOnCanvas(element,rc,context,renderConfig);context.restore();}else{var elementWithCanvas=generateElementWithCanvas(element,renderConfig);drawElementFromCanvas(elementWithCanvas,rc,context,renderConfig);}break;}case\"rectangle\":case\"diamond\":case\"ellipse\":case\"line\":case\"arrow\":case\"image\":case\"text\":{generateElementShape(element,generator);if(renderConfig.isExporting){var _getElementAbsoluteCo11=getElementAbsoluteCoords(element),_getElementAbsoluteCo12=_slicedToArray(_getElementAbsoluteCo11,4),_x4=_getElementAbsoluteCo12[0],_y4=_getElementAbsoluteCo12[1],_x5=_getElementAbsoluteCo12[2],_y5=_getElementAbsoluteCo12[3];var _cx=(_x4+_x5)/2+renderConfig.scrollX;var _cy=(_y4+_y5)/2+renderConfig.scrollY;var _shiftX=(_x5-_x4)/2-(element.x-_x4);var _shiftY=(_y5-_y4)/2-(element.y-_y4);if(isTextElement(element)){var container=getContainerElement(element);if(isArrowElement(container)){var boundTextCoords=LinearElementEditor.getBoundTextElementPosition(container,element);_shiftX=(_x5-_x4)/2-(boundTextCoords.x-_x4);_shiftY=(_y5-_y4)/2-(boundTextCoords.y-_y4);}}context.save();context.translate(_cx,_cy);if(shouldResetImageFilter(element,renderConfig)){context.filter=\"none\";}var boundTextElement=getBoundTextElement(element);if(isArrowElement(element)&&boundTextElement){var tempCanvas=document.createElement(\"canvas\");var tempCanvasContext=tempCanvas.getContext(\"2d\");// Take max dimensions of arrow canvas so that when canvas is rotated\n// the arrow doesn't get clipped\nvar maxDim=Math.max(distance(_x4,_x5),distance(_y4,_y5));var padding=getCanvasPadding(element);tempCanvas.width=maxDim*appState.exportScale+padding*10*appState.exportScale;tempCanvas.height=maxDim*appState.exportScale+padding*10*appState.exportScale;tempCanvasContext.translate(tempCanvas.width/2,tempCanvas.height/2);tempCanvasContext.scale(appState.exportScale,appState.exportScale);// Shift the canvas to left most point of the arrow\n_shiftX=element.width/2-(element.x-_x4);_shiftY=element.height/2-(element.y-_y4);tempCanvasContext.rotate(element.angle);var tempRc=rough.canvas(tempCanvas);tempCanvasContext.translate(-_shiftX,-_shiftY);drawElementOnCanvas(element,tempRc,tempCanvasContext,renderConfig);tempCanvasContext.translate(_shiftX,_shiftY);tempCanvasContext.rotate(-element.angle);// Shift the canvas to center of bound text\nvar _getElementAbsoluteCo13=getElementAbsoluteCoords(boundTextElement),_getElementAbsoluteCo14=_slicedToArray(_getElementAbsoluteCo13,6),boundTextCx=_getElementAbsoluteCo14[4],boundTextCy=_getElementAbsoluteCo14[5];var boundTextShiftX=(_x4+_x5)/2-boundTextCx;var boundTextShiftY=(_y4+_y5)/2-boundTextCy;tempCanvasContext.translate(-boundTextShiftX,-boundTextShiftY);// Clear the bound text area\ntempCanvasContext.clearRect(-boundTextElement.width/2,-boundTextElement.height/2,boundTextElement.width,boundTextElement.height);context.scale(1/appState.exportScale,1/appState.exportScale);context.drawImage(tempCanvas,-tempCanvas.width/2,-tempCanvas.height/2,tempCanvas.width,tempCanvas.height);}else{context.rotate(element.angle);if(element.type===\"image\"){// note: scale must be applied *after* rotating\ncontext.scale(element.scale[0],element.scale[1]);}context.translate(-_shiftX,-_shiftY);drawElementOnCanvas(element,rc,context,renderConfig);}context.restore();// not exporting → optimized rendering (cache & render from element\n// canvases)\n}else{var _elementWithCanvas=generateElementWithCanvas(element,renderConfig);var currentImageSmoothingStatus=context.imageSmoothingEnabled;if(// do not disable smoothing during zoom as blurry shapes look better\n// on low resolution (while still zooming in) than sharp ones\n!(renderConfig!==null&&renderConfig!==void 0&&renderConfig.shouldCacheIgnoreZoom)&&(// angle is 0 -> always disable smoothing\n!element.angle||// or check if angle is a right angle in which case we can still\n// disable smoothing without adversely affecting the result\nisRightAngle(element.angle))){// Disabling smoothing makes output much sharper, especially for\n// text. Unless for non-right angles, where the aliasing is really\n// terrible on Chromium.\n//\n// Note that `context.imageSmoothingQuality=\"high\"` has almost\n// zero effect.\n//\ncontext.imageSmoothingEnabled=false;}drawElementFromCanvas(_elementWithCanvas,rc,context,renderConfig);// reset\ncontext.imageSmoothingEnabled=currentImageSmoothingStatus;}break;}default:{// @ts-ignore\nthrow new Error(\"Unimplemented type \".concat(element.type));}}};var roughSVGDrawWithPrecision=function roughSVGDrawWithPrecision(rsvg,drawable,precision){if(typeof precision===\"undefined\"){return rsvg.draw(drawable);}var pshape={sets:drawable.sets,shape:drawable.shape,options:_objectSpread(_objectSpread({},drawable.options),{},{fixedDecimalPlaceDigits:precision})};return rsvg.draw(pshape);};var maybeWrapNodesInFrameClipPath=function maybeWrapNodesInFrameClipPath(element,root,nodes,exportedFrameId){var frame=getContainingFrame(element);if(frame&&frame.id===exportedFrameId){var g=root.ownerDocument.createElementNS(SVG_NS,\"g\");g.setAttributeNS(SVG_NS,\"clip-path\",\"url(#\".concat(frame.id,\")\"));nodes.forEach(function(node){return g.appendChild(node);});return g;}return null;};export var renderElementToSvg=function renderElementToSvg(element,rsvg,svgRoot,files,offsetX,offsetY,exportWithDarkMode,exportingFrameId){var _getContainingFrame$o2,_getContainingFrame4;var _getElementAbsoluteCo15=getElementAbsoluteCoords(element),_getElementAbsoluteCo16=_slicedToArray(_getElementAbsoluteCo15,4),x1=_getElementAbsoluteCo16[0],y1=_getElementAbsoluteCo16[1],x2=_getElementAbsoluteCo16[2],y2=_getElementAbsoluteCo16[3];var cx=(x2-x1)/2-(element.x-x1);var cy=(y2-y1)/2-(element.y-y1);if(isTextElement(element)){var container=getContainerElement(element);if(isArrowElement(container)){var _getElementAbsoluteCo17=getElementAbsoluteCoords(container),_getElementAbsoluteCo18=_slicedToArray(_getElementAbsoluteCo17,4),_x6=_getElementAbsoluteCo18[0],_y6=_getElementAbsoluteCo18[1],_x7=_getElementAbsoluteCo18[2],_y7=_getElementAbsoluteCo18[3];var boundTextCoords=LinearElementEditor.getBoundTextElementPosition(container,element);cx=(_x7-_x6)/2-(boundTextCoords.x-_x6);cy=(_y7-_y6)/2-(boundTextCoords.y-_y6);offsetX=offsetX+boundTextCoords.x-element.x;offsetY=offsetY+boundTextCoords.y-element.y;}}var degree=180*element.angle/Math.PI;var generator=rsvg.generator;// element to append node to, most of the time svgRoot\nvar root=svgRoot;// if the element has a link, create an anchor tag and make that the new root\nif(element.link){var anchorTag=svgRoot.ownerDocument.createElementNS(SVG_NS,\"a\");anchorTag.setAttribute(\"href\",normalizeLink(element.link));root.appendChild(anchorTag);root=anchorTag;}var opacity=((_getContainingFrame$o2=(_getContainingFrame4=getContainingFrame(element))===null||_getContainingFrame4===void 0?void 0:_getContainingFrame4.opacity)!==null&&_getContainingFrame$o2!==void 0?_getContainingFrame$o2:100)*element.opacity/10000;switch(element.type){case\"selection\":{// Since this is used only during editing experience, which is canvas based,\n// this should not happen\nthrow new Error(\"Selection rendering is not supported for SVG\");}case\"rectangle\":case\"diamond\":case\"ellipse\":{generateElementShape(element,generator);var node=roughSVGDrawWithPrecision(rsvg,getShapeForElement(element),MAX_DECIMALS_FOR_SVG_EXPORT);if(opacity!==1){node.setAttribute(\"stroke-opacity\",\"\".concat(opacity));node.setAttribute(\"fill-opacity\",\"\".concat(opacity));}node.setAttribute(\"stroke-linecap\",\"round\");node.setAttribute(\"transform\",\"translate(\".concat(offsetX||0,\" \").concat(offsetY||0,\") rotate(\").concat(degree,\" \").concat(cx,\" \").concat(cy,\")\"));var g=maybeWrapNodesInFrameClipPath(element,root,[node],exportingFrameId);g?root.appendChild(g):root.appendChild(node);break;}case\"line\":case\"arrow\":{var boundText=getBoundTextElement(element);var maskPath=svgRoot.ownerDocument.createElementNS(SVG_NS,\"mask\");if(boundText){maskPath.setAttribute(\"id\",\"mask-\".concat(element.id));var maskRectVisible=svgRoot.ownerDocument.createElementNS(SVG_NS,\"rect\");offsetX=offsetX||0;offsetY=offsetY||0;maskRectVisible.setAttribute(\"x\",\"0\");maskRectVisible.setAttribute(\"y\",\"0\");maskRectVisible.setAttribute(\"fill\",\"#fff\");maskRectVisible.setAttribute(\"width\",\"\".concat(element.width+100+offsetX));maskRectVisible.setAttribute(\"height\",\"\".concat(element.height+100+offsetY));maskPath.appendChild(maskRectVisible);var maskRectInvisible=svgRoot.ownerDocument.createElementNS(SVG_NS,\"rect\");var _boundTextCoords=LinearElementEditor.getBoundTextElementPosition(element,boundText);var maskX=offsetX+_boundTextCoords.x-element.x;var maskY=offsetY+_boundTextCoords.y-element.y;maskRectInvisible.setAttribute(\"x\",maskX.toString());maskRectInvisible.setAttribute(\"y\",maskY.toString());maskRectInvisible.setAttribute(\"fill\",\"#000\");maskRectInvisible.setAttribute(\"width\",\"\".concat(boundText.width));maskRectInvisible.setAttribute(\"height\",\"\".concat(boundText.height));maskRectInvisible.setAttribute(\"opacity\",\"1\");maskPath.appendChild(maskRectInvisible);}generateElementShape(element,generator);var group=svgRoot.ownerDocument.createElementNS(SVG_NS,\"g\");if(boundText){group.setAttribute(\"mask\",\"url(#mask-\".concat(element.id,\")\"));}group.setAttribute(\"stroke-linecap\",\"round\");getShapeForElement(element).forEach(function(shape){var node=roughSVGDrawWithPrecision(rsvg,shape,MAX_DECIMALS_FOR_SVG_EXPORT);if(opacity!==1){node.setAttribute(\"stroke-opacity\",\"\".concat(opacity));node.setAttribute(\"fill-opacity\",\"\".concat(opacity));}node.setAttribute(\"transform\",\"translate(\".concat(offsetX||0,\" \").concat(offsetY||0,\") rotate(\").concat(degree,\" \").concat(cx,\" \").concat(cy,\")\"));if(element.type===\"line\"&&isPathALoop(element.points)&&element.backgroundColor!==\"transparent\"){node.setAttribute(\"fill-rule\",\"evenodd\");}group.appendChild(node);});var _g=maybeWrapNodesInFrameClipPath(element,root,[group,maskPath],exportingFrameId);if(_g){root.appendChild(_g);}else{root.appendChild(group);root.append(maskPath);}break;}case\"freedraw\":{generateElementShape(element,generator);generateFreeDrawShape(element);var shape=getShapeForElement(element);var _node=shape?roughSVGDrawWithPrecision(rsvg,shape,MAX_DECIMALS_FOR_SVG_EXPORT):svgRoot.ownerDocument.createElementNS(SVG_NS,\"g\");if(opacity!==1){_node.setAttribute(\"stroke-opacity\",\"\".concat(opacity));_node.setAttribute(\"fill-opacity\",\"\".concat(opacity));}_node.setAttribute(\"transform\",\"translate(\".concat(offsetX||0,\" \").concat(offsetY||0,\") rotate(\").concat(degree,\" \").concat(cx,\" \").concat(cy,\")\"));_node.setAttribute(\"stroke\",\"none\");var path=svgRoot.ownerDocument.createElementNS(SVG_NS,\"path\");path.setAttribute(\"fill\",element.strokeColor);path.setAttribute(\"d\",getFreeDrawSvgPath(element));_node.appendChild(path);var _g2=maybeWrapNodesInFrameClipPath(element,root,[_node],exportingFrameId);_g2?root.appendChild(_g2):root.appendChild(_node);break;}case\"image\":{var width=Math.round(element.width);var height=Math.round(element.height);var fileData=isInitializedImageElement(element)&&files[element.fileId];if(fileData){var symbolId=\"image-\".concat(fileData.id);var symbol=svgRoot.querySelector(\"#\".concat(symbolId));if(!symbol){symbol=svgRoot.ownerDocument.createElementNS(SVG_NS,\"symbol\");symbol.id=symbolId;var image=svgRoot.ownerDocument.createElementNS(SVG_NS,\"image\");image.setAttribute(\"width\",\"100%\");image.setAttribute(\"height\",\"100%\");image.setAttribute(\"href\",fileData.dataURL);symbol.appendChild(image);root.prepend(symbol);}var use=svgRoot.ownerDocument.createElementNS(SVG_NS,\"use\");use.setAttribute(\"href\",\"#\".concat(symbolId));// in dark theme, revert the image color filter\nif(exportWithDarkMode&&fileData.mimeType!==MIME_TYPES.svg){use.setAttribute(\"filter\",IMAGE_INVERT_FILTER);}use.setAttribute(\"width\",\"\".concat(width));use.setAttribute(\"height\",\"\".concat(height));use.setAttribute(\"opacity\",\"\".concat(opacity));// We first apply `scale` transforms (horizontal/vertical mirroring)\n// on the <use> element, then apply translation and rotation\n// on the <g> element which wraps the <use>.\n// Doing this separately is a quick hack to to work around compositing\n// the transformations correctly (the transform-origin was not being\n// applied correctly).\nif(element.scale[0]!==1||element.scale[1]!==1){var translateX=element.scale[0]!==1?-width:0;var translateY=element.scale[1]!==1?-height:0;use.setAttribute(\"transform\",\"scale(\".concat(element.scale[0],\", \").concat(element.scale[1],\") translate(\").concat(translateX,\" \").concat(translateY,\")\"));}var _g3=svgRoot.ownerDocument.createElementNS(SVG_NS,\"g\");_g3.appendChild(use);_g3.setAttribute(\"transform\",\"translate(\".concat(offsetX||0,\" \").concat(offsetY||0,\") rotate(\").concat(degree,\" \").concat(cx,\" \").concat(cy,\")\"));var clipG=maybeWrapNodesInFrameClipPath(element,root,[_g3],exportingFrameId);clipG?root.appendChild(clipG):root.appendChild(_g3);}break;}// frames are not rendered and only acts as a container\ncase\"frame\":{break;}default:{if(isTextElement(element)){var _node2=svgRoot.ownerDocument.createElementNS(SVG_NS,\"g\");if(opacity!==1){_node2.setAttribute(\"stroke-opacity\",\"\".concat(opacity));_node2.setAttribute(\"fill-opacity\",\"\".concat(opacity));}_node2.setAttribute(\"transform\",\"translate(\".concat(offsetX||0,\" \").concat(offsetY||0,\") rotate(\").concat(degree,\" \").concat(cx,\" \").concat(cy,\")\"));var lines=element.text.replace(/\\r\\n?/g,\"\\n\").split(\"\\n\");var lineHeightPx=getLineHeightInPx(element.fontSize,element.lineHeight);var horizontalOffset=element.textAlign===\"center\"?element.width/2:element.textAlign===\"right\"?element.width:0;var direction=isRTL(element.text)?\"rtl\":\"ltr\";var textAnchor=element.textAlign===\"center\"?\"middle\":element.textAlign===\"right\"||direction===\"rtl\"?\"end\":\"start\";for(var i=0;i<lines.length;i++){var text=svgRoot.ownerDocument.createElementNS(SVG_NS,\"text\");text.textContent=lines[i];text.setAttribute(\"x\",\"\".concat(horizontalOffset));text.setAttribute(\"y\",\"\".concat(i*lineHeightPx));text.setAttribute(\"font-family\",getFontFamilyString(element));text.setAttribute(\"font-size\",\"\".concat(element.fontSize,\"px\"));text.setAttribute(\"fill\",element.strokeColor);text.setAttribute(\"text-anchor\",textAnchor);text.setAttribute(\"style\",\"white-space: pre;\");text.setAttribute(\"direction\",direction);text.setAttribute(\"dominant-baseline\",\"text-before-edge\");_node2.appendChild(text);}var _g4=maybeWrapNodesInFrameClipPath(element,root,[_node2],exportingFrameId);_g4?root.appendChild(_g4):root.appendChild(_node2);}else{// @ts-ignore\nthrow new Error(\"Unimplemented type \".concat(element.type));}}}};export var pathsCache=new WeakMap([]);export function generateFreeDrawShape(element){var svgPathData=getFreeDrawSvgPath(element);var path=new Path2D(svgPathData);pathsCache.set(element,path);return path;}export function getFreeDrawPath2D(element){return pathsCache.get(element);}export function getFreeDrawSvgPath(element){// If input points are empty (should they ever be?) return a dot\nvar inputPoints=element.simulatePressure?element.points:element.points.length?element.points.map(function(_ref,i){var _ref2=_slicedToArray(_ref,2),x=_ref2[0],y=_ref2[1];return[x,y,element.pressures[i]];}):[[0,0,0.5]];// Consider changing the options for simulated pressure vs real pressure\nvar options={simulatePressure:element.simulatePressure,size:element.strokeWidth*4.25,thinning:0.6,smoothing:0.5,streamline:0.5,easing:function easing(t){return Math.sin(t*Math.PI/2);},// https://easings.net/#easeOutSine\nlast:!!element.lastCommittedPoint// LastCommittedPoint is added on pointerup\n};return getSvgPathFromStroke(getStroke(inputPoints,options));}function med(A,B){return[(A[0]+B[0])/2,(A[1]+B[1])/2];}// Trim SVG path data so number are each two decimal points. This\n// improves SVG exports, and prevents rendering errors on points\n// with long decimals.\nvar TO_FIXED_PRECISION=/(\\s?[A-Z]?,?-?[0-9]*\\.[0-9]{0,2})(([0-9]|e|-)*)/g;function getSvgPathFromStroke(points){if(!points.length){return\"\";}var max=points.length-1;return points.reduce(function(acc,point,i,arr){if(i===max){acc.push(point,med(point,arr[0]),\"L\",arr[0],\"Z\");}else{acc.push(point,med(point,arr[i+1]));}return acc;},[\"M\",points[0],\"Q\"]).join(\" \").replace(TO_FIXED_PRECISION,\"$1\");}","map":{"version":3,"names":["isTextElement","isLinearElement","isFreeDrawElement","isInitializedImageElement","isArrowElement","hasBoundTextElement","getDiamondPoints","getElementAbsoluteCoords","getArrowheadPoints","distance","getFontString","getFontFamilyString","isRTL","getCornerRadius","isPathALoop","isRightAngle","rough","getDefaultAppState","BOUND_TEXT_PADDING","FRAME_STYLE","MAX_DECIMALS_FOR_SVG_EXPORT","MIME_TYPES","SVG_NS","getStroke","getBoundTextElement","getContainerCoords","getContainerElement","getLineHeightInPx","getBoundTextMaxHeight","getBoundTextMaxWidth","LinearElementEditor","getContainingFrame","normalizeLink","IMAGE_INVERT_FILTER","defaultAppState","isPendingImageElement","element","renderConfig","imageCache","has","fileId","shouldResetImageFilter","_renderConfig$imageCa","theme","get","mimeType","svg","getDashArrayDashed","strokeWidth","getDashArrayDotted","getCanvasPadding","type","cappedElementCanvasSize","zoom","AREA_LIMIT","WIDTH_HEIGHT_LIMIT","padding","_getElementAbsoluteCo","_getElementAbsoluteCo2","_slicedToArray","x1","y1","x2","y2","elementWidth","width","elementHeight","height","window","devicePixelRatio","scale","value","Math","min","sqrt","floor","generateElementCanvas","_getBoundTextElement","_getContainingFrame","canvas","document","createElement","context","getContext","_cappedElementCanvasS","canvasOffsetX","canvasOffsetY","_getElementAbsoluteCo3","_getElementAbsoluteCo4","x","y","translate","save","rc","filter","drawElementOnCanvas","restore","zoomValue","boundTextElementVersion","version","containingFrameOpacity","opacity","DEFAULT_LINK_SIZE","IMAGE_PLACEHOLDER_IMG","src","concat","encodeURIComponent","IMAGE_ERROR_PLACEHOLDER_IMG","drawImagePlaceholder","fillStyle","fillRect","imageMinWidthOrHeight","size","drawImage","status","_getContainingFrame$o","_getContainingFrame2","globalAlpha","lineJoin","lineCap","draw","getShapeForElement","forEach","shape","strokeColor","path","getFreeDrawPath2D","fillShape","fill","_renderConfig$imageCa2","img","image","undefined","Promise","rtl","text","shouldTemporarilyAttach","isConnected","body","appendChild","setAttribute","font","textAlign","lines","replace","split","horizontalOffset","lineHeightPx","fontSize","lineHeight","verticalOffset","baseline","index","length","fillText","remove","Error","elementWithCanvasCache","WeakMap","shapeCache","setShapeForElement","set","invalidateShapeForElement","delete","generateRoughOptions","continuousPath","arguments","options","seed","strokeLineDash","strokeStyle","disableMultiStroke","fillWeight","hachureGap","roughness","stroke","preserveVertices","backgroundColor","curveFitting","points","generateElementShape","generator","roundness","w","h","r","rectangle","_getDiamondPoints","_getDiamondPoints2","topX","topY","rightX","rightY","bottomX","bottomY","leftX","leftY","verticalRadius","abs","horizontalRadius","polygon","ellipse","linearPath","curve","_element$startArrowhe","startArrowhead","_element$endArrowhead","endArrowhead","getArrowheadShapes","position","arrowhead","arrowheadPoints","_arrowheadPoints","circle","_objectSpread","_arrowheadPoints2","x3","y3","_arrowheadPoints3","x4","y4","dash","line","_shape","shapes","push","apply","_toConsumableArray","_shape2","generateFreeDrawShape","generateElementWithCanvas","_getBoundTextElement2","_getContainingFrame3","prevElementWithCanvas","shouldRegenerateBecauseZoom","shouldCacheIgnoreZoom","elementWithCanvas","drawElementFromCanvas","_getElementAbsoluteCo5","_getElementAbsoluteCo6","ceil","cx","scrollX","cy","scrollY","boundTextElement","tempCanvas","tempCanvasContext","maxDim","max","offsetX","offsetY","rotate","angle","_getElementAbsoluteCo7","_getElementAbsoluteCo8","boundTextCx","boundTextCy","shiftX","shiftY","clearRect","process","env","REACT_APP_DEBUG_ENABLE_TEXT_CONTAINER_BOUNDING_BOX","textElement","coords","lineWidth","strokeRect","renderElement","appState","isExporting","offset","frameRendering","enabled","outline","radius","roundRect","beginPath","closePath","_getElementAbsoluteCo9","_getElementAbsoluteCo10","_getElementAbsoluteCo11","_getElementAbsoluteCo12","container","boundTextCoords","getBoundTextElementPosition","exportScale","tempRc","_getElementAbsoluteCo13","_getElementAbsoluteCo14","boundTextShiftX","boundTextShiftY","currentImageSmoothingStatus","imageSmoothingEnabled","roughSVGDrawWithPrecision","rsvg","drawable","precision","pshape","sets","fixedDecimalPlaceDigits","maybeWrapNodesInFrameClipPath","root","nodes","exportedFrameId","frame","id","g","ownerDocument","createElementNS","setAttributeNS","node","renderElementToSvg","svgRoot","files","exportWithDarkMode","exportingFrameId","_getContainingFrame$o2","_getContainingFrame4","_getElementAbsoluteCo15","_getElementAbsoluteCo16","_getElementAbsoluteCo17","_getElementAbsoluteCo18","degree","PI","link","anchorTag","boundText","maskPath","maskRectVisible","maskRectInvisible","maskX","maskY","toString","group","append","getFreeDrawSvgPath","round","fileData","symbolId","symbol","querySelector","dataURL","prepend","use","translateX","translateY","clipG","direction","textAnchor","i","textContent","pathsCache","svgPathData","Path2D","inputPoints","simulatePressure","map","_ref","_ref2","pressures","thinning","smoothing","streamline","easing","t","sin","last","lastCommittedPoint","getSvgPathFromStroke","med","A","B","TO_FIXED_PRECISION","reduce","acc","point","arr","join"],"sources":["D:/project/excalidraw-cn/src/renderer/renderElement.ts"],"sourcesContent":["import {\n  ExcalidrawElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  Arrowhead,\n  NonDeletedExcalidrawElement,\n  ExcalidrawFreeDrawElement,\n  ExcalidrawImageElement,\n  ExcalidrawTextElementWithContainer,\n} from \"../element/types\";\nimport {\n  isTextElement,\n  isLinearElement,\n  isFreeDrawElement,\n  isInitializedImageElement,\n  isArrowElement,\n  hasBoundTextElement,\n} from \"../element/typeChecks\";\nimport {\n  getDiamondPoints,\n  getElementAbsoluteCoords,\n  getArrowheadPoints,\n} from \"../element/bounds\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { Drawable, Options } from \"roughjs/bin/core\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport { RoughGenerator } from \"roughjs/bin/generator\";\n\nimport { RenderConfig } from \"../scene/types\";\nimport { distance, getFontString, getFontFamilyString, isRTL } from \"../utils\";\nimport { getCornerRadius, isPathALoop, isRightAngle } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\nimport { AppState, BinaryFiles, Zoom } from \"../types\";\nimport { getDefaultAppState } from \"../appState\";\nimport {\n  BOUND_TEXT_PADDING,\n  FRAME_STYLE,\n  MAX_DECIMALS_FOR_SVG_EXPORT,\n  MIME_TYPES,\n  SVG_NS,\n} from \"../constants\";\nimport { getStroke, StrokeOptions } from \"perfect-freehand\";\nimport {\n  getBoundTextElement,\n  getContainerCoords,\n  getContainerElement,\n  getLineHeightInPx,\n  getBoundTextMaxHeight,\n  getBoundTextMaxWidth,\n} from \"../element/textElement\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { getContainingFrame } from \"../frame\";\nimport { normalizeLink } from \"../data/url\";\n\n// using a stronger invert (100% vs our regular 93%) and saturate\n// as a temp hack to make images in dark theme look closer to original\n// color scheme (it's still not quite there and the colors look slightly\n// desatured, alas...)\nconst IMAGE_INVERT_FILTER = \"invert(100%) hue-rotate(180deg) saturate(1.25)\";\n\nconst defaultAppState = getDefaultAppState();\n\nconst isPendingImageElement = (\n  element: ExcalidrawElement,\n  renderConfig: RenderConfig,\n) =>\n  isInitializedImageElement(element) &&\n  !renderConfig.imageCache.has(element.fileId);\n\nconst shouldResetImageFilter = (\n  element: ExcalidrawElement,\n  renderConfig: RenderConfig,\n) => {\n  return (\n    renderConfig.theme === \"dark\" &&\n    isInitializedImageElement(element) &&\n    !isPendingImageElement(element, renderConfig) &&\n    renderConfig.imageCache.get(element.fileId)?.mimeType !== MIME_TYPES.svg\n  );\n};\n\nconst getDashArrayDashed = (strokeWidth: number) => [8, 8 + strokeWidth];\n\nconst getDashArrayDotted = (strokeWidth: number) => [1.5, 6 + strokeWidth];\n\nconst getCanvasPadding = (element: ExcalidrawElement) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nexport interface ExcalidrawElementWithCanvas {\n  element: ExcalidrawElement | ExcalidrawTextElement;\n  canvas: HTMLCanvasElement;\n  theme: RenderConfig[\"theme\"];\n  scale: number;\n  zoomValue: RenderConfig[\"zoom\"][\"value\"];\n  canvasOffsetX: number;\n  canvasOffsetY: number;\n  boundTextElementVersion: number | null;\n  containingFrameOpacity: number;\n}\n\nconst cappedElementCanvasSize = (\n  element: NonDeletedExcalidrawElement,\n  zoom: Zoom,\n): {\n  width: number;\n  height: number;\n  scale: number;\n} => {\n  // these limits are ballpark, they depend on specific browsers and device.\n  // We've chosen lower limits to be safe. We might want to change these limits\n  // based on browser/device type, if we get reports of low quality rendering\n  // on zoom.\n  //\n  // ~ safari mobile canvas area limit\n  const AREA_LIMIT = 16777216;\n  // ~ safari width/height limit based on developer.mozilla.org.\n  const WIDTH_HEIGHT_LIMIT = 32767;\n\n  const padding = getCanvasPadding(element);\n\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const elementWidth =\n    isLinearElement(element) || isFreeDrawElement(element)\n      ? distance(x1, x2)\n      : element.width;\n  const elementHeight =\n    isLinearElement(element) || isFreeDrawElement(element)\n      ? distance(y1, y2)\n      : element.height;\n\n  let width = elementWidth * window.devicePixelRatio + padding * 2;\n  let height = elementHeight * window.devicePixelRatio + padding * 2;\n\n  let scale: number = zoom.value;\n\n  // rescale to ensure width and height is within limits\n  if (\n    width * scale > WIDTH_HEIGHT_LIMIT ||\n    height * scale > WIDTH_HEIGHT_LIMIT\n  ) {\n    scale = Math.min(WIDTH_HEIGHT_LIMIT / width, WIDTH_HEIGHT_LIMIT / height);\n  }\n\n  // rescale to ensure canvas area is within limits\n  if (width * height * scale * scale > AREA_LIMIT) {\n    scale = Math.sqrt(AREA_LIMIT / (width * height));\n  }\n\n  width = Math.floor(width * scale);\n  height = Math.floor(height * scale);\n\n  return { width, height, scale };\n};\n\nconst generateElementCanvas = (\n  element: NonDeletedExcalidrawElement,\n  zoom: Zoom,\n  renderConfig: RenderConfig,\n): ExcalidrawElementWithCanvas => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\")!;\n  const padding = getCanvasPadding(element);\n\n  const { width, height, scale } = cappedElementCanvasSize(element, zoom);\n\n  canvas.width = width;\n  canvas.height = height;\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n\n  if (isLinearElement(element) || isFreeDrawElement(element)) {\n    const [x1, y1] = getElementAbsoluteCoords(element);\n\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * window.devicePixelRatio * scale\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * window.devicePixelRatio * scale\n        : 0;\n\n    context.translate(canvasOffsetX, canvasOffsetY);\n  }\n\n  context.save();\n  context.translate(padding * scale, padding * scale);\n  context.scale(\n    window.devicePixelRatio * scale,\n    window.devicePixelRatio * scale,\n  );\n\n  const rc = rough.canvas(canvas);\n\n  // in dark theme, revert the image color filter\n  if (shouldResetImageFilter(element, renderConfig)) {\n    context.filter = IMAGE_INVERT_FILTER;\n  }\n\n  drawElementOnCanvas(element, rc, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    scale,\n    zoomValue: zoom.value,\n    canvasOffsetX,\n    canvasOffsetY,\n    boundTextElementVersion: getBoundTextElement(element)?.version || null,\n    containingFrameOpacity: getContainingFrame(element)?.opacity || 100,\n  };\n};\n\nexport const DEFAULT_LINK_SIZE = 14;\n\nconst IMAGE_PLACEHOLDER_IMG = document.createElement(\"img\");\nIMAGE_PLACEHOLDER_IMG.src = `data:${MIME_TYPES.svg},${encodeURIComponent(\n  `<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"image\" class=\"svg-inline--fa fa-image fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"#888\" d=\"M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48z\"></path></svg>`,\n)}`;\n\nconst IMAGE_ERROR_PLACEHOLDER_IMG = document.createElement(\"img\");\nIMAGE_ERROR_PLACEHOLDER_IMG.src = `data:${MIME_TYPES.svg},${encodeURIComponent(\n  `<svg viewBox=\"0 0 668 668\" xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2\"><path d=\"M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48ZM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56ZM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48Z\" style=\"fill:#888;fill-rule:nonzero\" transform=\"matrix(.81709 0 0 .81709 124.825 145.825)\"/><path d=\"M256 8C119.034 8 8 119.033 8 256c0 136.967 111.034 248 248 248s248-111.034 248-248S392.967 8 256 8Zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676ZM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676Z\" style=\"fill:#888;fill-rule:nonzero\" transform=\"matrix(.30366 0 0 .30366 506.822 60.065)\"/></svg>`,\n)}`;\n\nconst drawImagePlaceholder = (\n  element: ExcalidrawImageElement,\n  context: CanvasRenderingContext2D,\n  zoomValue: AppState[\"zoom\"][\"value\"],\n) => {\n  context.fillStyle = \"#E7E7E7\";\n  context.fillRect(0, 0, element.width, element.height);\n\n  const imageMinWidthOrHeight = Math.min(element.width, element.height);\n\n  const size = Math.min(\n    imageMinWidthOrHeight,\n    Math.min(imageMinWidthOrHeight * 0.4, 100),\n  );\n\n  context.drawImage(\n    element.status === \"error\"\n      ? IMAGE_ERROR_PLACEHOLDER_IMG\n      : IMAGE_PLACEHOLDER_IMG,\n    element.width / 2 - size / 2,\n    element.height / 2 - size / 2,\n    size,\n    size,\n  );\n};\nconst drawElementOnCanvas = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderConfig: RenderConfig,\n) => {\n  context.globalAlpha =\n    ((getContainingFrame(element)?.opacity ?? 100) * element.opacity) / 10000;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      rc.draw(getShapeForElement(element)!);\n      break;\n    }\n    case \"arrow\":\n    case \"line\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n\n      getShapeForElement(element)!.forEach((shape) => {\n        rc.draw(shape);\n      });\n      break;\n    }\n    case \"freedraw\": {\n      // Draw directly to canvas\n      context.save();\n      context.fillStyle = element.strokeColor;\n\n      const path = getFreeDrawPath2D(element) as Path2D;\n      const fillShape = getShapeForElement(element);\n\n      if (fillShape) {\n        rc.draw(fillShape);\n      }\n\n      context.fillStyle = element.strokeColor;\n      context.fill(path);\n\n      context.restore();\n      break;\n    }\n    case \"image\": {\n      const img = isInitializedImageElement(element)\n        ? renderConfig.imageCache.get(element.fileId)?.image\n        : undefined;\n      if (img != null && !(img instanceof Promise)) {\n        context.drawImage(\n          img,\n          0 /* hardcoded for the selection box*/,\n          0,\n          element.width,\n          element.height,\n        );\n      } else {\n        drawImagePlaceholder(element, context, renderConfig.zoom.value);\n      }\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const rtl = isRTL(element.text);\n        const shouldTemporarilyAttach = rtl && !context.canvas.isConnected;\n        if (shouldTemporarilyAttach) {\n          // to correctly render RTL text mixed with LTR, we have to append it\n          // to the DOM\n          document.body.appendChild(context.canvas);\n        }\n        context.canvas.setAttribute(\"dir\", rtl ? \"rtl\" : \"ltr\");\n        context.save();\n        context.font = getFontString(element);\n        context.fillStyle = element.strokeColor;\n        context.textAlign = element.textAlign as CanvasTextAlign;\n\n        // Canvas does not support multiline text by default\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        const lineHeightPx = getLineHeightInPx(\n          element.fontSize,\n          element.lineHeight,\n        );\n        const verticalOffset = element.height - element.baseline;\n        for (let index = 0; index < lines.length; index++) {\n          context.fillText(\n            lines[index],\n            horizontalOffset,\n            (index + 1) * lineHeightPx - verticalOffset,\n          );\n        }\n        context.restore();\n        if (shouldTemporarilyAttach) {\n          context.canvas.remove();\n        }\n      } else {\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst elementWithCanvasCache = new WeakMap<\n  ExcalidrawElement,\n  ExcalidrawElementWithCanvas\n>();\n\nconst shapeCache = new WeakMap<ExcalidrawElement, ElementShape>();\n\ntype ElementShape = Drawable | Drawable[] | null;\n\ntype ElementShapes = {\n  freedraw: Drawable | null;\n  arrow: Drawable[];\n  line: Drawable[];\n  text: null;\n  image: null;\n};\n\nexport const getShapeForElement = <T extends ExcalidrawElement>(element: T) =>\n  shapeCache.get(element) as T[\"type\"] extends keyof ElementShapes\n    ? ElementShapes[T[\"type\"]] | undefined\n    : Drawable | null | undefined;\n\nexport const setShapeForElement = <T extends ExcalidrawElement>(\n  element: T,\n  shape: T[\"type\"] extends keyof ElementShapes\n    ? ElementShapes[T[\"type\"]]\n    : Drawable,\n) => shapeCache.set(element, shape);\n\nexport const invalidateShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.delete(element);\n\nexport const generateRoughOptions = (\n  element: ExcalidrawElement,\n  continuousPath = false,\n): Options => {\n  const options: Options = {\n    seed: element.seed,\n    strokeLineDash:\n      element.strokeStyle === \"dashed\"\n        ? getDashArrayDashed(element.strokeWidth)\n        : element.strokeStyle === \"dotted\"\n        ? getDashArrayDotted(element.strokeWidth)\n        : undefined,\n    // for non-solid strokes, disable multiStroke because it tends to make\n    // dashes/dots overlay each other\n    disableMultiStroke: element.strokeStyle !== \"solid\",\n    // for non-solid strokes, increase the width a bit to make it visually\n    // similar to solid strokes, because we're also disabling multiStroke\n    strokeWidth:\n      element.strokeStyle !== \"solid\"\n        ? element.strokeWidth + 0.5\n        : element.strokeWidth,\n    // when increasing strokeWidth, we must explicitly set fillWeight and\n    // hachureGap because if not specified, roughjs uses strokeWidth to\n    // calculate them (and we don't want the fills to be modified)\n    fillWeight: element.strokeWidth / 2,\n    hachureGap: element.strokeWidth * 4,\n    roughness: element.roughness,\n    stroke: element.strokeColor,\n    preserveVertices: continuousPath,\n  };\n\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      options.fillStyle = element.fillStyle;\n      options.fill =\n        element.backgroundColor === \"transparent\"\n          ? undefined\n          : element.backgroundColor;\n      if (element.type === \"ellipse\") {\n        options.curveFitting = 1;\n      }\n      return options;\n    }\n    case \"line\":\n    case \"freedraw\": {\n      if (isPathALoop(element.points)) {\n        options.fillStyle = element.fillStyle;\n        options.fill =\n          element.backgroundColor === \"transparent\"\n            ? undefined\n            : element.backgroundColor;\n      }\n      return options;\n    }\n    case \"arrow\":\n      return options;\n    default: {\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\n/**\n * Generates the element's shape and puts it into the cache.\n * @param element\n * @param generator\n */\nconst generateElementShape = (\n  element: NonDeletedExcalidrawElement,\n  generator: RoughGenerator,\n) => {\n  let shape = shapeCache.get(element);\n\n  // `null` indicates no rc shape applicable for this element type\n  // (= do not generate anything)\n  if (shape === undefined) {\n    elementWithCanvasCache.delete(element);\n\n    switch (element.type) {\n      case \"rectangle\": {\n        if (element.roundness) {\n          const w = element.width;\n          const h = element.height;\n          const r = getCornerRadius(Math.min(w, h), element);\n          shape = generator.path(\n            `M ${r} 0 L ${w - r} 0 Q ${w} 0, ${w} ${r} L ${w} ${\n              h - r\n            } Q ${w} ${h}, ${w - r} ${h} L ${r} ${h} Q 0 ${h}, 0 ${\n              h - r\n            } L 0 ${r} Q 0 0, ${r} 0`,\n            generateRoughOptions(element, true),\n          );\n        } else {\n          shape = generator.rectangle(\n            0,\n            0,\n            element.width,\n            element.height,\n            generateRoughOptions(element),\n          );\n        }\n        setShapeForElement(element, shape);\n\n        break;\n      }\n      case \"diamond\": {\n        const [topX, topY, rightX, rightY, bottomX, bottomY, leftX, leftY] =\n          getDiamondPoints(element);\n        if (element.roundness) {\n          const verticalRadius = getCornerRadius(\n            Math.abs(topX - leftX),\n            element,\n          );\n\n          const horizontalRadius = getCornerRadius(\n            Math.abs(rightY - topY),\n            element,\n          );\n\n          shape = generator.path(\n            `M ${topX + verticalRadius} ${topY + horizontalRadius} L ${\n              rightX - verticalRadius\n            } ${rightY - horizontalRadius}\n            C ${rightX} ${rightY}, ${rightX} ${rightY}, ${\n              rightX - verticalRadius\n            } ${rightY + horizontalRadius}\n            L ${bottomX + verticalRadius} ${bottomY - horizontalRadius}\n            C ${bottomX} ${bottomY}, ${bottomX} ${bottomY}, ${\n              bottomX - verticalRadius\n            } ${bottomY - horizontalRadius}\n            L ${leftX + verticalRadius} ${leftY + horizontalRadius}\n            C ${leftX} ${leftY}, ${leftX} ${leftY}, ${leftX + verticalRadius} ${\n              leftY - horizontalRadius\n            }\n            L ${topX - verticalRadius} ${topY + horizontalRadius}\n            C ${topX} ${topY}, ${topX} ${topY}, ${topX + verticalRadius} ${\n              topY + horizontalRadius\n            }`,\n            generateRoughOptions(element, true),\n          );\n        } else {\n          shape = generator.polygon(\n            [\n              [topX, topY],\n              [rightX, rightY],\n              [bottomX, bottomY],\n              [leftX, leftY],\n            ],\n            generateRoughOptions(element),\n          );\n        }\n        setShapeForElement(element, shape);\n\n        break;\n      }\n      case \"ellipse\":\n        shape = generator.ellipse(\n          element.width / 2,\n          element.height / 2,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n        setShapeForElement(element, shape);\n\n        break;\n      case \"line\":\n      case \"arrow\": {\n        const options = generateRoughOptions(element);\n\n        // points array can be empty in the beginning, so it is important to add\n        // initial position to it\n        const points = element.points.length ? element.points : [[0, 0]];\n\n        // curve is always the first element\n        // this simplifies finding the curve for an element\n        if (!element.roundness) {\n          if (options.fill) {\n            shape = [generator.polygon(points as [number, number][], options)];\n          } else {\n            shape = [\n              generator.linearPath(points as [number, number][], options),\n            ];\n          }\n        } else {\n          shape = [generator.curve(points as [number, number][], options)];\n        }\n\n        // add lines only in arrow\n        if (element.type === \"arrow\") {\n          const { startArrowhead = null, endArrowhead = \"arrow\" } = element;\n\n          const getArrowheadShapes = (\n            element: ExcalidrawLinearElement,\n            shape: Drawable[],\n            position: \"start\" | \"end\",\n            arrowhead: Arrowhead,\n          ) => {\n            const arrowheadPoints = getArrowheadPoints(\n              element,\n              shape,\n              position,\n              arrowhead,\n            );\n\n            if (arrowheadPoints === null) {\n              return [];\n            }\n\n            // Other arrowheads here...\n            if (arrowhead === \"dot\") {\n              const [x, y, r] = arrowheadPoints;\n\n              return [\n                generator.circle(x, y, r, {\n                  ...options,\n                  fill: element.strokeColor,\n                  fillStyle: \"solid\",\n                  stroke: \"none\",\n                }),\n              ];\n            }\n\n            if (arrowhead === \"triangle\") {\n              const [x, y, x2, y2, x3, y3] = arrowheadPoints;\n\n              // always use solid stroke for triangle arrowhead\n              delete options.strokeLineDash;\n\n              return [\n                generator.polygon(\n                  [\n                    [x, y],\n                    [x2, y2],\n                    [x3, y3],\n                    [x, y],\n                  ],\n                  {\n                    ...options,\n                    fill: element.strokeColor,\n                    fillStyle: \"solid\",\n                  },\n                ),\n              ];\n            }\n\n            // Arrow arrowheads\n            const [x2, y2, x3, y3, x4, y4] = arrowheadPoints;\n\n            if (element.strokeStyle === \"dotted\") {\n              // for dotted arrows caps, reduce gap to make it more legible\n              const dash = getDashArrayDotted(element.strokeWidth - 1);\n              options.strokeLineDash = [dash[0], dash[1] - 1];\n            } else {\n              // for solid/dashed, keep solid arrow cap\n              delete options.strokeLineDash;\n            }\n            return [\n              generator.line(x3, y3, x2, y2, options),\n              generator.line(x4, y4, x2, y2, options),\n            ];\n          };\n\n          if (startArrowhead !== null) {\n            const shapes = getArrowheadShapes(\n              element,\n              shape,\n              \"start\",\n              startArrowhead,\n            );\n            shape.push(...shapes);\n          }\n\n          if (endArrowhead !== null) {\n            if (endArrowhead === undefined) {\n              // Hey, we have an old arrow here!\n            }\n\n            const shapes = getArrowheadShapes(\n              element,\n              shape,\n              \"end\",\n              endArrowhead,\n            );\n            shape.push(...shapes);\n          }\n        }\n\n        setShapeForElement(element, shape);\n\n        break;\n      }\n      case \"freedraw\": {\n        generateFreeDrawShape(element);\n\n        if (isPathALoop(element.points)) {\n          // generate rough polygon to fill freedraw shape\n          shape = generator.polygon(element.points as [number, number][], {\n            ...generateRoughOptions(element),\n            stroke: \"none\",\n          });\n        } else {\n          shape = null;\n        }\n        setShapeForElement(element, shape);\n        break;\n      }\n      case \"text\":\n      case \"image\": {\n        // just to ensure we don't regenerate element.canvas on rerenders\n        setShapeForElement(element, null);\n        break;\n      }\n    }\n  }\n};\n\nconst generateElementWithCanvas = (\n  element: NonDeletedExcalidrawElement,\n  renderConfig: RenderConfig,\n) => {\n  const zoom: Zoom = renderConfig ? renderConfig.zoom : defaultAppState.zoom;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  const shouldRegenerateBecauseZoom =\n    prevElementWithCanvas &&\n    prevElementWithCanvas.zoomValue !== zoom.value &&\n    !renderConfig?.shouldCacheIgnoreZoom;\n  const boundTextElementVersion = getBoundTextElement(element)?.version || null;\n  const containingFrameOpacity = getContainingFrame(element)?.opacity || 100;\n\n  if (\n    !prevElementWithCanvas ||\n    shouldRegenerateBecauseZoom ||\n    prevElementWithCanvas.theme !== renderConfig.theme ||\n    prevElementWithCanvas.boundTextElementVersion !== boundTextElementVersion ||\n    prevElementWithCanvas.containingFrameOpacity !== containingFrameOpacity\n  ) {\n    const elementWithCanvas = generateElementCanvas(\n      element,\n      zoom,\n      renderConfig,\n    );\n\n    elementWithCanvasCache.set(element, elementWithCanvas);\n\n    return elementWithCanvas;\n  }\n  return prevElementWithCanvas;\n};\n\nconst drawElementFromCanvas = (\n  elementWithCanvas: ExcalidrawElementWithCanvas,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderConfig: RenderConfig,\n) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  const zoom = elementWithCanvas.scale;\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n  // Free draw elements will otherwise \"shuffle\" as the min x and y change\n  if (isFreeDrawElement(element)) {\n    x1 = Math.floor(x1);\n    x2 = Math.ceil(x2);\n    y1 = Math.floor(y1);\n    y2 = Math.ceil(y2);\n  }\n\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  const boundTextElement = getBoundTextElement(element);\n\n  if (isArrowElement(element) && boundTextElement) {\n    const tempCanvas = document.createElement(\"canvas\");\n    const tempCanvasContext = tempCanvas.getContext(\"2d\")!;\n\n    // Take max dimensions of arrow canvas so that when canvas is rotated\n    // the arrow doesn't get clipped\n    const maxDim = Math.max(distance(x1, x2), distance(y1, y2));\n    tempCanvas.width =\n      maxDim * window.devicePixelRatio * zoom +\n      padding * elementWithCanvas.scale * 10;\n    tempCanvas.height =\n      maxDim * window.devicePixelRatio * zoom +\n      padding * elementWithCanvas.scale * 10;\n    const offsetX = (tempCanvas.width - elementWithCanvas.canvas!.width) / 2;\n    const offsetY = (tempCanvas.height - elementWithCanvas.canvas!.height) / 2;\n\n    tempCanvasContext.translate(tempCanvas.width / 2, tempCanvas.height / 2);\n    tempCanvasContext.rotate(element.angle);\n\n    tempCanvasContext.drawImage(\n      elementWithCanvas.canvas!,\n      -elementWithCanvas.canvas.width / 2,\n      -elementWithCanvas.canvas.height / 2,\n      elementWithCanvas.canvas.width,\n      elementWithCanvas.canvas.height,\n    );\n\n    const [, , , , boundTextCx, boundTextCy] =\n      getElementAbsoluteCoords(boundTextElement);\n\n    tempCanvasContext.rotate(-element.angle);\n\n    // Shift the canvas to the center of the bound text element\n    const shiftX =\n      tempCanvas.width / 2 -\n      (boundTextCx - x1) * window.devicePixelRatio * zoom -\n      offsetX -\n      padding * zoom;\n\n    const shiftY =\n      tempCanvas.height / 2 -\n      (boundTextCy - y1) * window.devicePixelRatio * zoom -\n      offsetY -\n      padding * zoom;\n    tempCanvasContext.translate(-shiftX, -shiftY);\n\n    // Clear the bound text area\n    tempCanvasContext.clearRect(\n      -(boundTextElement.width / 2 + BOUND_TEXT_PADDING) *\n        window.devicePixelRatio *\n        zoom,\n      -(boundTextElement.height / 2 + BOUND_TEXT_PADDING) *\n        window.devicePixelRatio *\n        zoom,\n      (boundTextElement.width + BOUND_TEXT_PADDING * 2) *\n        window.devicePixelRatio *\n        zoom,\n      (boundTextElement.height + BOUND_TEXT_PADDING * 2) *\n        window.devicePixelRatio *\n        zoom,\n    );\n\n    context.translate(cx, cy);\n    context.drawImage(\n      tempCanvas,\n      (-(x2 - x1) / 2) * window.devicePixelRatio - offsetX / zoom - padding,\n      (-(y2 - y1) / 2) * window.devicePixelRatio - offsetY / zoom - padding,\n      tempCanvas.width / zoom,\n      tempCanvas.height / zoom,\n    );\n  } else {\n    // we translate context to element center so that rotation and scale\n    // originates from the element center\n    context.translate(cx, cy);\n\n    context.rotate(element.angle);\n\n    if (\n      \"scale\" in elementWithCanvas.element &&\n      !isPendingImageElement(element, renderConfig)\n    ) {\n      context.scale(\n        elementWithCanvas.element.scale[0],\n        elementWithCanvas.element.scale[1],\n      );\n    }\n\n    // revert afterwards we don't have account for it during drawing\n    context.translate(-cx, -cy);\n\n    context.drawImage(\n      elementWithCanvas.canvas!,\n      (x1 + renderConfig.scrollX) * window.devicePixelRatio -\n        (padding * elementWithCanvas.scale) / elementWithCanvas.scale,\n      (y1 + renderConfig.scrollY) * window.devicePixelRatio -\n        (padding * elementWithCanvas.scale) / elementWithCanvas.scale,\n      elementWithCanvas.canvas!.width / elementWithCanvas.scale,\n      elementWithCanvas.canvas!.height / elementWithCanvas.scale,\n    );\n\n    if (\n      process.env.REACT_APP_DEBUG_ENABLE_TEXT_CONTAINER_BOUNDING_BOX ===\n        \"true\" &&\n      hasBoundTextElement(element)\n    ) {\n      const textElement = getBoundTextElement(\n        element,\n      ) as ExcalidrawTextElementWithContainer;\n      const coords = getContainerCoords(element);\n      context.strokeStyle = \"#c92a2a\";\n      context.lineWidth = 3;\n      context.strokeRect(\n        (coords.x + renderConfig.scrollX) * window.devicePixelRatio,\n        (coords.y + renderConfig.scrollY) * window.devicePixelRatio,\n        getBoundTextMaxWidth(element) * window.devicePixelRatio,\n        getBoundTextMaxHeight(element, textElement) * window.devicePixelRatio,\n      );\n    }\n  }\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n\nexport const renderElement = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderConfig: RenderConfig,\n  appState: AppState,\n) => {\n  const generator = rc.generator;\n  switch (element.type) {\n    case \"selection\": {\n      // do not render selection when exporting\n      if (!renderConfig.isExporting) {\n        context.save();\n        context.translate(\n          element.x + renderConfig.scrollX,\n          element.y + renderConfig.scrollY,\n        );\n        context.fillStyle = \"rgba(0, 0, 200, 0.04)\";\n\n        // render from 0.5px offset  to get 1px wide line\n        // https://stackoverflow.com/questions/7530593/html5-canvas-and-line-width/7531540#7531540\n        // TODO can be be improved by offseting to the negative when user selects\n        // from right to left\n        const offset = 0.5 / renderConfig.zoom.value;\n\n        context.fillRect(offset, offset, element.width, element.height);\n        context.lineWidth = 1 / renderConfig.zoom.value;\n        context.strokeStyle = \" rgb(105, 101, 219)\";\n        context.strokeRect(offset, offset, element.width, element.height);\n\n        context.restore();\n      }\n      break;\n    }\n    case \"frame\": {\n      if (\n        !renderConfig.isExporting &&\n        appState.frameRendering.enabled &&\n        appState.frameRendering.outline\n      ) {\n        context.save();\n        context.translate(\n          element.x + renderConfig.scrollX,\n          element.y + renderConfig.scrollY,\n        );\n        context.fillStyle = \"rgba(0, 0, 200, 0.04)\";\n\n        context.lineWidth = 2 / renderConfig.zoom.value;\n        context.strokeStyle = FRAME_STYLE.strokeColor;\n\n        if (FRAME_STYLE.radius && context.roundRect) {\n          context.beginPath();\n          context.roundRect(\n            0,\n            0,\n            element.width,\n            element.height,\n            FRAME_STYLE.radius / renderConfig.zoom.value,\n          );\n          context.stroke();\n          context.closePath();\n        } else {\n          context.strokeRect(0, 0, element.width, element.height);\n        }\n\n        context.restore();\n      }\n      break;\n    }\n    case \"freedraw\": {\n      generateElementShape(element, generator);\n\n      if (renderConfig.isExporting) {\n        const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n        const cx = (x1 + x2) / 2 + renderConfig.scrollX;\n        const cy = (y1 + y2) / 2 + renderConfig.scrollY;\n        const shiftX = (x2 - x1) / 2 - (element.x - x1);\n        const shiftY = (y2 - y1) / 2 - (element.y - y1);\n        context.save();\n        context.translate(cx, cy);\n        context.rotate(element.angle);\n        context.translate(-shiftX, -shiftY);\n        drawElementOnCanvas(element, rc, context, renderConfig);\n        context.restore();\n      } else {\n        const elementWithCanvas = generateElementWithCanvas(\n          element,\n          renderConfig,\n        );\n        drawElementFromCanvas(elementWithCanvas, rc, context, renderConfig);\n      }\n\n      break;\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\":\n    case \"line\":\n    case \"arrow\":\n    case \"image\":\n    case \"text\": {\n      generateElementShape(element, generator);\n      if (renderConfig.isExporting) {\n        const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n        const cx = (x1 + x2) / 2 + renderConfig.scrollX;\n        const cy = (y1 + y2) / 2 + renderConfig.scrollY;\n        let shiftX = (x2 - x1) / 2 - (element.x - x1);\n        let shiftY = (y2 - y1) / 2 - (element.y - y1);\n        if (isTextElement(element)) {\n          const container = getContainerElement(element);\n          if (isArrowElement(container)) {\n            const boundTextCoords =\n              LinearElementEditor.getBoundTextElementPosition(\n                container,\n                element as ExcalidrawTextElementWithContainer,\n              );\n            shiftX = (x2 - x1) / 2 - (boundTextCoords.x - x1);\n            shiftY = (y2 - y1) / 2 - (boundTextCoords.y - y1);\n          }\n        }\n        context.save();\n        context.translate(cx, cy);\n\n        if (shouldResetImageFilter(element, renderConfig)) {\n          context.filter = \"none\";\n        }\n        const boundTextElement = getBoundTextElement(element);\n\n        if (isArrowElement(element) && boundTextElement) {\n          const tempCanvas = document.createElement(\"canvas\");\n\n          const tempCanvasContext = tempCanvas.getContext(\"2d\")!;\n\n          // Take max dimensions of arrow canvas so that when canvas is rotated\n          // the arrow doesn't get clipped\n          const maxDim = Math.max(distance(x1, x2), distance(y1, y2));\n          const padding = getCanvasPadding(element);\n          tempCanvas.width =\n            maxDim * appState.exportScale + padding * 10 * appState.exportScale;\n          tempCanvas.height =\n            maxDim * appState.exportScale + padding * 10 * appState.exportScale;\n\n          tempCanvasContext.translate(\n            tempCanvas.width / 2,\n            tempCanvas.height / 2,\n          );\n          tempCanvasContext.scale(appState.exportScale, appState.exportScale);\n\n          // Shift the canvas to left most point of the arrow\n          shiftX = element.width / 2 - (element.x - x1);\n          shiftY = element.height / 2 - (element.y - y1);\n\n          tempCanvasContext.rotate(element.angle);\n          const tempRc = rough.canvas(tempCanvas);\n\n          tempCanvasContext.translate(-shiftX, -shiftY);\n\n          drawElementOnCanvas(element, tempRc, tempCanvasContext, renderConfig);\n\n          tempCanvasContext.translate(shiftX, shiftY);\n\n          tempCanvasContext.rotate(-element.angle);\n\n          // Shift the canvas to center of bound text\n          const [, , , , boundTextCx, boundTextCy] =\n            getElementAbsoluteCoords(boundTextElement);\n          const boundTextShiftX = (x1 + x2) / 2 - boundTextCx;\n          const boundTextShiftY = (y1 + y2) / 2 - boundTextCy;\n          tempCanvasContext.translate(-boundTextShiftX, -boundTextShiftY);\n\n          // Clear the bound text area\n          tempCanvasContext.clearRect(\n            -boundTextElement.width / 2,\n            -boundTextElement.height / 2,\n            boundTextElement.width,\n            boundTextElement.height,\n          );\n          context.scale(1 / appState.exportScale, 1 / appState.exportScale);\n          context.drawImage(\n            tempCanvas,\n            -tempCanvas.width / 2,\n            -tempCanvas.height / 2,\n            tempCanvas.width,\n            tempCanvas.height,\n          );\n        } else {\n          context.rotate(element.angle);\n\n          if (element.type === \"image\") {\n            // note: scale must be applied *after* rotating\n            context.scale(element.scale[0], element.scale[1]);\n          }\n\n          context.translate(-shiftX, -shiftY);\n          drawElementOnCanvas(element, rc, context, renderConfig);\n        }\n\n        context.restore();\n        // not exporting → optimized rendering (cache & render from element\n        // canvases)\n      } else {\n        const elementWithCanvas = generateElementWithCanvas(\n          element,\n          renderConfig,\n        );\n\n        const currentImageSmoothingStatus = context.imageSmoothingEnabled;\n\n        if (\n          // do not disable smoothing during zoom as blurry shapes look better\n          // on low resolution (while still zooming in) than sharp ones\n          !renderConfig?.shouldCacheIgnoreZoom &&\n          // angle is 0 -> always disable smoothing\n          (!element.angle ||\n            // or check if angle is a right angle in which case we can still\n            // disable smoothing without adversely affecting the result\n            isRightAngle(element.angle))\n        ) {\n          // Disabling smoothing makes output much sharper, especially for\n          // text. Unless for non-right angles, where the aliasing is really\n          // terrible on Chromium.\n          //\n          // Note that `context.imageSmoothingQuality=\"high\"` has almost\n          // zero effect.\n          //\n          context.imageSmoothingEnabled = false;\n        }\n\n        drawElementFromCanvas(elementWithCanvas, rc, context, renderConfig);\n\n        // reset\n        context.imageSmoothingEnabled = currentImageSmoothingStatus;\n      }\n      break;\n    }\n    default: {\n      // @ts-ignore\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nconst roughSVGDrawWithPrecision = (\n  rsvg: RoughSVG,\n  drawable: Drawable,\n  precision?: number,\n) => {\n  if (typeof precision === \"undefined\") {\n    return rsvg.draw(drawable);\n  }\n  const pshape: Drawable = {\n    sets: drawable.sets,\n    shape: drawable.shape,\n    options: { ...drawable.options, fixedDecimalPlaceDigits: precision },\n  };\n  return rsvg.draw(pshape);\n};\n\nconst maybeWrapNodesInFrameClipPath = (\n  element: NonDeletedExcalidrawElement,\n  root: SVGElement,\n  nodes: SVGElement[],\n  exportedFrameId?: string | null,\n) => {\n  const frame = getContainingFrame(element);\n  if (frame && frame.id === exportedFrameId) {\n    const g = root.ownerDocument!.createElementNS(SVG_NS, \"g\");\n    g.setAttributeNS(SVG_NS, \"clip-path\", `url(#${frame.id})`);\n    nodes.forEach((node) => g.appendChild(node));\n    return g;\n  }\n\n  return null;\n};\n\nexport const renderElementToSvg = (\n  element: NonDeletedExcalidrawElement,\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  files: BinaryFiles,\n  offsetX: number,\n  offsetY: number,\n  exportWithDarkMode?: boolean,\n  exportingFrameId?: string | null,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  let cx = (x2 - x1) / 2 - (element.x - x1);\n  let cy = (y2 - y1) / 2 - (element.y - y1);\n  if (isTextElement(element)) {\n    const container = getContainerElement(element);\n    if (isArrowElement(container)) {\n      const [x1, y1, x2, y2] = getElementAbsoluteCoords(container);\n\n      const boundTextCoords = LinearElementEditor.getBoundTextElementPosition(\n        container,\n        element as ExcalidrawTextElementWithContainer,\n      );\n      cx = (x2 - x1) / 2 - (boundTextCoords.x - x1);\n      cy = (y2 - y1) / 2 - (boundTextCoords.y - y1);\n      offsetX = offsetX + boundTextCoords.x - element.x;\n      offsetY = offsetY + boundTextCoords.y - element.y;\n    }\n  }\n  const degree = (180 * element.angle) / Math.PI;\n  const generator = rsvg.generator;\n\n  // element to append node to, most of the time svgRoot\n  let root = svgRoot;\n\n  // if the element has a link, create an anchor tag and make that the new root\n  if (element.link) {\n    const anchorTag = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"a\");\n    anchorTag.setAttribute(\"href\", normalizeLink(element.link));\n    root.appendChild(anchorTag);\n    root = anchorTag;\n  }\n\n  const opacity =\n    ((getContainingFrame(element)?.opacity ?? 100) * element.opacity) / 10000;\n\n  switch (element.type) {\n    case \"selection\": {\n      // Since this is used only during editing experience, which is canvas based,\n      // this should not happen\n      throw new Error(\"Selection rendering is not supported for SVG\");\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      generateElementShape(element, generator);\n      const node = roughSVGDrawWithPrecision(\n        rsvg,\n        getShapeForElement(element)!,\n        MAX_DECIMALS_FOR_SVG_EXPORT,\n      );\n      if (opacity !== 1) {\n        node.setAttribute(\"stroke-opacity\", `${opacity}`);\n        node.setAttribute(\"fill-opacity\", `${opacity}`);\n      }\n      node.setAttribute(\"stroke-linecap\", \"round\");\n      node.setAttribute(\n        \"transform\",\n        `translate(${offsetX || 0} ${\n          offsetY || 0\n        }) rotate(${degree} ${cx} ${cy})`,\n      );\n\n      const g = maybeWrapNodesInFrameClipPath(\n        element,\n        root,\n        [node],\n        exportingFrameId,\n      );\n\n      g ? root.appendChild(g) : root.appendChild(node);\n      break;\n    }\n    case \"line\":\n    case \"arrow\": {\n      const boundText = getBoundTextElement(element);\n      const maskPath = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"mask\");\n      if (boundText) {\n        maskPath.setAttribute(\"id\", `mask-${element.id}`);\n        const maskRectVisible = svgRoot.ownerDocument!.createElementNS(\n          SVG_NS,\n          \"rect\",\n        );\n        offsetX = offsetX || 0;\n        offsetY = offsetY || 0;\n        maskRectVisible.setAttribute(\"x\", \"0\");\n        maskRectVisible.setAttribute(\"y\", \"0\");\n        maskRectVisible.setAttribute(\"fill\", \"#fff\");\n        maskRectVisible.setAttribute(\n          \"width\",\n          `${element.width + 100 + offsetX}`,\n        );\n        maskRectVisible.setAttribute(\n          \"height\",\n          `${element.height + 100 + offsetY}`,\n        );\n\n        maskPath.appendChild(maskRectVisible);\n        const maskRectInvisible = svgRoot.ownerDocument!.createElementNS(\n          SVG_NS,\n          \"rect\",\n        );\n        const boundTextCoords = LinearElementEditor.getBoundTextElementPosition(\n          element,\n          boundText,\n        );\n\n        const maskX = offsetX + boundTextCoords.x - element.x;\n        const maskY = offsetY + boundTextCoords.y - element.y;\n\n        maskRectInvisible.setAttribute(\"x\", maskX.toString());\n        maskRectInvisible.setAttribute(\"y\", maskY.toString());\n        maskRectInvisible.setAttribute(\"fill\", \"#000\");\n        maskRectInvisible.setAttribute(\"width\", `${boundText.width}`);\n        maskRectInvisible.setAttribute(\"height\", `${boundText.height}`);\n        maskRectInvisible.setAttribute(\"opacity\", \"1\");\n        maskPath.appendChild(maskRectInvisible);\n      }\n      generateElementShape(element, generator);\n      const group = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n      if (boundText) {\n        group.setAttribute(\"mask\", `url(#mask-${element.id})`);\n      }\n      group.setAttribute(\"stroke-linecap\", \"round\");\n\n      getShapeForElement(element)!.forEach((shape) => {\n        const node = roughSVGDrawWithPrecision(\n          rsvg,\n          shape,\n          MAX_DECIMALS_FOR_SVG_EXPORT,\n        );\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        if (\n          element.type === \"line\" &&\n          isPathALoop(element.points) &&\n          element.backgroundColor !== \"transparent\"\n        ) {\n          node.setAttribute(\"fill-rule\", \"evenodd\");\n        }\n        group.appendChild(node);\n      });\n\n      const g = maybeWrapNodesInFrameClipPath(\n        element,\n        root,\n        [group, maskPath],\n        exportingFrameId,\n      );\n      if (g) {\n        root.appendChild(g);\n      } else {\n        root.appendChild(group);\n        root.append(maskPath);\n      }\n      break;\n    }\n    case \"freedraw\": {\n      generateElementShape(element, generator);\n      generateFreeDrawShape(element);\n      const shape = getShapeForElement(element);\n      const node = shape\n        ? roughSVGDrawWithPrecision(rsvg, shape, MAX_DECIMALS_FOR_SVG_EXPORT)\n        : svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n      if (opacity !== 1) {\n        node.setAttribute(\"stroke-opacity\", `${opacity}`);\n        node.setAttribute(\"fill-opacity\", `${opacity}`);\n      }\n      node.setAttribute(\n        \"transform\",\n        `translate(${offsetX || 0} ${\n          offsetY || 0\n        }) rotate(${degree} ${cx} ${cy})`,\n      );\n      node.setAttribute(\"stroke\", \"none\");\n      const path = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"path\");\n      path.setAttribute(\"fill\", element.strokeColor);\n      path.setAttribute(\"d\", getFreeDrawSvgPath(element));\n      node.appendChild(path);\n\n      const g = maybeWrapNodesInFrameClipPath(\n        element,\n        root,\n        [node],\n        exportingFrameId,\n      );\n\n      g ? root.appendChild(g) : root.appendChild(node);\n      break;\n    }\n    case \"image\": {\n      const width = Math.round(element.width);\n      const height = Math.round(element.height);\n      const fileData =\n        isInitializedImageElement(element) && files[element.fileId];\n      if (fileData) {\n        const symbolId = `image-${fileData.id}`;\n        let symbol = svgRoot.querySelector(`#${symbolId}`);\n        if (!symbol) {\n          symbol = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"symbol\");\n          symbol.id = symbolId;\n\n          const image = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"image\");\n\n          image.setAttribute(\"width\", \"100%\");\n          image.setAttribute(\"height\", \"100%\");\n          image.setAttribute(\"href\", fileData.dataURL);\n\n          symbol.appendChild(image);\n\n          root.prepend(symbol);\n        }\n\n        const use = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"use\");\n        use.setAttribute(\"href\", `#${symbolId}`);\n\n        // in dark theme, revert the image color filter\n        if (exportWithDarkMode && fileData.mimeType !== MIME_TYPES.svg) {\n          use.setAttribute(\"filter\", IMAGE_INVERT_FILTER);\n        }\n\n        use.setAttribute(\"width\", `${width}`);\n        use.setAttribute(\"height\", `${height}`);\n        use.setAttribute(\"opacity\", `${opacity}`);\n\n        // We first apply `scale` transforms (horizontal/vertical mirroring)\n        // on the <use> element, then apply translation and rotation\n        // on the <g> element which wraps the <use>.\n        // Doing this separately is a quick hack to to work around compositing\n        // the transformations correctly (the transform-origin was not being\n        // applied correctly).\n        if (element.scale[0] !== 1 || element.scale[1] !== 1) {\n          const translateX = element.scale[0] !== 1 ? -width : 0;\n          const translateY = element.scale[1] !== 1 ? -height : 0;\n          use.setAttribute(\n            \"transform\",\n            `scale(${element.scale[0]}, ${element.scale[1]}) translate(${translateX} ${translateY})`,\n          );\n        }\n\n        const g = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n        g.appendChild(use);\n        g.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n\n        const clipG = maybeWrapNodesInFrameClipPath(\n          element,\n          root,\n          [g],\n          exportingFrameId,\n        );\n        clipG ? root.appendChild(clipG) : root.appendChild(g);\n      }\n      break;\n    }\n    // frames are not rendered and only acts as a container\n    case \"frame\": {\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const node = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeightPx = getLineHeightInPx(\n          element.fontSize,\n          element.lineHeight,\n        );\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        const direction = isRTL(element.text) ? \"rtl\" : \"ltr\";\n        const textAnchor =\n          element.textAlign === \"center\"\n            ? \"middle\"\n            : element.textAlign === \"right\" || direction === \"rtl\"\n            ? \"end\"\n            : \"start\";\n        for (let i = 0; i < lines.length; i++) {\n          const text = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"text\");\n          text.textContent = lines[i];\n          text.setAttribute(\"x\", `${horizontalOffset}`);\n          text.setAttribute(\"y\", `${i * lineHeightPx}`);\n          text.setAttribute(\"font-family\", getFontFamilyString(element));\n          text.setAttribute(\"font-size\", `${element.fontSize}px`);\n          text.setAttribute(\"fill\", element.strokeColor);\n          text.setAttribute(\"text-anchor\", textAnchor);\n          text.setAttribute(\"style\", \"white-space: pre;\");\n          text.setAttribute(\"direction\", direction);\n          text.setAttribute(\"dominant-baseline\", \"text-before-edge\");\n          node.appendChild(text);\n        }\n\n        const g = maybeWrapNodesInFrameClipPath(\n          element,\n          root,\n          [node],\n          exportingFrameId,\n        );\n\n        g ? root.appendChild(g) : root.appendChild(node);\n      } else {\n        // @ts-ignore\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n};\n\nexport const pathsCache = new WeakMap<ExcalidrawFreeDrawElement, Path2D>([]);\n\nexport function generateFreeDrawShape(element: ExcalidrawFreeDrawElement) {\n  const svgPathData = getFreeDrawSvgPath(element);\n  const path = new Path2D(svgPathData);\n  pathsCache.set(element, path);\n  return path;\n}\n\nexport function getFreeDrawPath2D(element: ExcalidrawFreeDrawElement) {\n  return pathsCache.get(element);\n}\n\nexport function getFreeDrawSvgPath(element: ExcalidrawFreeDrawElement) {\n  // If input points are empty (should they ever be?) return a dot\n  const inputPoints = element.simulatePressure\n    ? element.points\n    : element.points.length\n    ? element.points.map(([x, y], i) => [x, y, element.pressures[i]])\n    : [[0, 0, 0.5]];\n\n  // Consider changing the options for simulated pressure vs real pressure\n  const options: StrokeOptions = {\n    simulatePressure: element.simulatePressure,\n    size: element.strokeWidth * 4.25,\n    thinning: 0.6,\n    smoothing: 0.5,\n    streamline: 0.5,\n    easing: (t) => Math.sin((t * Math.PI) / 2), // https://easings.net/#easeOutSine\n    last: !!element.lastCommittedPoint, // LastCommittedPoint is added on pointerup\n  };\n\n  return getSvgPathFromStroke(getStroke(inputPoints as number[][], options));\n}\n\nfunction med(A: number[], B: number[]) {\n  return [(A[0] + B[0]) / 2, (A[1] + B[1]) / 2];\n}\n\n// Trim SVG path data so number are each two decimal points. This\n// improves SVG exports, and prevents rendering errors on points\n// with long decimals.\nconst TO_FIXED_PRECISION = /(\\s?[A-Z]?,?-?[0-9]*\\.[0-9]{0,2})(([0-9]|e|-)*)/g;\n\nfunction getSvgPathFromStroke(points: number[][]): string {\n  if (!points.length) {\n    return \"\";\n  }\n\n  const max = points.length - 1;\n\n  return points\n    .reduce(\n      (acc, point, i, arr) => {\n        if (i === max) {\n          acc.push(point, med(point, arr[0]), \"L\", arr[0], \"Z\");\n        } else {\n          acc.push(point, med(point, arr[i + 1]));\n        }\n        return acc;\n      },\n      [\"M\", points[0], \"Q\"],\n    )\n    .join(\" \")\n    .replace(TO_FIXED_PRECISION, \"$1\");\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}