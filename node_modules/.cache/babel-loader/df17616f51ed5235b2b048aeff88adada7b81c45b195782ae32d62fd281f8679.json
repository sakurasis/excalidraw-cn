{"ast":null,"code":"import _toConsumableArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _createClass from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _inherits from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createSuper.js\";/**\n * This file deals with saving data state (appState, elements, images, ...)\n * locally to the browser.\n *\n * Notes:\n *\n * - DataState refers to full state of the app: appState, elements, images,\n *   though some state is saved separately (collab username, library) for one\n *   reason or another. We also save different data to different sotrage\n *   (localStorage, indexedDB).\n */import{createStore,entries,del,getMany,set,setMany}from\"idb-keyval\";import{clearAppStateForLocalStorage}from\"../../appState\";import{clearElementsForLocalStorage}from\"../../element\";import{debounce}from\"../../utils\";import{SAVE_TO_LOCAL_STORAGE_TIMEOUT,STORAGE_KEYS}from\"../app_constants\";import{FileManager}from\"./FileManager\";import{Locker}from\"./Locker\";import{updateBrowserStateVersion}from\"./tabSync\";var filesStore=createStore(\"files-db\",\"files-store\");var LocalFileManager=/*#__PURE__*/function(_FileManager){_inherits(LocalFileManager,_FileManager);var _super=_createSuper(LocalFileManager);function LocalFileManager(){var _this;_classCallCheck(this,LocalFileManager);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.clearObsoleteFiles=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(opts){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return entries(filesStore).then(function(entries){for(var _i=0,_arr=entries;_i<_arr.length;_i++){var _arr$_i=_slicedToArray(_arr[_i],2),id=_arr$_i[0],imageData=_arr$_i[1];// if image is unused (not on canvas) & is older than 1 day, delete it\n// from storage. We check `lastRetrieved` we care about the last time\n// the image was used (loaded on canvas), not when it was initially\n// created.\nif((!imageData.lastRetrieved||Date.now()-imageData.lastRetrieved>24*3600*1000)&&!opts.currentFileIds.includes(id)){del(id,filesStore);}}});case 2:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();return _this;}return _createClass(LocalFileManager);}(FileManager);var saveDataStateToLocalStorage=function saveDataStateToLocalStorage(elements,appState){try{localStorage.setItem(STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS,JSON.stringify(clearElementsForLocalStorage(elements)));localStorage.setItem(STORAGE_KEYS.LOCAL_STORAGE_APP_STATE,JSON.stringify(clearAppStateForLocalStorage(appState)));updateBrowserStateVersion(STORAGE_KEYS.VERSION_DATA_STATE);}catch(error){// Unable to access window.localStorage\nconsole.error(error);}};export var LocalData=/*#__PURE__*/_createClass(function LocalData(){_classCallCheck(this,LocalData);});LocalData._save=debounce(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(elements,appState,files,onFilesSaved){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:saveDataStateToLocalStorage(elements,appState);_context2.next=3;return LocalData.fileStorage.saveFiles({elements:elements,files:files});case 3:onFilesSaved();case 4:case\"end\":return _context2.stop();}},_callee2);}));return function(_x2,_x3,_x4,_x5){return _ref2.apply(this,arguments);};}(),SAVE_TO_LOCAL_STORAGE_TIMEOUT);/** Saves DataState, including files. Bails if saving is paused */LocalData.save=function(elements,appState,files,onFilesSaved){// we need to make the `isSavePaused` check synchronously (undebounced)\nif(!LocalData.isSavePaused()){LocalData._save(elements,appState,files,onFilesSaved);}};LocalData.flushSave=function(){LocalData._save.flush();};LocalData.locker=new Locker();LocalData.pauseSave=function(lockType){LocalData.locker.lock(lockType);};LocalData.resumeSave=function(lockType){LocalData.locker.unlock(lockType);};LocalData.isSavePaused=function(){return document.hidden||LocalData.locker.isLocked();};// ---------------------------------------------------------------------------\nLocalData.fileStorage=new LocalFileManager({getFiles:function getFiles(ids){return getMany(ids,filesStore).then(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(filesData){var loadedFiles,erroredFiles,filesToSave;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:loadedFiles=[];erroredFiles=new Map();filesToSave=[];filesData.forEach(function(data,index){var id=ids[index];if(data){var _data=_objectSpread(_objectSpread({},data),{},{lastRetrieved:Date.now()});filesToSave.push([id,_data]);loadedFiles.push(_data);}else{erroredFiles.set(id,true);}});try{// save loaded files back to storage with updated `lastRetrieved`\nsetMany(filesToSave,filesStore);}catch(error){console.warn(error);}return _context3.abrupt(\"return\",{loadedFiles:loadedFiles,erroredFiles:erroredFiles});case 6:case\"end\":return _context3.stop();}},_callee3);}));return function(_x6){return _ref3.apply(this,arguments);};}());},saveFiles:function saveFiles(_ref4){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var addedFiles,savedFiles,erroredFiles;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:addedFiles=_ref4.addedFiles;savedFiles=new Map();erroredFiles=new Map();// before we use `storage` event synchronization, let's update the flag\n// optimistically. Hopefully nothing fails, and an IDB read executed\n// before an IDB write finishes will read the latest value.\nupdateBrowserStateVersion(STORAGE_KEYS.VERSION_FILES);_context5.next=6;return Promise.all(_toConsumableArray(addedFiles).map(/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref5){var _ref7,id,fileData;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_ref7=_slicedToArray(_ref5,2),id=_ref7[0],fileData=_ref7[1];_context4.prev=1;_context4.next=4;return set(id,fileData,filesStore);case 4:savedFiles.set(id,true);_context4.next=11;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](1);console.error(_context4.t0);erroredFiles.set(id,true);case 11:case\"end\":return _context4.stop();}},_callee4,null,[[1,7]]);}));return function(_x7){return _ref6.apply(this,arguments);};}()));case 6:return _context5.abrupt(\"return\",{savedFiles:savedFiles,erroredFiles:erroredFiles});case 7:case\"end\":return _context5.stop();}},_callee5);}))();}});","map":{"version":3,"names":["createStore","entries","del","getMany","set","setMany","clearAppStateForLocalStorage","clearElementsForLocalStorage","debounce","SAVE_TO_LOCAL_STORAGE_TIMEOUT","STORAGE_KEYS","FileManager","Locker","updateBrowserStateVersion","filesStore","LocalFileManager","_FileManager","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","clearObsoleteFiles","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","opts","wrap","_callee$","_context","prev","next","then","_i","_arr","_arr$_i","_slicedToArray","id","imageData","lastRetrieved","Date","now","currentFileIds","includes","stop","_x","_createClass","saveDataStateToLocalStorage","elements","appState","localStorage","setItem","LOCAL_STORAGE_ELEMENTS","JSON","stringify","LOCAL_STORAGE_APP_STATE","VERSION_DATA_STATE","error","console","LocalData","_save","_ref2","_callee2","files","onFilesSaved","_callee2$","_context2","fileStorage","saveFiles","_x2","_x3","_x4","_x5","save","isSavePaused","flushSave","flush","locker","pauseSave","lockType","lock","resumeSave","unlock","document","hidden","isLocked","getFiles","ids","_ref3","_callee3","filesData","loadedFiles","erroredFiles","filesToSave","_callee3$","_context3","Map","forEach","data","index","_data","_objectSpread","push","warn","abrupt","_x6","_ref4","_callee5","addedFiles","savedFiles","_callee5$","_context5","VERSION_FILES","Promise","all","_toConsumableArray","map","_ref6","_callee4","_ref5","_ref7","fileData","_callee4$","_context4","t0","_x7"],"sources":["D:/project/excalidraw-cn/src/excalidraw-app/data/LocalData.ts"],"sourcesContent":["/**\n * This file deals with saving data state (appState, elements, images, ...)\n * locally to the browser.\n *\n * Notes:\n *\n * - DataState refers to full state of the app: appState, elements, images,\n *   though some state is saved separately (collab username, library) for one\n *   reason or another. We also save different data to different sotrage\n *   (localStorage, indexedDB).\n */\n\nimport { createStore, entries, del, getMany, set, setMany } from \"idb-keyval\";\nimport { clearAppStateForLocalStorage } from \"../../appState\";\nimport { clearElementsForLocalStorage } from \"../../element\";\nimport { ExcalidrawElement, FileId } from \"../../element/types\";\nimport { AppState, BinaryFileData, BinaryFiles } from \"../../types\";\nimport { debounce } from \"../../utils\";\nimport { SAVE_TO_LOCAL_STORAGE_TIMEOUT, STORAGE_KEYS } from \"../app_constants\";\nimport { FileManager } from \"./FileManager\";\nimport { Locker } from \"./Locker\";\nimport { updateBrowserStateVersion } from \"./tabSync\";\n\nconst filesStore = createStore(\"files-db\", \"files-store\");\n\nclass LocalFileManager extends FileManager {\n  clearObsoleteFiles = async (opts: { currentFileIds: FileId[] }) => {\n    await entries(filesStore).then((entries) => {\n      for (const [id, imageData] of entries as [FileId, BinaryFileData][]) {\n        // if image is unused (not on canvas) & is older than 1 day, delete it\n        // from storage. We check `lastRetrieved` we care about the last time\n        // the image was used (loaded on canvas), not when it was initially\n        // created.\n        if (\n          (!imageData.lastRetrieved ||\n            Date.now() - imageData.lastRetrieved > 24 * 3600 * 1000) &&\n          !opts.currentFileIds.includes(id as FileId)\n        ) {\n          del(id, filesStore);\n        }\n      }\n    });\n  };\n}\n\nconst saveDataStateToLocalStorage = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  try {\n    localStorage.setItem(\n      STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS,\n      JSON.stringify(clearElementsForLocalStorage(elements)),\n    );\n    localStorage.setItem(\n      STORAGE_KEYS.LOCAL_STORAGE_APP_STATE,\n      JSON.stringify(clearAppStateForLocalStorage(appState)),\n    );\n    updateBrowserStateVersion(STORAGE_KEYS.VERSION_DATA_STATE);\n  } catch (error: any) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\ntype SavingLockTypes = \"collaboration\";\n\nexport class LocalData {\n  private static _save = debounce(\n    async (\n      elements: readonly ExcalidrawElement[],\n      appState: AppState,\n      files: BinaryFiles,\n      onFilesSaved: () => void,\n    ) => {\n      saveDataStateToLocalStorage(elements, appState);\n\n      await this.fileStorage.saveFiles({\n        elements,\n        files,\n      });\n      onFilesSaved();\n    },\n    SAVE_TO_LOCAL_STORAGE_TIMEOUT,\n  );\n\n  /** Saves DataState, including files. Bails if saving is paused */\n  static save = (\n    elements: readonly ExcalidrawElement[],\n    appState: AppState,\n    files: BinaryFiles,\n    onFilesSaved: () => void,\n  ) => {\n    // we need to make the `isSavePaused` check synchronously (undebounced)\n    if (!this.isSavePaused()) {\n      this._save(elements, appState, files, onFilesSaved);\n    }\n  };\n\n  static flushSave = () => {\n    this._save.flush();\n  };\n\n  private static locker = new Locker<SavingLockTypes>();\n\n  static pauseSave = (lockType: SavingLockTypes) => {\n    this.locker.lock(lockType);\n  };\n\n  static resumeSave = (lockType: SavingLockTypes) => {\n    this.locker.unlock(lockType);\n  };\n\n  static isSavePaused = () => {\n    return document.hidden || this.locker.isLocked();\n  };\n\n  // ---------------------------------------------------------------------------\n\n  static fileStorage = new LocalFileManager({\n    getFiles(ids) {\n      return getMany(ids, filesStore).then(\n        async (filesData: (BinaryFileData | undefined)[]) => {\n          const loadedFiles: BinaryFileData[] = [];\n          const erroredFiles = new Map<FileId, true>();\n\n          const filesToSave: [FileId, BinaryFileData][] = [];\n\n          filesData.forEach((data, index) => {\n            const id = ids[index];\n            if (data) {\n              const _data: BinaryFileData = {\n                ...data,\n                lastRetrieved: Date.now(),\n              };\n              filesToSave.push([id, _data]);\n              loadedFiles.push(_data);\n            } else {\n              erroredFiles.set(id, true);\n            }\n          });\n\n          try {\n            // save loaded files back to storage with updated `lastRetrieved`\n            setMany(filesToSave, filesStore);\n          } catch (error) {\n            console.warn(error);\n          }\n\n          return { loadedFiles, erroredFiles };\n        },\n      );\n    },\n    async saveFiles({ addedFiles }) {\n      const savedFiles = new Map<FileId, true>();\n      const erroredFiles = new Map<FileId, true>();\n\n      // before we use `storage` event synchronization, let's update the flag\n      // optimistically. Hopefully nothing fails, and an IDB read executed\n      // before an IDB write finishes will read the latest value.\n      updateBrowserStateVersion(STORAGE_KEYS.VERSION_FILES);\n\n      await Promise.all(\n        [...addedFiles].map(async ([id, fileData]) => {\n          try {\n            await set(id, fileData, filesStore);\n            savedFiles.set(id, true);\n          } catch (error: any) {\n            console.error(error);\n            erroredFiles.set(id, true);\n          }\n        }),\n      );\n\n      return { savedFiles, erroredFiles };\n    },\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}