{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\actions\\\\actionNavigate.tsx\";\nimport { getClientColor } from \"../clients\";\nimport { Avatar } from \"../components/Avatar\";\nimport { centerScrollOn } from \"../scene/scroll\";\nimport { register } from \"./register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const actionGoToCollaborator = register({\n  name: \"goToCollaborator\",\n  viewMode: true,\n  trackEvent: {\n    category: \"collab\"\n  },\n  perform: (_elements, appState, value) => {\n    const point = value;\n    if (!point) {\n      return {\n        appState,\n        commitToHistory: false\n      };\n    }\n    return {\n      appState: {\n        ...appState,\n        ...centerScrollOn({\n          scenePoint: point,\n          viewportDimensions: {\n            width: appState.width,\n            height: appState.height\n          },\n          zoom: appState.zoom\n        }),\n        // Close mobile menu\n        openMenu: appState.openMenu === \"canvas\" ? null : appState.openMenu\n      },\n      commitToHistory: false\n    };\n  },\n  PanelComponent: _ref => {\n    let {\n      updateData,\n      data\n    } = _ref;\n    const [clientId, collaborator] = data;\n    const background = getClientColor(clientId);\n    return /*#__PURE__*/_jsxDEV(Avatar, {\n      color: background,\n      onClick: () => updateData(collaborator.pointer),\n      name: collaborator.username || \"\",\n      src: collaborator.avatarUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n});","map":{"version":3,"names":["getClientColor","Avatar","centerScrollOn","register","jsxDEV","_jsxDEV","actionGoToCollaborator","name","viewMode","trackEvent","category","perform","_elements","appState","value","point","commitToHistory","scenePoint","viewportDimensions","width","height","zoom","openMenu","PanelComponent","_ref","updateData","data","clientId","collaborator","background","color","onClick","pointer","username","src","avatarUrl","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/project/excalidraw-cn/src/actions/actionNavigate.tsx"],"sourcesContent":["import { getClientColor } from \"../clients\";\nimport { Avatar } from \"../components/Avatar\";\nimport { centerScrollOn } from \"../scene/scroll\";\nimport { Collaborator } from \"../types\";\nimport { register } from \"./register\";\n\nexport const actionGoToCollaborator = register({\n  name: \"goToCollaborator\",\n  viewMode: true,\n  trackEvent: { category: \"collab\" },\n  perform: (_elements, appState, value) => {\n    const point = value as Collaborator[\"pointer\"];\n    if (!point) {\n      return { appState, commitToHistory: false };\n    }\n\n    return {\n      appState: {\n        ...appState,\n        ...centerScrollOn({\n          scenePoint: point,\n          viewportDimensions: {\n            width: appState.width,\n            height: appState.height,\n          },\n          zoom: appState.zoom,\n        }),\n        // Close mobile menu\n        openMenu: appState.openMenu === \"canvas\" ? null : appState.openMenu,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData, data }) => {\n    const [clientId, collaborator] = data as [string, Collaborator];\n\n    const background = getClientColor(clientId);\n\n    return (\n      <Avatar\n        color={background}\n        onClick={() => updateData(collaborator.pointer)}\n        name={collaborator.username || \"\"}\n        src={collaborator.avatarUrl}\n      />\n    );\n  },\n});\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,YAAY;AAC3C,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,cAAc,QAAQ,iBAAiB;AAEhD,SAASC,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,MAAMC,sBAAsB,GAAGH,QAAQ,CAAC;EAC7CI,IAAI,EAAE,kBAAkB;EACxBC,QAAQ,EAAE,IAAI;EACdC,UAAU,EAAE;IAAEC,QAAQ,EAAE;EAAS,CAAC;EAClCC,OAAO,EAAEA,CAACC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,KAAK;IACvC,MAAMC,KAAK,GAAGD,KAAgC;IAC9C,IAAI,CAACC,KAAK,EAAE;MACV,OAAO;QAAEF,QAAQ;QAAEG,eAAe,EAAE;MAAM,CAAC;IAC7C;IAEA,OAAO;MACLH,QAAQ,EAAE;QACR,GAAGA,QAAQ;QACX,GAAGX,cAAc,CAAC;UAChBe,UAAU,EAAEF,KAAK;UACjBG,kBAAkB,EAAE;YAClBC,KAAK,EAAEN,QAAQ,CAACM,KAAK;YACrBC,MAAM,EAAEP,QAAQ,CAACO;UACnB,CAAC;UACDC,IAAI,EAAER,QAAQ,CAACQ;QACjB,CAAC,CAAC;QACF;QACAC,QAAQ,EAAET,QAAQ,CAACS,QAAQ,KAAK,QAAQ,GAAG,IAAI,GAAGT,QAAQ,CAACS;MAC7D,CAAC;MACDN,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDO,cAAc,EAAEC,IAAA,IAA0B;IAAA,IAAzB;MAAEC,UAAU;MAAEC;IAAK,CAAC,GAAAF,IAAA;IACnC,MAAM,CAACG,QAAQ,EAAEC,YAAY,CAAC,GAAGF,IAA8B;IAE/D,MAAMG,UAAU,GAAG7B,cAAc,CAAC2B,QAAQ,CAAC;IAE3C,oBACEtB,OAAA,CAACJ,MAAM;MACL6B,KAAK,EAAED,UAAW;MAClBE,OAAO,EAAEA,CAAA,KAAMN,UAAU,CAACG,YAAY,CAACI,OAAO,CAAE;MAChDzB,IAAI,EAAEqB,YAAY,CAACK,QAAQ,IAAI,EAAG;MAClCC,GAAG,EAAEN,YAAY,CAACO;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5B;EAEN;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}