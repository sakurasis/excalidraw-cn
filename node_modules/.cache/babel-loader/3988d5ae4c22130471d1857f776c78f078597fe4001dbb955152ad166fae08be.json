{"ast":null,"code":"import { atom } from \"jotai\";\nimport { MAX_CUSTOM_COLORS_USED_IN_CANVAS } from \"../../colors\";\nexport const getColorNameAndShadeFromColor = _ref => {\n  let {\n    palette,\n    color\n  } = _ref;\n  for (const [colorName, colorVal] of Object.entries(palette)) {\n    if (Array.isArray(colorVal)) {\n      const shade = colorVal.indexOf(color);\n      if (shade > -1) {\n        return {\n          colorName: colorName,\n          shade\n        };\n      }\n    } else if (colorVal === color) {\n      return {\n        colorName: colorName,\n        shade: null\n      };\n    }\n  }\n  return null;\n};\nexport const colorPickerHotkeyBindings = [[\"q\", \"w\", \"e\", \"r\", \"t\"], [\"a\", \"s\", \"d\", \"f\", \"g\"], [\"z\", \"x\", \"c\", \"v\", \"b\"]].flat();\nexport const isCustomColor = _ref2 => {\n  let {\n    color,\n    palette\n  } = _ref2;\n  const paletteValues = Object.values(palette).flat();\n  return !paletteValues.includes(color);\n};\nexport const getMostUsedCustomColors = (elements, type, palette) => {\n  const elementColorTypeMap = {\n    elementBackground: \"backgroundColor\",\n    elementStroke: \"strokeColor\"\n  };\n  const colors = elements.filter(element => {\n    if (element.isDeleted) {\n      return false;\n    }\n    const color = element[elementColorTypeMap[type]];\n    return isCustomColor({\n      color,\n      palette\n    });\n  });\n  const colorCountMap = new Map();\n  colors.forEach(element => {\n    const color = element[elementColorTypeMap[type]];\n    if (colorCountMap.has(color)) {\n      colorCountMap.set(color, colorCountMap.get(color) + 1);\n    } else {\n      colorCountMap.set(color, 1);\n    }\n  });\n  return [...colorCountMap.entries()].sort((a, b) => b[1] - a[1]).map(c => c[0]).slice(0, MAX_CUSTOM_COLORS_USED_IN_CANVAS);\n};\nexport const activeColorPickerSectionAtom = atom(null);\nconst calculateContrast = (r, g, b) => {\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  return yiq >= 160 ? \"black\" : \"white\";\n};\n\n// inspiration from https://stackoverflow.com/a/11868398\nexport const getContrastYIQ = (bgHex, isCustomColor) => {\n  if (isCustomColor) {\n    const style = new Option().style;\n    style.color = bgHex;\n    if (style.color) {\n      const rgb = style.color.replace(/^(rgb|rgba)\\(/, \"\").replace(/\\)$/, \"\").replace(/\\s/g, \"\").split(\",\");\n      const r = parseInt(rgb[0]);\n      const g = parseInt(rgb[1]);\n      const b = parseInt(rgb[2]);\n      return calculateContrast(r, g, b);\n    }\n  }\n\n  // TODO: ? is this wanted?\n  if (bgHex === \"transparent\") {\n    return \"black\";\n  }\n  const r = parseInt(bgHex.substring(1, 3), 16);\n  const g = parseInt(bgHex.substring(3, 5), 16);\n  const b = parseInt(bgHex.substring(5, 7), 16);\n  return calculateContrast(r, g, b);\n};","map":{"version":3,"names":["atom","MAX_CUSTOM_COLORS_USED_IN_CANVAS","getColorNameAndShadeFromColor","_ref","palette","color","colorName","colorVal","Object","entries","Array","isArray","shade","indexOf","colorPickerHotkeyBindings","flat","isCustomColor","_ref2","paletteValues","values","includes","getMostUsedCustomColors","elements","type","elementColorTypeMap","elementBackground","elementStroke","colors","filter","element","isDeleted","colorCountMap","Map","forEach","has","set","get","sort","a","b","map","c","slice","activeColorPickerSectionAtom","calculateContrast","r","g","yiq","getContrastYIQ","bgHex","style","Option","rgb","replace","split","parseInt","substring"],"sources":["D:/project/excalidraw-cn/src/components/ColorPicker/colorPickerUtils.ts"],"sourcesContent":["import { ExcalidrawElement } from \"../../element/types\";\nimport { atom } from \"jotai\";\nimport {\n  ColorPickerColor,\n  ColorPaletteCustom,\n  MAX_CUSTOM_COLORS_USED_IN_CANVAS,\n} from \"../../colors\";\n\nexport const getColorNameAndShadeFromColor = ({\n  palette,\n  color,\n}: {\n  palette: ColorPaletteCustom;\n  color: string;\n}): {\n  colorName: ColorPickerColor;\n  shade: number | null;\n} | null => {\n  for (const [colorName, colorVal] of Object.entries(palette)) {\n    if (Array.isArray(colorVal)) {\n      const shade = colorVal.indexOf(color);\n      if (shade > -1) {\n        return { colorName: colorName as ColorPickerColor, shade };\n      }\n    } else if (colorVal === color) {\n      return { colorName: colorName as ColorPickerColor, shade: null };\n    }\n  }\n  return null;\n};\n\nexport const colorPickerHotkeyBindings = [\n  [\"q\", \"w\", \"e\", \"r\", \"t\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\"],\n  [\"z\", \"x\", \"c\", \"v\", \"b\"],\n].flat();\n\nexport const isCustomColor = ({\n  color,\n  palette,\n}: {\n  color: string;\n  palette: ColorPaletteCustom;\n}) => {\n  const paletteValues = Object.values(palette).flat();\n  return !paletteValues.includes(color);\n};\n\nexport const getMostUsedCustomColors = (\n  elements: readonly ExcalidrawElement[],\n  type: \"elementBackground\" | \"elementStroke\",\n  palette: ColorPaletteCustom,\n) => {\n  const elementColorTypeMap = {\n    elementBackground: \"backgroundColor\",\n    elementStroke: \"strokeColor\",\n  };\n\n  const colors = elements.filter((element) => {\n    if (element.isDeleted) {\n      return false;\n    }\n\n    const color =\n      element[elementColorTypeMap[type] as \"backgroundColor\" | \"strokeColor\"];\n\n    return isCustomColor({ color, palette });\n  });\n\n  const colorCountMap = new Map<string, number>();\n  colors.forEach((element) => {\n    const color =\n      element[elementColorTypeMap[type] as \"backgroundColor\" | \"strokeColor\"];\n    if (colorCountMap.has(color)) {\n      colorCountMap.set(color, colorCountMap.get(color)! + 1);\n    } else {\n      colorCountMap.set(color, 1);\n    }\n  });\n\n  return [...colorCountMap.entries()]\n    .sort((a, b) => b[1] - a[1])\n    .map((c) => c[0])\n    .slice(0, MAX_CUSTOM_COLORS_USED_IN_CANVAS);\n};\n\nexport type ActiveColorPickerSectionAtomType =\n  | \"custom\"\n  | \"baseColors\"\n  | \"shades\"\n  | \"hex\"\n  | null;\nexport const activeColorPickerSectionAtom =\n  atom<ActiveColorPickerSectionAtomType>(null);\n\nconst calculateContrast = (r: number, g: number, b: number) => {\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  return yiq >= 160 ? \"black\" : \"white\";\n};\n\n// inspiration from https://stackoverflow.com/a/11868398\nexport const getContrastYIQ = (bgHex: string, isCustomColor: boolean) => {\n  if (isCustomColor) {\n    const style = new Option().style;\n    style.color = bgHex;\n\n    if (style.color) {\n      const rgb = style.color\n        .replace(/^(rgb|rgba)\\(/, \"\")\n        .replace(/\\)$/, \"\")\n        .replace(/\\s/g, \"\")\n        .split(\",\");\n      const r = parseInt(rgb[0]);\n      const g = parseInt(rgb[1]);\n      const b = parseInt(rgb[2]);\n\n      return calculateContrast(r, g, b);\n    }\n  }\n\n  // TODO: ? is this wanted?\n  if (bgHex === \"transparent\") {\n    return \"black\";\n  }\n\n  const r = parseInt(bgHex.substring(1, 3), 16);\n  const g = parseInt(bgHex.substring(3, 5), 16);\n  const b = parseInt(bgHex.substring(5, 7), 16);\n\n  return calculateContrast(r, g, b);\n};\n\nexport type ColorPickerType =\n  | \"canvasBackground\"\n  | \"elementBackground\"\n  | \"elementStroke\";\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}