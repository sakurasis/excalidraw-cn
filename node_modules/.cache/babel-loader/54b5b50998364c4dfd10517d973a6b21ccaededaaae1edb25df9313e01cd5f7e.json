{"ast":null,"code":"import { fileOpen as _fileOpen, fileSave as _fileSave, supported as nativeFileSystemSupported } from \"browser-fs-access\";\nimport { EVENT, MIME_TYPES } from \"../constants\";\nimport { AbortError } from \"../errors\";\nimport { debounce } from \"../utils\";\nconst INPUT_CHANGE_INTERVAL_MS = 500;\nexport const fileOpen = opts => {\n  var _opts$extensions, _opts$extensions2, _opts$multiple;\n  // an unsafe TS hack, alas not much we can do AFAIK\n\n  const mimeTypes = (_opts$extensions = opts.extensions) === null || _opts$extensions === void 0 ? void 0 : _opts$extensions.reduce((mimeTypes, type) => {\n    mimeTypes.push(MIME_TYPES[type]);\n    return mimeTypes;\n  }, []);\n  const extensions = (_opts$extensions2 = opts.extensions) === null || _opts$extensions2 === void 0 ? void 0 : _opts$extensions2.reduce((acc, ext) => {\n    if (ext === \"jpg\") {\n      return acc.concat(\".jpg\", \".jpeg\");\n    }\n    return acc.concat(`.${ext}`);\n  }, []);\n  return _fileOpen({\n    description: opts.description,\n    extensions,\n    mimeTypes,\n    multiple: (_opts$multiple = opts.multiple) !== null && _opts$multiple !== void 0 ? _opts$multiple : false,\n    legacySetup: (resolve, reject, input) => {\n      const scheduleRejection = debounce(reject, INPUT_CHANGE_INTERVAL_MS);\n      const focusHandler = () => {\n        checkForFile();\n        document.addEventListener(EVENT.KEYUP, scheduleRejection);\n        document.addEventListener(EVENT.POINTER_UP, scheduleRejection);\n        scheduleRejection();\n      };\n      const checkForFile = () => {\n        var _input$files;\n        // this hack might not work when expecting multiple files\n        if ((_input$files = input.files) !== null && _input$files !== void 0 && _input$files.length) {\n          const ret = opts.multiple ? [...input.files] : input.files[0];\n          resolve(ret);\n        }\n      };\n      requestAnimationFrame(() => {\n        window.addEventListener(EVENT.FOCUS, focusHandler);\n      });\n      const interval = window.setInterval(() => {\n        checkForFile();\n      }, INPUT_CHANGE_INTERVAL_MS);\n      return rejectPromise => {\n        clearInterval(interval);\n        scheduleRejection.cancel();\n        window.removeEventListener(EVENT.FOCUS, focusHandler);\n        document.removeEventListener(EVENT.KEYUP, scheduleRejection);\n        document.removeEventListener(EVENT.POINTER_UP, scheduleRejection);\n        if (rejectPromise) {\n          // so that something is shown in console if we need to debug this\n          console.warn(\"Opening the file was canceled (legacy-fs).\");\n          rejectPromise(new AbortError());\n        }\n      };\n    }\n  });\n};\nexport const fileSave = (blob, opts) => {\n  return _fileSave(blob, {\n    fileName: `${opts.name}.${opts.extension}`,\n    description: opts.description,\n    extensions: [`.${opts.extension}`]\n  }, opts.fileHandle);\n};\nexport { nativeFileSystemSupported };","map":{"version":3,"names":["fileOpen","_fileOpen","fileSave","_fileSave","supported","nativeFileSystemSupported","EVENT","MIME_TYPES","AbortError","debounce","INPUT_CHANGE_INTERVAL_MS","opts","_opts$extensions","_opts$extensions2","_opts$multiple","mimeTypes","extensions","reduce","type","push","acc","ext","concat","description","multiple","legacySetup","resolve","reject","input","scheduleRejection","focusHandler","checkForFile","document","addEventListener","KEYUP","POINTER_UP","_input$files","files","length","ret","requestAnimationFrame","window","FOCUS","interval","setInterval","rejectPromise","clearInterval","cancel","removeEventListener","console","warn","blob","fileName","name","extension","fileHandle"],"sources":["D:/project/excalidraw-cn/src/data/filesystem.ts"],"sourcesContent":["import {\n  fileOpen as _fileOpen,\n  fileSave as _fileSave,\n  FileSystemHandle,\n  supported as nativeFileSystemSupported,\n} from \"browser-fs-access\";\nimport { EVENT, MIME_TYPES } from \"../constants\";\nimport { AbortError } from \"../errors\";\nimport { debounce } from \"../utils\";\n\ntype FILE_EXTENSION = Exclude<keyof typeof MIME_TYPES, \"binary\">;\n\nconst INPUT_CHANGE_INTERVAL_MS = 500;\n\nexport const fileOpen = <M extends boolean | undefined = false>(opts: {\n  extensions?: FILE_EXTENSION[];\n  description: string;\n  multiple?: M;\n}): Promise<M extends false | undefined ? File : File[]> => {\n  // an unsafe TS hack, alas not much we can do AFAIK\n  type RetType = M extends false | undefined ? File : File[];\n\n  const mimeTypes = opts.extensions?.reduce((mimeTypes, type) => {\n    mimeTypes.push(MIME_TYPES[type]);\n\n    return mimeTypes;\n  }, [] as string[]);\n\n  const extensions = opts.extensions?.reduce((acc, ext) => {\n    if (ext === \"jpg\") {\n      return acc.concat(\".jpg\", \".jpeg\");\n    }\n    return acc.concat(`.${ext}`);\n  }, [] as string[]);\n\n  return _fileOpen({\n    description: opts.description,\n    extensions,\n    mimeTypes,\n    multiple: opts.multiple ?? false,\n    legacySetup: (resolve, reject, input) => {\n      const scheduleRejection = debounce(reject, INPUT_CHANGE_INTERVAL_MS);\n      const focusHandler = () => {\n        checkForFile();\n        document.addEventListener(EVENT.KEYUP, scheduleRejection);\n        document.addEventListener(EVENT.POINTER_UP, scheduleRejection);\n        scheduleRejection();\n      };\n      const checkForFile = () => {\n        // this hack might not work when expecting multiple files\n        if (input.files?.length) {\n          const ret = opts.multiple ? [...input.files] : input.files[0];\n          resolve(ret as RetType);\n        }\n      };\n      requestAnimationFrame(() => {\n        window.addEventListener(EVENT.FOCUS, focusHandler);\n      });\n      const interval = window.setInterval(() => {\n        checkForFile();\n      }, INPUT_CHANGE_INTERVAL_MS);\n      return (rejectPromise) => {\n        clearInterval(interval);\n        scheduleRejection.cancel();\n        window.removeEventListener(EVENT.FOCUS, focusHandler);\n        document.removeEventListener(EVENT.KEYUP, scheduleRejection);\n        document.removeEventListener(EVENT.POINTER_UP, scheduleRejection);\n        if (rejectPromise) {\n          // so that something is shown in console if we need to debug this\n          console.warn(\"Opening the file was canceled (legacy-fs).\");\n          rejectPromise(new AbortError());\n        }\n      };\n    },\n  }) as Promise<RetType>;\n};\n\nexport const fileSave = (\n  blob: Blob,\n  opts: {\n    /** supply without the extension */\n    name: string;\n    /** file extension */\n    extension: FILE_EXTENSION;\n    description: string;\n    /** existing FileSystemHandle */\n    fileHandle?: FileSystemHandle | null;\n  },\n) => {\n  return _fileSave(\n    blob,\n    {\n      fileName: `${opts.name}.${opts.extension}`,\n      description: opts.description,\n      extensions: [`.${opts.extension}`],\n    },\n    opts.fileHandle,\n  );\n};\n\nexport type { FileSystemHandle };\nexport { nativeFileSystemSupported };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}