{"ast":null,"code":"import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{CODES,KEYS}from\"../keys\";import{register}from\"./register\";import{GRID_SIZE}from\"../constants\";export var actionToggleGridMode=register({name:\"gridMode\",viewMode:true,trackEvent:{category:\"canvas\",predicate:function predicate(appState){return!appState.gridSize;}},perform:function perform(elements,appState){return{appState:_objectSpread(_objectSpread({},appState),{},{gridSize:this.checked(appState)?null:GRID_SIZE}),commitToHistory:false};},checked:function checked(appState){return appState.gridSize!==null;},predicate:function predicate(element,appState,props){return typeof props.gridModeEnabled===\"undefined\";},contextItemLabel:\"labels.showGrid\",keyTest:function keyTest(event){return event[KEYS.CTRL_OR_CMD]&&event.code===CODES.QUOTE;}});","map":{"version":3,"names":["CODES","KEYS","register","GRID_SIZE","actionToggleGridMode","name","viewMode","trackEvent","category","predicate","appState","gridSize","perform","elements","_objectSpread","checked","commitToHistory","element","props","gridModeEnabled","contextItemLabel","keyTest","event","CTRL_OR_CMD","code","QUOTE"],"sources":["D:/project/excalidraw-cn/src/actions/actionToggleGridMode.tsx"],"sourcesContent":["import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { GRID_SIZE } from \"../constants\";\nimport { AppState } from \"../types\";\n\nexport const actionToggleGridMode = register({\n  name: \"gridMode\",\n  viewMode: true,\n  trackEvent: {\n    category: \"canvas\",\n    predicate: (appState) => !appState.gridSize,\n  },\n  perform(elements, appState) {\n    return {\n      appState: {\n        ...appState,\n        gridSize: this.checked!(appState) ? null : GRID_SIZE,\n      },\n      commitToHistory: false,\n    };\n  },\n  checked: (appState: AppState) => appState.gridSize !== null,\n  predicate: (element, appState, props) => {\n    return typeof props.gridModeEnabled === \"undefined\";\n  },\n  contextItemLabel: \"labels.showGrid\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.code === CODES.QUOTE,\n});\n"],"mappings":"6GAAA,OAASA,KAAK,CAAEC,IAAI,KAAQ,SAAS,CACrC,OAASC,QAAQ,KAAQ,YAAY,CACrC,OAASC,SAAS,KAAQ,cAAc,CAGxC,MAAO,IAAM,CAAAC,oBAAoB,CAAGF,QAAQ,CAAC,CAC3CG,IAAI,CAAE,UAAU,CAChBC,QAAQ,CAAE,IAAI,CACdC,UAAU,CAAE,CACVC,QAAQ,CAAE,QAAQ,CAClBC,SAAS,CAAE,SAAAA,UAACC,QAAQ,QAAK,CAACA,QAAQ,CAACC,QAAQ,EAC7C,CAAC,CACDC,OAAO,UAAAA,QAACC,QAAQ,CAAEH,QAAQ,CAAE,CAC1B,MAAO,CACLA,QAAQ,CAAAI,aAAA,CAAAA,aAAA,IACHJ,QAAQ,MACXC,QAAQ,CAAE,IAAI,CAACI,OAAO,CAAEL,QAAQ,CAAC,CAAG,IAAI,CAAGP,SAAS,EACrD,CACDa,eAAe,CAAE,KACnB,CAAC,CACH,CAAC,CACDD,OAAO,CAAE,SAAAA,QAACL,QAAkB,QAAK,CAAAA,QAAQ,CAACC,QAAQ,GAAK,IAAI,GAC3DF,SAAS,CAAE,SAAAA,UAACQ,OAAO,CAAEP,QAAQ,CAAEQ,KAAK,CAAK,CACvC,MAAO,OAAO,CAAAA,KAAK,CAACC,eAAe,GAAK,WAAW,CACrD,CAAC,CACDC,gBAAgB,CAAE,iBAAiB,CACnCC,OAAO,CAAE,SAAAA,QAACC,KAAK,QAAK,CAAAA,KAAK,CAACrB,IAAI,CAACsB,WAAW,CAAC,EAAID,KAAK,CAACE,IAAI,GAAKxB,KAAK,CAACyB,KAAK,EAC3E,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}