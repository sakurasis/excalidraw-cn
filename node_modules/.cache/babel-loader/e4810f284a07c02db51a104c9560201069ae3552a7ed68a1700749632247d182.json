{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\LibraryUnit.tsx\";\nimport clsx from \"clsx\";\nimport { memo, useEffect, useRef, useState } from \"react\";\nimport { useDevice } from \"../components/App\";\nimport \"./LibraryUnit.scss\";\nimport { CheckboxItem } from \"./CheckboxItem\";\nimport { PlusIcon } from \"./icons\";\nimport { useLibraryItemSvg } from \"../hooks/useLibraryItemSvg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LibraryUnit = /*#__PURE__*/memo(_ref => {\n  let {\n    id,\n    elements,\n    isPending,\n    onClick,\n    selected,\n    onToggle,\n    onDrag,\n    svgCache\n  } = _ref;\n  const ref = useRef(null);\n  const svg = useLibraryItemSvg(id, elements, svgCache);\n  useEffect(() => {\n    const node = ref.current;\n    if (!node) {\n      return;\n    }\n    if (svg) {\n      node.innerHTML = svg.outerHTML;\n    }\n    return () => {\n      node.innerHTML = \"\";\n    };\n  }, [svg]);\n  const [isHovered, setIsHovered] = useState(false);\n  const isMobile = useDevice().isMobile;\n  const adder = isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"library-unit__adder\",\n    children: PlusIcon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(\"library-unit\", {\n      \"library-unit__active\": elements,\n      \"library-unit--hover\": elements && isHovered,\n      \"library-unit--selected\": selected,\n      \"library-unit--skeleton\": !svg\n    }),\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(\"library-unit__dragger\", {\n        \"library-unit__pulse\": !!isPending\n      }),\n      ref: ref,\n      draggable: !!elements,\n      onClick: !!elements || !!isPending ? event => {\n        if (id && event.shiftKey) {\n          onToggle(id, event);\n        } else {\n          onClick(id);\n        }\n      } : undefined,\n      onDragStart: event => {\n        if (!id) {\n          event.preventDefault();\n          return;\n        }\n        setIsHovered(false);\n        onDrag(id, event);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), adder, id && elements && (isHovered || isMobile || selected) && /*#__PURE__*/_jsxDEV(CheckboxItem, {\n      checked: selected,\n      onChange: (checked, event) => onToggle(id, event),\n      className: \"library-unit__checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n});\nexport const EmptyLibraryUnit = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"library-unit library-unit--skeleton\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 106,\n  columnNumber: 3\n}, this);","map":{"version":3,"names":["clsx","memo","useEffect","useRef","useState","useDevice","CheckboxItem","PlusIcon","useLibraryItemSvg","jsxDEV","_jsxDEV","LibraryUnit","_ref","id","elements","isPending","onClick","selected","onToggle","onDrag","svgCache","ref","svg","node","current","innerHTML","outerHTML","isHovered","setIsHovered","isMobile","adder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMouseEnter","onMouseLeave","draggable","event","shiftKey","undefined","onDragStart","preventDefault","checked","onChange","EmptyLibraryUnit"],"sources":["D:/project/excalidraw-cn/src/components/LibraryUnit.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport { memo, useEffect, useRef, useState } from \"react\";\nimport { useDevice } from \"../components/App\";\nimport { LibraryItem } from \"../types\";\nimport \"./LibraryUnit.scss\";\nimport { CheckboxItem } from \"./CheckboxItem\";\nimport { PlusIcon } from \"./icons\";\nimport { SvgCache, useLibraryItemSvg } from \"../hooks/useLibraryItemSvg\";\n\nexport const LibraryUnit = memo(\n  ({\n    id,\n    elements,\n    isPending,\n    onClick,\n    selected,\n    onToggle,\n    onDrag,\n    svgCache,\n  }: {\n    id: LibraryItem[\"id\"] | /** for pending item */ null;\n    elements?: LibraryItem[\"elements\"];\n    isPending?: boolean;\n    onClick: (id: LibraryItem[\"id\"] | null) => void;\n    selected: boolean;\n    onToggle: (id: string, event: React.MouseEvent) => void;\n    onDrag: (id: string, event: React.DragEvent) => void;\n    svgCache: SvgCache;\n  }) => {\n    const ref = useRef<HTMLDivElement | null>(null);\n    const svg = useLibraryItemSvg(id, elements, svgCache);\n\n    useEffect(() => {\n      const node = ref.current;\n\n      if (!node) {\n        return;\n      }\n\n      if (svg) {\n        node.innerHTML = svg.outerHTML;\n      }\n\n      return () => {\n        node.innerHTML = \"\";\n      };\n    }, [svg]);\n\n    const [isHovered, setIsHovered] = useState(false);\n    const isMobile = useDevice().isMobile;\n    const adder = isPending && (\n      <div className=\"library-unit__adder\">{PlusIcon}</div>\n    );\n\n    return (\n      <div\n        className={clsx(\"library-unit\", {\n          \"library-unit__active\": elements,\n          \"library-unit--hover\": elements && isHovered,\n          \"library-unit--selected\": selected,\n          \"library-unit--skeleton\": !svg,\n        })}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <div\n          className={clsx(\"library-unit__dragger\", {\n            \"library-unit__pulse\": !!isPending,\n          })}\n          ref={ref}\n          draggable={!!elements}\n          onClick={\n            !!elements || !!isPending\n              ? (event) => {\n                  if (id && event.shiftKey) {\n                    onToggle(id, event);\n                  } else {\n                    onClick(id);\n                  }\n                }\n              : undefined\n          }\n          onDragStart={(event) => {\n            if (!id) {\n              event.preventDefault();\n              return;\n            }\n            setIsHovered(false);\n            onDrag(id, event);\n          }}\n        />\n        {adder}\n        {id && elements && (isHovered || isMobile || selected) && (\n          <CheckboxItem\n            checked={selected}\n            onChange={(checked, event) => onToggle(id, event)}\n            className=\"library-unit__checkbox\"\n          />\n        )}\n      </div>\n    );\n  },\n);\n\nexport const EmptyLibraryUnit = () => (\n  <div className=\"library-unit library-unit--skeleton\" />\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}