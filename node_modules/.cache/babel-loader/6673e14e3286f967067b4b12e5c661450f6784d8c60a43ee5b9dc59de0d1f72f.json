{"ast":null,"code":"import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{getElementAbsoluteCoords}from\"./bounds\";import{rotate}from\"../math\";import{isTextElement}from\".\";import{isFrameElement,isLinearElement}from\"./typeChecks\";import{DEFAULT_SPACING}from\"../renderer/renderScene\";var transformHandleSizes={mouse:8,pen:16,touch:28};var ROTATION_RESIZE_HANDLE_GAP=16;export var OMIT_SIDES_FOR_MULTIPLE_ELEMENTS={e:true,s:true,n:true,w:true};export var OMIT_SIDES_FOR_FRAME={e:true,s:true,n:true,w:true,rotation:true};var OMIT_SIDES_FOR_TEXT_ELEMENT={e:true,s:true,n:true,w:true};var OMIT_SIDES_FOR_LINE_SLASH={e:true,s:true,n:true,w:true,nw:true,se:true};var OMIT_SIDES_FOR_LINE_BACKSLASH={e:true,s:true,n:true,w:true};var generateTransformHandle=function generateTransformHandle(x,y,width,height,cx,cy,angle){var _rotate=rotate(x+width/2,y+height/2,cx,cy,angle),_rotate2=_slicedToArray(_rotate,2),xx=_rotate2[0],yy=_rotate2[1];return[xx-width/2,yy-height/2,width,height];};export var getTransformHandlesFromCoords=function getTransformHandlesFromCoords(_ref,angle,zoom,pointerType){var _ref2=_slicedToArray(_ref,6),x1=_ref2[0],y1=_ref2[1],x2=_ref2[2],y2=_ref2[3],cx=_ref2[4],cy=_ref2[5];var omitSides=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};var margin=arguments.length>5&&arguments[5]!==undefined?arguments[5]:4;var size=transformHandleSizes[pointerType];var handleWidth=size/zoom.value;var handleHeight=size/zoom.value;var handleMarginX=size/zoom.value;var handleMarginY=size/zoom.value;var width=x2-x1;var height=y2-y1;var dashedLineMargin=margin/zoom.value;var centeringOffset=(size-DEFAULT_SPACING*2)/(2*zoom.value);var transformHandles={nw:omitSides.nw?undefined:generateTransformHandle(x1-dashedLineMargin-handleMarginX+centeringOffset,y1-dashedLineMargin-handleMarginY+centeringOffset,handleWidth,handleHeight,cx,cy,angle),ne:omitSides.ne?undefined:generateTransformHandle(x2+dashedLineMargin-centeringOffset,y1-dashedLineMargin-handleMarginY+centeringOffset,handleWidth,handleHeight,cx,cy,angle),sw:omitSides.sw?undefined:generateTransformHandle(x1-dashedLineMargin-handleMarginX+centeringOffset,y2+dashedLineMargin-centeringOffset,handleWidth,handleHeight,cx,cy,angle),se:omitSides.se?undefined:generateTransformHandle(x2+dashedLineMargin-centeringOffset,y2+dashedLineMargin-centeringOffset,handleWidth,handleHeight,cx,cy,angle),rotation:omitSides.rotation?undefined:generateTransformHandle(x1+width/2-handleWidth/2,y1-dashedLineMargin-handleMarginY+centeringOffset-ROTATION_RESIZE_HANDLE_GAP/zoom.value,handleWidth,handleHeight,cx,cy,angle)};// We only want to show height handles (all cardinal directions)  above a certain size\n// Note: we render using \"mouse\" size so we should also use \"mouse\" size for this check\nvar minimumSizeForEightHandles=5*transformHandleSizes.mouse/zoom.value;if(Math.abs(width)>minimumSizeForEightHandles){if(!omitSides.n){transformHandles.n=generateTransformHandle(x1+width/2-handleWidth/2,y1-dashedLineMargin-handleMarginY+centeringOffset,handleWidth,handleHeight,cx,cy,angle);}if(!omitSides.s){transformHandles.s=generateTransformHandle(x1+width/2-handleWidth/2,y2+dashedLineMargin-centeringOffset,handleWidth,handleHeight,cx,cy,angle);}}if(Math.abs(height)>minimumSizeForEightHandles){if(!omitSides.w){transformHandles.w=generateTransformHandle(x1-dashedLineMargin-handleMarginX+centeringOffset,y1+height/2-handleHeight/2,handleWidth,handleHeight,cx,cy,angle);}if(!omitSides.e){transformHandles.e=generateTransformHandle(x2+dashedLineMargin-centeringOffset,y1+height/2-handleHeight/2,handleWidth,handleHeight,cx,cy,angle);}}return transformHandles;};export var getTransformHandles=function getTransformHandles(element,zoom){var pointerType=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"mouse\";// so that when locked element is selected (especially when you toggle lock\n// via keyboard) the locked element is visually distinct, indicating\n// you can't move/resize\nif(element.locked){return{};}var omitSides={};if(element.type===\"freedraw\"||isLinearElement(element)){if(element.points.length===2){// only check the last point because starting point is always (0,0)\nvar _element$points=_slicedToArray(element.points,2),p1=_element$points[1];if(p1[0]===0||p1[1]===0){omitSides=OMIT_SIDES_FOR_LINE_BACKSLASH;}else if(p1[0]>0&&p1[1]<0){omitSides=OMIT_SIDES_FOR_LINE_SLASH;}else if(p1[0]>0&&p1[1]>0){omitSides=OMIT_SIDES_FOR_LINE_BACKSLASH;}else if(p1[0]<0&&p1[1]>0){omitSides=OMIT_SIDES_FOR_LINE_SLASH;}else if(p1[0]<0&&p1[1]<0){omitSides=OMIT_SIDES_FOR_LINE_BACKSLASH;}}}else if(isTextElement(element)){omitSides=OMIT_SIDES_FOR_TEXT_ELEMENT;}else if(isFrameElement(element)){omitSides={rotation:true};}var dashedLineMargin=isLinearElement(element)?DEFAULT_SPACING+8:DEFAULT_SPACING;return getTransformHandlesFromCoords(getElementAbsoluteCoords(element,true),element.angle,zoom,pointerType,omitSides,dashedLineMargin);};export var shouldShowBoundingBox=function shouldShowBoundingBox(elements,appState){if(appState.editingLinearElement){return false;}if(elements.length>1){return true;}var element=elements[0];if(!isLinearElement(element)){return true;}return element.points.length>2;};","map":{"version":3,"names":["getElementAbsoluteCoords","rotate","isTextElement","isFrameElement","isLinearElement","DEFAULT_SPACING","transformHandleSizes","mouse","pen","touch","ROTATION_RESIZE_HANDLE_GAP","OMIT_SIDES_FOR_MULTIPLE_ELEMENTS","e","s","n","w","OMIT_SIDES_FOR_FRAME","rotation","OMIT_SIDES_FOR_TEXT_ELEMENT","OMIT_SIDES_FOR_LINE_SLASH","nw","se","OMIT_SIDES_FOR_LINE_BACKSLASH","generateTransformHandle","x","y","width","height","cx","cy","angle","_rotate","_rotate2","_slicedToArray","xx","yy","getTransformHandlesFromCoords","_ref","zoom","pointerType","_ref2","x1","y1","x2","y2","omitSides","arguments","length","undefined","margin","size","handleWidth","value","handleHeight","handleMarginX","handleMarginY","dashedLineMargin","centeringOffset","transformHandles","ne","sw","minimumSizeForEightHandles","Math","abs","getTransformHandles","element","locked","type","points","_element$points","p1","shouldShowBoundingBox","elements","appState","editingLinearElement"],"sources":["D:/project/excalidraw-cn/src/element/transformHandles.ts"],"sourcesContent":["import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  PointerType,\n} from \"./types\";\n\nimport { getElementAbsoluteCoords } from \"./bounds\";\nimport { rotate } from \"../math\";\nimport { AppState, Zoom } from \"../types\";\nimport { isTextElement } from \".\";\nimport { isFrameElement, isLinearElement } from \"./typeChecks\";\nimport { DEFAULT_SPACING } from \"../renderer/renderScene\";\n\nexport type TransformHandleDirection =\n  | \"n\"\n  | \"s\"\n  | \"w\"\n  | \"e\"\n  | \"nw\"\n  | \"ne\"\n  | \"sw\"\n  | \"se\";\n\nexport type TransformHandleType = TransformHandleDirection | \"rotation\";\n\nexport type TransformHandle = [number, number, number, number];\nexport type TransformHandles = Partial<{\n  [T in TransformHandleType]: TransformHandle;\n}>;\nexport type MaybeTransformHandleType = TransformHandleType | false;\n\nconst transformHandleSizes: { [k in PointerType]: number } = {\n  mouse: 8,\n  pen: 16,\n  touch: 28,\n};\n\nconst ROTATION_RESIZE_HANDLE_GAP = 16;\n\nexport const OMIT_SIDES_FOR_MULTIPLE_ELEMENTS = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n};\n\nexport const OMIT_SIDES_FOR_FRAME = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  rotation: true,\n};\n\nconst OMIT_SIDES_FOR_TEXT_ELEMENT = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_SLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  nw: true,\n  se: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_BACKSLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n};\n\nconst generateTransformHandle = (\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n): TransformHandle => {\n  const [xx, yy] = rotate(x + width / 2, y + height / 2, cx, cy, angle);\n  return [xx - width / 2, yy - height / 2, width, height];\n};\n\nexport const getTransformHandlesFromCoords = (\n  [x1, y1, x2, y2, cx, cy]: [number, number, number, number, number, number],\n  angle: number,\n  zoom: Zoom,\n  pointerType: PointerType,\n  omitSides: { [T in TransformHandleType]?: boolean } = {},\n  margin = 4,\n): TransformHandles => {\n  const size = transformHandleSizes[pointerType];\n  const handleWidth = size / zoom.value;\n  const handleHeight = size / zoom.value;\n\n  const handleMarginX = size / zoom.value;\n  const handleMarginY = size / zoom.value;\n\n  const width = x2 - x1;\n  const height = y2 - y1;\n  const dashedLineMargin = margin / zoom.value;\n  const centeringOffset = (size - DEFAULT_SPACING * 2) / (2 * zoom.value);\n\n  const transformHandles: TransformHandles = {\n    nw: omitSides.nw\n      ? undefined\n      : generateTransformHandle(\n          x1 - dashedLineMargin - handleMarginX + centeringOffset,\n          y1 - dashedLineMargin - handleMarginY + centeringOffset,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    ne: omitSides.ne\n      ? undefined\n      : generateTransformHandle(\n          x2 + dashedLineMargin - centeringOffset,\n          y1 - dashedLineMargin - handleMarginY + centeringOffset,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    sw: omitSides.sw\n      ? undefined\n      : generateTransformHandle(\n          x1 - dashedLineMargin - handleMarginX + centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    se: omitSides.se\n      ? undefined\n      : generateTransformHandle(\n          x2 + dashedLineMargin - centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    rotation: omitSides.rotation\n      ? undefined\n      : generateTransformHandle(\n          x1 + width / 2 - handleWidth / 2,\n          y1 -\n            dashedLineMargin -\n            handleMarginY +\n            centeringOffset -\n            ROTATION_RESIZE_HANDLE_GAP / zoom.value,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n  };\n\n  // We only want to show height handles (all cardinal directions)  above a certain size\n  // Note: we render using \"mouse\" size so we should also use \"mouse\" size for this check\n  const minimumSizeForEightHandles =\n    (5 * transformHandleSizes.mouse) / zoom.value;\n  if (Math.abs(width) > minimumSizeForEightHandles) {\n    if (!omitSides.n) {\n      transformHandles.n = generateTransformHandle(\n        x1 + width / 2 - handleWidth / 2,\n        y1 - dashedLineMargin - handleMarginY + centeringOffset,\n        handleWidth,\n        handleHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides.s) {\n      transformHandles.s = generateTransformHandle(\n        x1 + width / 2 - handleWidth / 2,\n        y2 + dashedLineMargin - centeringOffset,\n        handleWidth,\n        handleHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n  if (Math.abs(height) > minimumSizeForEightHandles) {\n    if (!omitSides.w) {\n      transformHandles.w = generateTransformHandle(\n        x1 - dashedLineMargin - handleMarginX + centeringOffset,\n        y1 + height / 2 - handleHeight / 2,\n        handleWidth,\n        handleHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides.e) {\n      transformHandles.e = generateTransformHandle(\n        x2 + dashedLineMargin - centeringOffset,\n        y1 + height / 2 - handleHeight / 2,\n        handleWidth,\n        handleHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n\n  return transformHandles;\n};\n\nexport const getTransformHandles = (\n  element: ExcalidrawElement,\n  zoom: Zoom,\n  pointerType: PointerType = \"mouse\",\n): TransformHandles => {\n  // so that when locked element is selected (especially when you toggle lock\n  // via keyboard) the locked element is visually distinct, indicating\n  // you can't move/resize\n  if (element.locked) {\n    return {};\n  }\n\n  let omitSides: { [T in TransformHandleType]?: boolean } = {};\n  if (element.type === \"freedraw\" || isLinearElement(element)) {\n    if (element.points.length === 2) {\n      // only check the last point because starting point is always (0,0)\n      const [, p1] = element.points;\n      if (p1[0] === 0 || p1[1] === 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] > 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] > 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] < 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] < 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      }\n    }\n  } else if (isTextElement(element)) {\n    omitSides = OMIT_SIDES_FOR_TEXT_ELEMENT;\n  } else if (isFrameElement(element)) {\n    omitSides = {\n      rotation: true,\n    };\n  }\n  const dashedLineMargin = isLinearElement(element)\n    ? DEFAULT_SPACING + 8\n    : DEFAULT_SPACING;\n  return getTransformHandlesFromCoords(\n    getElementAbsoluteCoords(element, true),\n    element.angle,\n    zoom,\n    pointerType,\n    omitSides,\n    dashedLineMargin,\n  );\n};\n\nexport const shouldShowBoundingBox = (\n  elements: NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  if (appState.editingLinearElement) {\n    return false;\n  }\n  if (elements.length > 1) {\n    return true;\n  }\n  const element = elements[0];\n  if (!isLinearElement(element)) {\n    return true;\n  }\n\n  return element.points.length > 2;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}