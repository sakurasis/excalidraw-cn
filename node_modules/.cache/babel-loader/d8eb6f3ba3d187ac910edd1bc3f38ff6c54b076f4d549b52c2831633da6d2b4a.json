{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\ErrorDialog.tsx\";\nimport React, { useState } from \"react\";\nimport { t } from \"../i18n\";\nimport { Dialog } from \"./Dialog\";\nimport { useExcalidrawContainer } from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ErrorDialog = _ref => {\n  let {\n    children,\n    onClose\n  } = _ref;\n  const [modalIsShown, setModalIsShown] = useState(!!children);\n  const {\n    container: excalidrawContainer\n  } = useExcalidrawContainer();\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n    if (onClose) {\n      onClose();\n    }\n    // TODO: Fix the A11y issues so this is never needed since we should always focus on last active element\n    excalidrawContainer === null || excalidrawContainer === void 0 ? void 0 : excalidrawContainer.focus();\n  }, [onClose, excalidrawContainer]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: modalIsShown && /*#__PURE__*/_jsxDEV(Dialog, {\n      size: \"small\",\n      onCloseRequest: handleClose,\n      title: t(\"errorDialog.title\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: \"pre-wrap\"\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};","map":{"version":3,"names":["React","useState","t","Dialog","useExcalidrawContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","ErrorDialog","_ref","children","onClose","modalIsShown","setModalIsShown","container","excalidrawContainer","handleClose","useCallback","focus","size","onCloseRequest","title","style","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/project/excalidraw-cn/src/components/ErrorDialog.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { t } from \"../i18n\";\n\nimport { Dialog } from \"./Dialog\";\nimport { useExcalidrawContainer } from \"./App\";\n\nexport const ErrorDialog = ({\n  children,\n  onClose,\n}: {\n  children?: React.ReactNode;\n  onClose?: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(!!children);\n  const { container: excalidrawContainer } = useExcalidrawContainer();\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n    // TODO: Fix the A11y issues so this is never needed since we should always focus on last active element\n    excalidrawContainer?.focus();\n  }, [onClose, excalidrawContainer]);\n\n  return (\n    <>\n      {modalIsShown && (\n        <Dialog\n          size=\"small\"\n          onCloseRequest={handleClose}\n          title={t(\"errorDialog.title\")}\n        >\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{children}</div>\n        </Dialog>\n      )}\n    </>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,CAAC,QAAQ,SAAS;AAE3B,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,sBAAsB,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,OAAO,MAAMC,WAAW,GAAGC,IAAA,IAMrB;EAAA,IANsB;IAC1BC,QAAQ;IACRC;EAIF,CAAC,GAAAF,IAAA;EACC,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAACU,QAAQ,CAAC;EAC5D,MAAM;IAAEI,SAAS,EAAEC;EAAoB,CAAC,GAAGZ,sBAAsB,EAAE;EAEnE,MAAMa,WAAW,GAAGjB,KAAK,CAACkB,WAAW,CAAC,MAAM;IAC1CJ,eAAe,CAAC,KAAK,CAAC;IAEtB,IAAIF,OAAO,EAAE;MACXA,OAAO,EAAE;IACX;IACA;IACAI,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAEG,KAAK,EAAE;EAC9B,CAAC,EAAE,CAACP,OAAO,EAAEI,mBAAmB,CAAC,CAAC;EAElC,oBACEV,OAAA,CAAAE,SAAA;IAAAG,QAAA,EACGE,YAAY,iBACXP,OAAA,CAACH,MAAM;MACLiB,IAAI,EAAC,OAAO;MACZC,cAAc,EAAEJ,WAAY;MAC5BK,KAAK,EAAEpB,CAAC,CAAC,mBAAmB,CAAE;MAAAS,QAAA,eAE9BL,OAAA;QAAKiB,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAW,CAAE;QAAAb,QAAA,EAAEA;MAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAE3D,iBACA;AAEP,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}