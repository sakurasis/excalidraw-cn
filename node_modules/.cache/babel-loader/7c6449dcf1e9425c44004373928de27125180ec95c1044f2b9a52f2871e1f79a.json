{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _regeneratorRuntime from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{compressData,decompressData}from\"../../data/encode\";import{decryptData,generateEncryptionKey,IV_LENGTH_BYTES}from\"../../data/encryption\";import{serializeAsJSON}from\"../../data/json\";import{restore}from\"../../data/restore\";import{isInvisiblySmallElement}from\"../../element/sizeHelpers\";import{isInitializedImageElement}from\"../../element/typeChecks\";import{t}from\"../../i18n\";import{bytesToHexString}from\"../../utils\";import{DELETED_ELEMENT_TIMEOUT,FILE_UPLOAD_MAX_BYTES,ROOM_ID_BYTES}from\"../app_constants\";import{encodeFilesForUpload}from\"./FileManager\";import{saveFilesToFirebase}from\"./firebase\";export var isSyncableElement=function isSyncableElement(element){if(element.isDeleted){if(element.updated>Date.now()-DELETED_ELEMENT_TIMEOUT){return true;}return false;}return!isInvisiblySmallElement(element);};export var getSyncableElements=function getSyncableElements(elements){return elements.filter(function(element){return isSyncableElement(element);});};var BACKEND_V2_GET=process.env.REACT_APP_BACKEND_V2_GET_URL;var BACKEND_V2_POST=process.env.REACT_APP_BACKEND_V2_POST_URL;var generateRoomId=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var buffer;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:buffer=new Uint8Array(ROOM_ID_BYTES);window.crypto.getRandomValues(buffer);return _context.abrupt(\"return\",bytesToHexString(buffer));case 3:case\"end\":return _context.stop();}},_callee);}));return function generateRoomId(){return _ref.apply(this,arguments);};}();/**\n * Right now the reason why we resolve connection params (url, polling...)\n * from upstream is to allow changing the params immediately when needed without\n * having to wait for clients to update the SW.\n *\n * If REACT_APP_WS_SERVER_URL env is set, we use that instead (useful for forks)\n */export var getCollabServer=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var resp;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!process.env.REACT_APP_WS_SERVER_URL){_context2.next=2;break;}return _context2.abrupt(\"return\",{url:process.env.REACT_APP_WS_SERVER_URL,polling:true});case 2:_context2.prev=2;_context2.next=5;return fetch(\"\".concat(process.env.REACT_APP_PORTAL_URL,\"/collab-server\"));case 5:resp=_context2.sent;_context2.next=8;return resp.json();case 8:return _context2.abrupt(\"return\",_context2.sent);case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](2);console.error(_context2.t0);throw new Error(t(\"errors.cannotResolveCollabServer\"));case 15:case\"end\":return _context2.stop();}},_callee2,null,[[2,11]]);}));return function getCollabServer(){return _ref2.apply(this,arguments);};}();var RE_COLLAB_LINK=/^#room=([a-zA-Z0-9_-]+),([a-zA-Z0-9_-]+)$/;export var isCollaborationLink=function isCollaborationLink(link){var hash=new URL(link).hash;return RE_COLLAB_LINK.test(hash);};export var getCollaborationLinkData=function getCollaborationLinkData(link){var hash=new URL(link).hash;var match=hash.match(RE_COLLAB_LINK);if(match&&match[2].length!==22){window.alert(t(\"alerts.invalidEncryptionKey\"));return null;}return match?{roomId:match[1],roomKey:match[2]}:null;};export var generateCollaborationLinkData=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var roomId,roomKey;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return generateRoomId();case 2:roomId=_context3.sent;_context3.next=5;return generateEncryptionKey();case 5:roomKey=_context3.sent;if(roomKey){_context3.next=8;break;}throw new Error(\"Couldn't generate room key\");case 8:return _context3.abrupt(\"return\",{roomId:roomId,roomKey:roomKey});case 9:case\"end\":return _context3.stop();}},_callee3);}));return function generateCollaborationLinkData(){return _ref3.apply(this,arguments);};}();export var getCollaborationLink=function getCollaborationLink(data){return\"\".concat(window.location.origin).concat(window.location.pathname,\"#room=\").concat(data.roomId,\",\").concat(data.roomKey);};/**\n * Decodes shareLink data using the legacy buffer format.\n * @deprecated\n */var legacy_decodeFromBackend=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref4){var buffer,decryptionKey,decrypted,iv,encrypted,fixedIv,string,data;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:buffer=_ref4.buffer,decryptionKey=_ref4.decryptionKey;_context4.prev=1;// Buffer should contain both the IV (fixed length) and encrypted data\niv=buffer.slice(0,IV_LENGTH_BYTES);encrypted=buffer.slice(IV_LENGTH_BYTES,buffer.byteLength);_context4.next=6;return decryptData(new Uint8Array(iv),encrypted,decryptionKey);case 6:decrypted=_context4.sent;_context4.next=15;break;case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](1);// Fixed IV (old format, backward compatibility)\nfixedIv=new Uint8Array(IV_LENGTH_BYTES);_context4.next=14;return decryptData(fixedIv,buffer,decryptionKey);case 14:decrypted=_context4.sent;case 15:// We need to convert the decrypted array buffer to a string\nstring=new window.TextDecoder(\"utf-8\").decode(new Uint8Array(decrypted));data=JSON.parse(string);return _context4.abrupt(\"return\",{elements:data.elements||null,appState:data.appState||null});case 18:case\"end\":return _context4.stop();}},_callee4,null,[[1,9]]);}));return function legacy_decodeFromBackend(_x){return _ref5.apply(this,arguments);};}();var importFromBackend=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(id,decryptionKey){var response,buffer,_yield$decompressData,decodedBuffer,data;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return fetch(\"\".concat(BACKEND_V2_GET).concat(id));case 3:response=_context5.sent;if(response.ok){_context5.next=7;break;}window.alert(t(\"alerts.importBackendFailed\"));return _context5.abrupt(\"return\",{});case 7:_context5.next=9;return response.arrayBuffer();case 9:buffer=_context5.sent;_context5.prev=10;_context5.next=13;return decompressData(new Uint8Array(buffer),{decryptionKey:decryptionKey});case 13:_yield$decompressData=_context5.sent;decodedBuffer=_yield$decompressData.data;data=JSON.parse(new TextDecoder().decode(decodedBuffer));return _context5.abrupt(\"return\",{elements:data.elements||null,appState:data.appState||null});case 19:_context5.prev=19;_context5.t0=_context5[\"catch\"](10);console.warn(\"error when decoding shareLink data using the new format:\",_context5.t0);return _context5.abrupt(\"return\",legacy_decodeFromBackend({buffer:buffer,decryptionKey:decryptionKey}));case 23:_context5.next=30;break;case 25:_context5.prev=25;_context5.t1=_context5[\"catch\"](0);window.alert(t(\"alerts.importBackendFailed\"));console.error(_context5.t1);return _context5.abrupt(\"return\",{});case 30:case\"end\":return _context5.stop();}},_callee5,null,[[0,25],[10,19]]);}));return function importFromBackend(_x2,_x3){return _ref6.apply(this,arguments);};}();export var loadScene=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(id,privateKey,localDataState){var data;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:if(!(id!=null&&privateKey!=null)){_context6.next=11;break;}_context6.t0=restore;_context6.next=4;return importFromBackend(id,privateKey);case 4:_context6.t1=_context6.sent;_context6.t2=localDataState===null||localDataState===void 0?void 0:localDataState.appState;_context6.t3=localDataState===null||localDataState===void 0?void 0:localDataState.elements;_context6.t4={repairBindings:true,refreshDimensions:false};data=(0,_context6.t0)(_context6.t1,_context6.t2,_context6.t3,_context6.t4);_context6.next=12;break;case 11:data=restore(localDataState||null,null,null,{repairBindings:true});case 12:return _context6.abrupt(\"return\",{elements:data.elements,appState:data.appState,// note: this will always be empty because we're not storing files\n// in the scene database/localStorage, and instead fetch them async\n// from a different database\nfiles:data.files,commitToHistory:false});case 13:case\"end\":return _context6.stop();}},_callee6);}));return function loadScene(_x4,_x5,_x6){return _ref7.apply(this,arguments);};}();export var exportToBackend=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(elements,appState,files){var encryptionKey,payload,filesMap,_iterator,_step,element,filesToUpload,response,json,url,urlString;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:_context7.next=2;return generateEncryptionKey(\"string\");case 2:encryptionKey=_context7.sent;_context7.next=5;return compressData(new TextEncoder().encode(serializeAsJSON(elements,appState,files,\"database\")),{encryptionKey:encryptionKey});case 5:payload=_context7.sent;_context7.prev=6;filesMap=new Map();_iterator=_createForOfIteratorHelper(elements);try{for(_iterator.s();!(_step=_iterator.n()).done;){element=_step.value;if(isInitializedImageElement(element)&&files[element.fileId]){filesMap.set(element.fileId,files[element.fileId]);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}_context7.next=12;return encodeFilesForUpload({files:filesMap,encryptionKey:encryptionKey,maxBytes:FILE_UPLOAD_MAX_BYTES});case 12:filesToUpload=_context7.sent;_context7.next=15;return fetch(BACKEND_V2_POST,{method:\"POST\",body:payload.buffer});case 15:response=_context7.sent;_context7.next=18;return response.json();case 18:json=_context7.sent;if(!json.id){_context7.next=28;break;}url=new URL(window.location.href);// We need to store the key (and less importantly the id) as hash instead\n// of queryParam in order to never send it to the server\nurl.hash=\"json=\".concat(json.id,\",\").concat(encryptionKey);urlString=url.toString();_context7.next=25;return saveFilesToFirebase({prefix:\"/files/shareLinks/\".concat(json.id),files:filesToUpload});case 25:return _context7.abrupt(\"return\",{url:urlString,errorMessage:null});case 28:if(!(json.error_class===\"RequestTooLargeError\")){_context7.next=30;break;}return _context7.abrupt(\"return\",{url:null,errorMessage:t(\"alerts.couldNotCreateShareableLinkTooBig\")});case 30:return _context7.abrupt(\"return\",{url:null,errorMessage:t(\"alerts.couldNotCreateShareableLink\")});case 33:_context7.prev=33;_context7.t0=_context7[\"catch\"](6);console.error(_context7.t0);return _context7.abrupt(\"return\",{url:null,errorMessage:t(\"alerts.couldNotCreateShareableLink\")});case 37:case\"end\":return _context7.stop();}},_callee7,null,[[6,33]]);}));return function exportToBackend(_x7,_x8,_x9){return _ref8.apply(this,arguments);};}();","map":{"version":3,"names":["compressData","decompressData","decryptData","generateEncryptionKey","IV_LENGTH_BYTES","serializeAsJSON","restore","isInvisiblySmallElement","isInitializedImageElement","t","bytesToHexString","DELETED_ELEMENT_TIMEOUT","FILE_UPLOAD_MAX_BYTES","ROOM_ID_BYTES","encodeFilesForUpload","saveFilesToFirebase","isSyncableElement","element","isDeleted","updated","Date","now","getSyncableElements","elements","filter","BACKEND_V2_GET","process","env","REACT_APP_BACKEND_V2_GET_URL","BACKEND_V2_POST","REACT_APP_BACKEND_V2_POST_URL","generateRoomId","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","buffer","wrap","_callee$","_context","prev","next","Uint8Array","window","crypto","getRandomValues","abrupt","stop","apply","arguments","getCollabServer","_ref2","_callee2","resp","_callee2$","_context2","REACT_APP_WS_SERVER_URL","url","polling","fetch","concat","REACT_APP_PORTAL_URL","sent","json","t0","console","error","Error","RE_COLLAB_LINK","isCollaborationLink","link","hash","URL","test","getCollaborationLinkData","match","length","alert","roomId","roomKey","generateCollaborationLinkData","_ref3","_callee3","_callee3$","_context3","getCollaborationLink","data","location","origin","pathname","legacy_decodeFromBackend","_ref5","_callee4","_ref4","decryptionKey","decrypted","iv","encrypted","fixedIv","string","_callee4$","_context4","slice","byteLength","TextDecoder","decode","JSON","parse","appState","_x","importFromBackend","_ref6","_callee5","id","response","_yield$decompressData","decodedBuffer","_callee5$","_context5","ok","arrayBuffer","warn","t1","_x2","_x3","loadScene","_ref7","_callee6","privateKey","localDataState","_callee6$","_context6","t2","t3","t4","repairBindings","refreshDimensions","files","commitToHistory","_x4","_x5","_x6","exportToBackend","_ref8","_callee7","encryptionKey","payload","filesMap","_iterator","_step","filesToUpload","urlString","_callee7$","_context7","TextEncoder","encode","Map","_createForOfIteratorHelper","s","n","done","value","fileId","set","err","e","f","maxBytes","method","body","href","toString","prefix","errorMessage","error_class","_x7","_x8","_x9"],"sources":["D:/project/excalidraw-cn/src/excalidraw-app/data/index.ts"],"sourcesContent":["import { compressData, decompressData } from \"../../data/encode\";\nimport {\n  decryptData,\n  generateEncryptionKey,\n  IV_LENGTH_BYTES,\n} from \"../../data/encryption\";\nimport { serializeAsJSON } from \"../../data/json\";\nimport { restore } from \"../../data/restore\";\nimport { ImportedDataState } from \"../../data/types\";\nimport { isInvisiblySmallElement } from \"../../element/sizeHelpers\";\nimport { isInitializedImageElement } from \"../../element/typeChecks\";\nimport { ExcalidrawElement, FileId } from \"../../element/types\";\nimport { t } from \"../../i18n\";\nimport {\n  AppState,\n  BinaryFileData,\n  BinaryFiles,\n  UserIdleState,\n} from \"../../types\";\nimport { bytesToHexString } from \"../../utils\";\nimport {\n  DELETED_ELEMENT_TIMEOUT,\n  FILE_UPLOAD_MAX_BYTES,\n  ROOM_ID_BYTES,\n} from \"../app_constants\";\nimport { encodeFilesForUpload } from \"./FileManager\";\nimport { saveFilesToFirebase } from \"./firebase\";\n\nexport type SyncableExcalidrawElement = ExcalidrawElement & {\n  _brand: \"SyncableExcalidrawElement\";\n};\n\nexport const isSyncableElement = (\n  element: ExcalidrawElement,\n): element is SyncableExcalidrawElement => {\n  if (element.isDeleted) {\n    if (element.updated > Date.now() - DELETED_ELEMENT_TIMEOUT) {\n      return true;\n    }\n    return false;\n  }\n  return !isInvisiblySmallElement(element);\n};\n\nexport const getSyncableElements = (elements: readonly ExcalidrawElement[]) =>\n  elements.filter((element) =>\n    isSyncableElement(element),\n  ) as SyncableExcalidrawElement[];\n\nconst BACKEND_V2_GET = process.env.REACT_APP_BACKEND_V2_GET_URL;\nconst BACKEND_V2_POST = process.env.REACT_APP_BACKEND_V2_POST_URL;\n\nconst generateRoomId = async () => {\n  const buffer = new Uint8Array(ROOM_ID_BYTES);\n  window.crypto.getRandomValues(buffer);\n  return bytesToHexString(buffer);\n};\n\n/**\n * Right now the reason why we resolve connection params (url, polling...)\n * from upstream is to allow changing the params immediately when needed without\n * having to wait for clients to update the SW.\n *\n * If REACT_APP_WS_SERVER_URL env is set, we use that instead (useful for forks)\n */\nexport const getCollabServer = async (): Promise<{\n  url: string;\n  polling: boolean;\n}> => {\n  if (process.env.REACT_APP_WS_SERVER_URL) {\n    return {\n      url: process.env.REACT_APP_WS_SERVER_URL,\n      polling: true,\n    };\n  }\n\n  try {\n    const resp = await fetch(\n      `${process.env.REACT_APP_PORTAL_URL}/collab-server`,\n    );\n    return await resp.json();\n  } catch (error) {\n    console.error(error);\n    throw new Error(t(\"errors.cannotResolveCollabServer\"));\n  }\n};\n\nexport type EncryptedData = {\n  data: ArrayBuffer;\n  iv: Uint8Array;\n};\n\nexport type SocketUpdateDataSource = {\n  SCENE_INIT: {\n    type: \"SCENE_INIT\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  SCENE_UPDATE: {\n    type: \"SCENE_UPDATE\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  MOUSE_LOCATION: {\n    type: \"MOUSE_LOCATION\";\n    payload: {\n      socketId: string;\n      pointer: { x: number; y: number };\n      button: \"down\" | \"up\";\n      selectedElementIds: AppState[\"selectedElementIds\"];\n      username: string;\n    };\n  };\n  IDLE_STATUS: {\n    type: \"IDLE_STATUS\";\n    payload: {\n      socketId: string;\n      userState: UserIdleState;\n      username: string;\n    };\n  };\n};\n\nexport type SocketUpdateDataIncoming =\n  | SocketUpdateDataSource[keyof SocketUpdateDataSource]\n  | {\n      type: \"INVALID_RESPONSE\";\n    };\n\nexport type SocketUpdateData =\n  SocketUpdateDataSource[keyof SocketUpdateDataSource] & {\n    _brand: \"socketUpdateData\";\n  };\n\nconst RE_COLLAB_LINK = /^#room=([a-zA-Z0-9_-]+),([a-zA-Z0-9_-]+)$/;\n\nexport const isCollaborationLink = (link: string) => {\n  const hash = new URL(link).hash;\n  return RE_COLLAB_LINK.test(hash);\n};\n\nexport const getCollaborationLinkData = (link: string) => {\n  const hash = new URL(link).hash;\n  const match = hash.match(RE_COLLAB_LINK);\n  if (match && match[2].length !== 22) {\n    window.alert(t(\"alerts.invalidEncryptionKey\"));\n    return null;\n  }\n  return match ? { roomId: match[1], roomKey: match[2] } : null;\n};\n\nexport const generateCollaborationLinkData = async () => {\n  const roomId = await generateRoomId();\n  const roomKey = await generateEncryptionKey();\n\n  if (!roomKey) {\n    throw new Error(\"Couldn't generate room key\");\n  }\n\n  return { roomId, roomKey };\n};\n\nexport const getCollaborationLink = (data: {\n  roomId: string;\n  roomKey: string;\n}) => {\n  return `${window.location.origin}${window.location.pathname}#room=${data.roomId},${data.roomKey}`;\n};\n\n/**\n * Decodes shareLink data using the legacy buffer format.\n * @deprecated\n */\nconst legacy_decodeFromBackend = async ({\n  buffer,\n  decryptionKey,\n}: {\n  buffer: ArrayBuffer;\n  decryptionKey: string;\n}) => {\n  let decrypted: ArrayBuffer;\n\n  try {\n    // Buffer should contain both the IV (fixed length) and encrypted data\n    const iv = buffer.slice(0, IV_LENGTH_BYTES);\n    const encrypted = buffer.slice(IV_LENGTH_BYTES, buffer.byteLength);\n    decrypted = await decryptData(new Uint8Array(iv), encrypted, decryptionKey);\n  } catch (error: any) {\n    // Fixed IV (old format, backward compatibility)\n    const fixedIv = new Uint8Array(IV_LENGTH_BYTES);\n    decrypted = await decryptData(fixedIv, buffer, decryptionKey);\n  }\n\n  // We need to convert the decrypted array buffer to a string\n  const string = new window.TextDecoder(\"utf-8\").decode(\n    new Uint8Array(decrypted),\n  );\n  const data: ImportedDataState = JSON.parse(string);\n\n  return {\n    elements: data.elements || null,\n    appState: data.appState || null,\n  };\n};\n\nconst importFromBackend = async (\n  id: string,\n  decryptionKey: string,\n): Promise<ImportedDataState> => {\n  try {\n    const response = await fetch(`${BACKEND_V2_GET}${id}`);\n\n    if (!response.ok) {\n      window.alert(t(\"alerts.importBackendFailed\"));\n      return {};\n    }\n    const buffer = await response.arrayBuffer();\n\n    try {\n      const { data: decodedBuffer } = await decompressData(\n        new Uint8Array(buffer),\n        {\n          decryptionKey,\n        },\n      );\n      const data: ImportedDataState = JSON.parse(\n        new TextDecoder().decode(decodedBuffer),\n      );\n\n      return {\n        elements: data.elements || null,\n        appState: data.appState || null,\n      };\n    } catch (error: any) {\n      console.warn(\n        \"error when decoding shareLink data using the new format:\",\n        error,\n      );\n      return legacy_decodeFromBackend({ buffer, decryptionKey });\n    }\n  } catch (error: any) {\n    window.alert(t(\"alerts.importBackendFailed\"));\n    console.error(error);\n    return {};\n  }\n};\n\nexport const loadScene = async (\n  id: string | null,\n  privateKey: string | null,\n  // Supply local state even if importing from backend to ensure we restore\n  // localStorage user settings which we do not persist on server.\n  // Non-optional so we don't forget to pass it even if `undefined`.\n  localDataState: ImportedDataState | undefined | null,\n) => {\n  let data;\n  if (id != null && privateKey != null) {\n    // the private key is used to decrypt the content from the server, take\n    // extra care not to leak it\n    data = restore(\n      await importFromBackend(id, privateKey),\n      localDataState?.appState,\n      localDataState?.elements,\n      { repairBindings: true, refreshDimensions: false },\n    );\n  } else {\n    data = restore(localDataState || null, null, null, {\n      repairBindings: true,\n    });\n  }\n\n  return {\n    elements: data.elements,\n    appState: data.appState,\n    // note: this will always be empty because we're not storing files\n    // in the scene database/localStorage, and instead fetch them async\n    // from a different database\n    files: data.files,\n    commitToHistory: false,\n  };\n};\n\ntype ExportToBackendResult =\n  | { url: null; errorMessage: string }\n  | { url: string; errorMessage: null };\n\nexport const exportToBackend = async (\n  elements: readonly ExcalidrawElement[],\n  appState: Partial<AppState>,\n  files: BinaryFiles,\n): Promise<ExportToBackendResult> => {\n  const encryptionKey = await generateEncryptionKey(\"string\");\n\n  const payload = await compressData(\n    new TextEncoder().encode(\n      serializeAsJSON(elements, appState, files, \"database\"),\n    ),\n    { encryptionKey },\n  );\n\n  try {\n    const filesMap = new Map<FileId, BinaryFileData>();\n    for (const element of elements) {\n      if (isInitializedImageElement(element) && files[element.fileId]) {\n        filesMap.set(element.fileId, files[element.fileId]);\n      }\n    }\n\n    const filesToUpload = await encodeFilesForUpload({\n      files: filesMap,\n      encryptionKey,\n      maxBytes: FILE_UPLOAD_MAX_BYTES,\n    });\n\n    const response = await fetch(BACKEND_V2_POST, {\n      method: \"POST\",\n      body: payload.buffer,\n    });\n    const json = await response.json();\n    if (json.id) {\n      const url = new URL(window.location.href);\n      // We need to store the key (and less importantly the id) as hash instead\n      // of queryParam in order to never send it to the server\n      url.hash = `json=${json.id},${encryptionKey}`;\n      const urlString = url.toString();\n\n      await saveFilesToFirebase({\n        prefix: `/files/shareLinks/${json.id}`,\n        files: filesToUpload,\n      });\n\n      return { url: urlString, errorMessage: null };\n    } else if (json.error_class === \"RequestTooLargeError\") {\n      return {\n        url: null,\n        errorMessage: t(\"alerts.couldNotCreateShareableLinkTooBig\"),\n      };\n    }\n\n    return { url: null, errorMessage: t(\"alerts.couldNotCreateShareableLink\") };\n  } catch (error: any) {\n    console.error(error);\n\n    return { url: null, errorMessage: t(\"alerts.couldNotCreateShareableLink\") };\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}