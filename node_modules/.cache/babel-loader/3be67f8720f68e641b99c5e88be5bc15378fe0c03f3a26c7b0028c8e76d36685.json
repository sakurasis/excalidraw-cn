{"ast":null,"code":"import _defineProperty from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{SVG_EXPORT_TAG}from\"./scene/export\";import{tryParseSpreadsheet,VALID_SPREADSHEET}from\"./charts\";import{EXPORT_DATA_TYPES,MIME_TYPES}from\"./constants\";import{isInitializedImageElement}from\"./element/typeChecks\";import{deepCopyElement}from\"./element/newElement\";import{mutateElement}from\"./element/mutateElement\";import{getContainingFrame}from\"./frame\";import{isPromiseLike,isTestEnv}from\"./utils\";var CLIPBOARD=\"\";var PREFER_APP_CLIPBOARD=false;export var probablySupportsClipboardReadText=\"clipboard\"in navigator&&\"readText\"in navigator.clipboard;export var probablySupportsClipboardWriteText=\"clipboard\"in navigator&&\"writeText\"in navigator.clipboard;export var probablySupportsClipboardBlob=\"clipboard\"in navigator&&\"write\"in navigator.clipboard&&\"ClipboardItem\"in window&&\"toBlob\"in HTMLCanvasElement.prototype;var clipboardContainsElements=function clipboardContainsElements(contents){if([EXPORT_DATA_TYPES.excalidraw,EXPORT_DATA_TYPES.excalidrawClipboard].includes(contents===null||contents===void 0?void 0:contents.type)&&Array.isArray(contents.elements)){return true;}return false;};export var copyToClipboard=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(elements,files){var framesToCopy,foundFile,_files,contents,json;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:framesToCopy=new Set(elements.filter(function(element){return element.type===\"frame\";}));foundFile=false;_files=elements.reduce(function(acc,element){if(isInitializedImageElement(element)){foundFile=true;if(files&&files[element.fileId]){acc[element.fileId]=files[element.fileId];}}return acc;},{});if(foundFile&&!files){console.warn(\"copyToClipboard: attempting to file element(s) without providing associated `files` object.\");}// select binded text elements when copying\ncontents={type:EXPORT_DATA_TYPES.excalidrawClipboard,elements:elements.map(function(element){if(getContainingFrame(element)&&!framesToCopy.has(getContainingFrame(element))){var copiedElement=deepCopyElement(element);mutateElement(copiedElement,{frameId:null});return copiedElement;}return element;}),files:files?_files:undefined};json=JSON.stringify(contents);if(!isTestEnv()){_context.next=8;break;}return _context.abrupt(\"return\",json);case 8:CLIPBOARD=json;_context.prev=9;PREFER_APP_CLIPBOARD=false;_context.next=13;return copyTextToSystemClipboard(json);case 13:_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](9);PREFER_APP_CLIPBOARD=true;console.error(_context.t0);case 19:case\"end\":return _context.stop();}},_callee,null,[[9,15]]);}));return function copyToClipboard(_x,_x2){return _ref.apply(this,arguments);};}();var getAppClipboard=function getAppClipboard(){if(!CLIPBOARD){return{};}try{return JSON.parse(CLIPBOARD);}catch(error){console.error(error);return{};}};var parsePotentialSpreadsheet=function parsePotentialSpreadsheet(text){var result=tryParseSpreadsheet(text);if(result.type===VALID_SPREADSHEET){return{spreadsheet:result.spreadsheet};}return null;};/**\n * Retrieves content from system clipboard (either from ClipboardEvent or\n *  via async clipboard API if supported)\n */export var getSystemClipboard=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event){var _event$clipboardData,text;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(!event){_context2.next=5;break;}_context2.t0=(_event$clipboardData=event.clipboardData)===null||_event$clipboardData===void 0?void 0:_event$clipboardData.getData(\"text/plain\");_context2.next=11;break;case 5:_context2.t1=probablySupportsClipboardReadText;if(!_context2.t1){_context2.next=10;break;}_context2.next=9;return navigator.clipboard.readText();case 9:_context2.t1=_context2.sent;case 10:_context2.t0=_context2.t1;case 11:text=_context2.t0;return _context2.abrupt(\"return\",(text||\"\").trim());case 15:_context2.prev=15;_context2.t2=_context2[\"catch\"](0);return _context2.abrupt(\"return\",\"\");case 18:case\"end\":return _context2.stop();}},_callee2,null,[[0,15]]);}));return function getSystemClipboard(_x3){return _ref2.apply(this,arguments);};}();/**\n * Attempts to parse clipboard. Prefers system clipboard.\n */export var parseClipboard=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(event){var isPlainPaste,systemClipboard,spreadsheetResult,appClipboardData,systemClipboardData,_args3=arguments;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:isPlainPaste=_args3.length>1&&_args3[1]!==undefined?_args3[1]:false;_context3.next=3;return getSystemClipboard(event);case 3:systemClipboard=_context3.sent;if(!(!systemClipboard||!isPlainPaste&&systemClipboard.includes(SVG_EXPORT_TAG))){_context3.next=6;break;}return _context3.abrupt(\"return\",getAppClipboard());case 6:// if system clipboard contains spreadsheet, use it even though it's\n// technically possible it's staler than in-app clipboard\nspreadsheetResult=!isPlainPaste&&parsePotentialSpreadsheet(systemClipboard);if(!spreadsheetResult){_context3.next=9;break;}return _context3.abrupt(\"return\",spreadsheetResult);case 9:appClipboardData=getAppClipboard();_context3.prev=10;systemClipboardData=JSON.parse(systemClipboard);if(!clipboardContainsElements(systemClipboardData)){_context3.next=14;break;}return _context3.abrupt(\"return\",{elements:systemClipboardData.elements,files:systemClipboardData.files,text:isPlainPaste?JSON.stringify(systemClipboardData.elements,null,2):undefined});case 14:_context3.next=18;break;case 16:_context3.prev=16;_context3.t0=_context3[\"catch\"](10);case 18:return _context3.abrupt(\"return\",PREFER_APP_CLIPBOARD&&appClipboardData.elements?_objectSpread(_objectSpread({},appClipboardData),{},{text:isPlainPaste?JSON.stringify(appClipboardData.elements,null,2):undefined}):{text:systemClipboard});case 19:case\"end\":return _context3.stop();}},_callee3,null,[[10,16]]);}));return function parseClipboard(_x4){return _ref3.apply(this,arguments);};}();export var copyBlobToClipboardAsPng=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(blob){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return navigator.clipboard.write([new window.ClipboardItem(_defineProperty({},MIME_TYPES.png,blob))]);case 3:_context4.next=24;break;case 5:_context4.prev=5;_context4.t0=_context4[\"catch\"](0);if(!isPromiseLike(blob)){_context4.next=23;break;}_context4.t1=navigator.clipboard;_context4.t2=window.ClipboardItem;_context4.t3=_defineProperty;_context4.t4={};_context4.t5=MIME_TYPES.png;_context4.next=15;return blob;case 15:_context4.t6=_context4.sent;_context4.t7=(0,_context4.t3)(_context4.t4,_context4.t5,_context4.t6);_context4.t8=new _context4.t2(_context4.t7);_context4.t9=[_context4.t8];_context4.next=21;return _context4.t1.write.call(_context4.t1,_context4.t9);case 21:_context4.next=24;break;case 23:throw _context4.t0;case 24:case\"end\":return _context4.stop();}},_callee4,null,[[0,5]]);}));return function copyBlobToClipboardAsPng(_x5){return _ref4.apply(this,arguments);};}();export var copyTextToSystemClipboard=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(text){var copied;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:copied=false;if(!probablySupportsClipboardWriteText){_context5.next=11;break;}_context5.prev=2;_context5.next=5;return navigator.clipboard.writeText(text||\"\");case 5:copied=true;_context5.next=11;break;case 8:_context5.prev=8;_context5.t0=_context5[\"catch\"](2);console.error(_context5.t0);case 11:if(!(!copied&&!copyTextViaExecCommand(text||\" \"))){_context5.next=13;break;}throw new Error(\"couldn't copy\");case 13:case\"end\":return _context5.stop();}},_callee5,null,[[2,8]]);}));return function copyTextToSystemClipboard(_x6){return _ref5.apply(this,arguments);};}();// adapted from https://github.com/zenorocha/clipboard.js/blob/ce79f170aa655c408b6aab33c9472e8e4fa52e19/src/clipboard-action.js#L48\nvar copyTextViaExecCommand=function copyTextViaExecCommand(text){var isRTL=document.documentElement.getAttribute(\"dir\")===\"rtl\";var textarea=document.createElement(\"textarea\");textarea.style.border=\"0\";textarea.style.padding=\"0\";textarea.style.margin=\"0\";textarea.style.position=\"absolute\";textarea.style[isRTL?\"right\":\"left\"]=\"-9999px\";var yPosition=window.pageYOffset||document.documentElement.scrollTop;textarea.style.top=\"\".concat(yPosition,\"px\");// Prevent zooming on iOS\ntextarea.style.fontSize=\"12pt\";textarea.setAttribute(\"readonly\",\"\");textarea.value=text;document.body.appendChild(textarea);var success=false;try{textarea.select();textarea.setSelectionRange(0,textarea.value.length);success=document.execCommand(\"copy\");}catch(error){console.error(error);}textarea.remove();return success;};","map":{"version":3,"names":["SVG_EXPORT_TAG","tryParseSpreadsheet","VALID_SPREADSHEET","EXPORT_DATA_TYPES","MIME_TYPES","isInitializedImageElement","deepCopyElement","mutateElement","getContainingFrame","isPromiseLike","isTestEnv","CLIPBOARD","PREFER_APP_CLIPBOARD","probablySupportsClipboardReadText","navigator","clipboard","probablySupportsClipboardWriteText","probablySupportsClipboardBlob","window","HTMLCanvasElement","prototype","clipboardContainsElements","contents","excalidraw","excalidrawClipboard","includes","type","Array","isArray","elements","copyToClipboard","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","files","framesToCopy","foundFile","_files","json","wrap","_callee$","_context","prev","next","Set","filter","element","reduce","acc","fileId","console","warn","map","has","copiedElement","frameId","undefined","JSON","stringify","abrupt","copyTextToSystemClipboard","t0","error","stop","_x","_x2","apply","arguments","getAppClipboard","parse","parsePotentialSpreadsheet","text","result","spreadsheet","getSystemClipboard","_ref2","_callee2","event","_event$clipboardData","_callee2$","_context2","clipboardData","getData","t1","readText","sent","trim","t2","_x3","parseClipboard","_ref3","_callee3","isPlainPaste","systemClipboard","spreadsheetResult","appClipboardData","systemClipboardData","_args3","_callee3$","_context3","length","_objectSpread","_x4","copyBlobToClipboardAsPng","_ref4","_callee4","blob","_callee4$","_context4","write","ClipboardItem","_defineProperty","png","t3","t4","t5","t6","t7","t8","t9","call","_x5","_ref5","_callee5","copied","_callee5$","_context5","writeText","copyTextViaExecCommand","Error","_x6","isRTL","document","documentElement","getAttribute","textarea","createElement","style","border","padding","margin","position","yPosition","pageYOffset","scrollTop","top","concat","fontSize","setAttribute","value","body","appendChild","success","select","setSelectionRange","execCommand","remove"],"sources":["D:/project/excalidraw-cn/src/clipboard.ts"],"sourcesContent":["import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"./element/types\";\nimport { BinaryFiles } from \"./types\";\nimport { SVG_EXPORT_TAG } from \"./scene/export\";\nimport { tryParseSpreadsheet, Spreadsheet, VALID_SPREADSHEET } from \"./charts\";\nimport { EXPORT_DATA_TYPES, MIME_TYPES } from \"./constants\";\nimport { isInitializedImageElement } from \"./element/typeChecks\";\nimport { deepCopyElement } from \"./element/newElement\";\nimport { mutateElement } from \"./element/mutateElement\";\nimport { getContainingFrame } from \"./frame\";\nimport { isPromiseLike, isTestEnv } from \"./utils\";\n\ntype ElementsClipboard = {\n  type: typeof EXPORT_DATA_TYPES.excalidrawClipboard;\n  elements: readonly NonDeletedExcalidrawElement[];\n  files: BinaryFiles | undefined;\n};\n\nexport interface ClipboardData {\n  spreadsheet?: Spreadsheet;\n  elements?: readonly ExcalidrawElement[];\n  files?: BinaryFiles;\n  text?: string;\n  errorMessage?: string;\n}\n\nlet CLIPBOARD = \"\";\nlet PREFER_APP_CLIPBOARD = false;\n\nexport const probablySupportsClipboardReadText =\n  \"clipboard\" in navigator && \"readText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardWriteText =\n  \"clipboard\" in navigator && \"writeText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardBlob =\n  \"clipboard\" in navigator &&\n  \"write\" in navigator.clipboard &&\n  \"ClipboardItem\" in window &&\n  \"toBlob\" in HTMLCanvasElement.prototype;\n\nconst clipboardContainsElements = (\n  contents: any,\n): contents is { elements: ExcalidrawElement[]; files?: BinaryFiles } => {\n  if (\n    [\n      EXPORT_DATA_TYPES.excalidraw,\n      EXPORT_DATA_TYPES.excalidrawClipboard,\n    ].includes(contents?.type) &&\n    Array.isArray(contents.elements)\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const copyToClipboard = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  files: BinaryFiles | null,\n) => {\n  const framesToCopy = new Set(\n    elements.filter((element) => element.type === \"frame\"),\n  );\n  let foundFile = false;\n\n  const _files = elements.reduce((acc, element) => {\n    if (isInitializedImageElement(element)) {\n      foundFile = true;\n      if (files && files[element.fileId]) {\n        acc[element.fileId] = files[element.fileId];\n      }\n    }\n    return acc;\n  }, {} as BinaryFiles);\n\n  if (foundFile && !files) {\n    console.warn(\n      \"copyToClipboard: attempting to file element(s) without providing associated `files` object.\",\n    );\n  }\n\n  // select binded text elements when copying\n  const contents: ElementsClipboard = {\n    type: EXPORT_DATA_TYPES.excalidrawClipboard,\n    elements: elements.map((element) => {\n      if (\n        getContainingFrame(element) &&\n        !framesToCopy.has(getContainingFrame(element)!)\n      ) {\n        const copiedElement = deepCopyElement(element);\n        mutateElement(copiedElement, {\n          frameId: null,\n        });\n        return copiedElement;\n      }\n\n      return element;\n    }),\n    files: files ? _files : undefined,\n  };\n  const json = JSON.stringify(contents);\n\n  if (isTestEnv()) {\n    return json;\n  }\n\n  CLIPBOARD = json;\n\n  try {\n    PREFER_APP_CLIPBOARD = false;\n    await copyTextToSystemClipboard(json);\n  } catch (error: any) {\n    PREFER_APP_CLIPBOARD = true;\n    console.error(error);\n  }\n};\n\nconst getAppClipboard = (): Partial<ElementsClipboard> => {\n  if (!CLIPBOARD) {\n    return {};\n  }\n\n  try {\n    return JSON.parse(CLIPBOARD);\n  } catch (error: any) {\n    console.error(error);\n    return {};\n  }\n};\n\nconst parsePotentialSpreadsheet = (\n  text: string,\n): { spreadsheet: Spreadsheet } | { errorMessage: string } | null => {\n  const result = tryParseSpreadsheet(text);\n  if (result.type === VALID_SPREADSHEET) {\n    return { spreadsheet: result.spreadsheet };\n  }\n  return null;\n};\n\n/**\n * Retrieves content from system clipboard (either from ClipboardEvent or\n *  via async clipboard API if supported)\n */\nexport const getSystemClipboard = async (\n  event: ClipboardEvent | null,\n): Promise<string> => {\n  try {\n    const text = event\n      ? event.clipboardData?.getData(\"text/plain\")\n      : probablySupportsClipboardReadText &&\n        (await navigator.clipboard.readText());\n\n    return (text || \"\").trim();\n  } catch {\n    return \"\";\n  }\n};\n\n/**\n * Attempts to parse clipboard. Prefers system clipboard.\n */\nexport const parseClipboard = async (\n  event: ClipboardEvent | null,\n  isPlainPaste = false,\n): Promise<ClipboardData> => {\n  const systemClipboard = await getSystemClipboard(event);\n\n  // if system clipboard empty, couldn't be resolved, or contains previously\n  // copied excalidraw scene as SVG, fall back to previously copied excalidraw\n  // elements\n  if (\n    !systemClipboard ||\n    (!isPlainPaste && systemClipboard.includes(SVG_EXPORT_TAG))\n  ) {\n    return getAppClipboard();\n  }\n\n  // if system clipboard contains spreadsheet, use it even though it's\n  // technically possible it's staler than in-app clipboard\n  const spreadsheetResult =\n    !isPlainPaste && parsePotentialSpreadsheet(systemClipboard);\n\n  if (spreadsheetResult) {\n    return spreadsheetResult;\n  }\n\n  const appClipboardData = getAppClipboard();\n\n  try {\n    const systemClipboardData = JSON.parse(systemClipboard);\n    if (clipboardContainsElements(systemClipboardData)) {\n      return {\n        elements: systemClipboardData.elements,\n        files: systemClipboardData.files,\n        text: isPlainPaste\n          ? JSON.stringify(systemClipboardData.elements, null, 2)\n          : undefined,\n      };\n    }\n  } catch (e) {}\n  // system clipboard doesn't contain excalidraw elements → return plaintext\n  // unless we set a flag to prefer in-app clipboard because browser didn't\n  // support storing to system clipboard on copy\n  return PREFER_APP_CLIPBOARD && appClipboardData.elements\n    ? {\n        ...appClipboardData,\n        text: isPlainPaste\n          ? JSON.stringify(appClipboardData.elements, null, 2)\n          : undefined,\n      }\n    : { text: systemClipboard };\n};\n\nexport const copyBlobToClipboardAsPng = async (blob: Blob | Promise<Blob>) => {\n  try {\n    // in Safari so far we need to construct the ClipboardItem synchronously\n    // (i.e. in the same tick) otherwise browser will complain for lack of\n    // user intent. Using a Promise ClipboardItem constructor solves this.\n    // https://bugs.webkit.org/show_bug.cgi?id=222262\n    //\n    // Note that Firefox (and potentially others) seems to support Promise\n    // ClipboardItem constructor, but throws on an unrelated MIME type error.\n    // So we need to await this and fallback to awaiting the blob if applicable.\n    await navigator.clipboard.write([\n      new window.ClipboardItem({\n        [MIME_TYPES.png]: blob,\n      }),\n    ]);\n  } catch (error: any) {\n    // if we're using a Promise ClipboardItem, let's try constructing\n    // with resolution value instead\n    if (isPromiseLike(blob)) {\n      await navigator.clipboard.write([\n        new window.ClipboardItem({\n          [MIME_TYPES.png]: await blob,\n        }),\n      ]);\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport const copyTextToSystemClipboard = async (text: string | null) => {\n  let copied = false;\n  if (probablySupportsClipboardWriteText) {\n    try {\n      // NOTE: doesn't work on FF on non-HTTPS domains, or when document\n      // not focused\n      await navigator.clipboard.writeText(text || \"\");\n      copied = true;\n    } catch (error: any) {\n      console.error(error);\n    }\n  }\n\n  // Note that execCommand doesn't allow copying empty strings, so if we're\n  // clearing clipboard using this API, we must copy at least an empty char\n  if (!copied && !copyTextViaExecCommand(text || \" \")) {\n    throw new Error(\"couldn't copy\");\n  }\n};\n\n// adapted from https://github.com/zenorocha/clipboard.js/blob/ce79f170aa655c408b6aab33c9472e8e4fa52e19/src/clipboard-action.js#L48\nconst copyTextViaExecCommand = (text: string) => {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const textarea = document.createElement(\"textarea\");\n\n  textarea.style.border = \"0\";\n  textarea.style.padding = \"0\";\n  textarea.style.margin = \"0\";\n  textarea.style.position = \"absolute\";\n  textarea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\";\n  const yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  textarea.style.top = `${yPosition}px`;\n  // Prevent zooming on iOS\n  textarea.style.fontSize = \"12pt\";\n\n  textarea.setAttribute(\"readonly\", \"\");\n  textarea.value = text;\n\n  document.body.appendChild(textarea);\n\n  let success = false;\n\n  try {\n    textarea.select();\n    textarea.setSelectionRange(0, textarea.value.length);\n\n    success = document.execCommand(\"copy\");\n  } catch (error: any) {\n    console.error(error);\n  }\n\n  textarea.remove();\n\n  return success;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}