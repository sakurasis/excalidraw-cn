{"ast":null,"code":"import { register as registerServiceWorker } from \"../serviceWorkerRegistration\";\nimport { EVENT } from \"../constants\";\n\n// On Apple mobile devices add the proprietary app icon and splashscreen markup.\n// No one should have to do this manually, and eventually this annoyance will\n// go away once https://bugs.webkit.org/show_bug.cgi?id=183937 is fixed.\nif (/\\b(iPad|iPhone|iPod|Safari)\\b/.test(navigator.userAgent) && !matchMedia(\"(display-mode: standalone)\").matches) {\n  import( /* webpackChunkName: \"pwacompat\" */\"pwacompat\");\n}\nregisterServiceWorker({\n  onUpdate: registration => {\n    const waitingServiceWorker = registration.waiting;\n    if (waitingServiceWorker) {\n      waitingServiceWorker.addEventListener(EVENT.STATE_CHANGE, event => {\n        const target = event.target;\n        const state = target.state;\n        if (state === \"activated\") {\n          window.location.reload();\n        }\n      });\n      waitingServiceWorker.postMessage({\n        type: \"SKIP_WAITING\"\n      });\n    }\n  }\n});","map":{"version":3,"names":["register","registerServiceWorker","EVENT","test","navigator","userAgent","matchMedia","matches","onUpdate","registration","waitingServiceWorker","waiting","addEventListener","STATE_CHANGE","event","target","state","window","location","reload","postMessage","type"],"sources":["D:/project/excalidraw-cn/src/excalidraw-app/pwa.ts"],"sourcesContent":["import { register as registerServiceWorker } from \"../serviceWorkerRegistration\";\nimport { EVENT } from \"../constants\";\n\n// On Apple mobile devices add the proprietary app icon and splashscreen markup.\n// No one should have to do this manually, and eventually this annoyance will\n// go away once https://bugs.webkit.org/show_bug.cgi?id=183937 is fixed.\nif (\n  /\\b(iPad|iPhone|iPod|Safari)\\b/.test(navigator.userAgent) &&\n  !matchMedia(\"(display-mode: standalone)\").matches\n) {\n  import(/* webpackChunkName: \"pwacompat\" */ \"pwacompat\");\n}\n\nregisterServiceWorker({\n  onUpdate: (registration) => {\n    const waitingServiceWorker = registration.waiting;\n    if (waitingServiceWorker) {\n      waitingServiceWorker.addEventListener(\n        EVENT.STATE_CHANGE,\n        (event: Event) => {\n          const target = event.target as ServiceWorker;\n          const state = target.state as ServiceWorkerState;\n          if (state === \"activated\") {\n            window.location.reload();\n          }\n        },\n      );\n      waitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" });\n    }\n  },\n});\n"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,qBAAqB,QAAQ,8BAA8B;AAChF,SAASC,KAAK,QAAQ,cAAc;;AAEpC;AACA;AACA;AACA,IACE,+BAA+B,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IACzD,CAACC,UAAU,CAAC,4BAA4B,CAAC,CAACC,OAAO,EACjD;EACA,MAAM,EAAC,mCAAoC,WAAW,CAAC;AACzD;AAEAN,qBAAqB,CAAC;EACpBO,QAAQ,EAAGC,YAAY,IAAK;IAC1B,MAAMC,oBAAoB,GAAGD,YAAY,CAACE,OAAO;IACjD,IAAID,oBAAoB,EAAE;MACxBA,oBAAoB,CAACE,gBAAgB,CACnCV,KAAK,CAACW,YAAY,EACjBC,KAAY,IAAK;QAChB,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAuB;QAC5C,MAAMC,KAAK,GAAGD,MAAM,CAACC,KAA2B;QAChD,IAAIA,KAAK,KAAK,WAAW,EAAE;UACzBC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;QAC1B;MACF,CAAC,CACF;MACDT,oBAAoB,CAACU,WAAW,CAAC;QAAEC,IAAI,EAAE;MAAe,CAAC,CAAC;IAC5D;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}