{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { BaseClient, SDK_VERSION } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { injectReportDialog } from './helpers';\nimport { Breadcrumbs } from './integrations';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */function (_super) {\n  __extends(BrowserClient, _super);\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  function BrowserClient(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var _this = this;\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [{\n        name: 'npm:@sentry/browser',\n        version: SDK_VERSION\n      }],\n      version: SDK_VERSION\n    };\n    _this = _super.call(this, BrowserBackend, options) || this;\n    return _this;\n  }\n  /**\n   * Show a report dialog to the user to send feedback to a specific event.\n   *\n   * @param options Set individual options for the dialog\n   */\n  BrowserClient.prototype.showReportDialog = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n    // doesn't work without a document (React Native)\n    var document = getGlobalObject().document;\n    if (!document) {\n      return;\n    }\n    if (!this._isEnabled()) {\n      logger.error('Trying to call showReportDialog with Sentry Client disabled');\n      return;\n    }\n    injectReportDialog(__assign(__assign({}, options), {\n      dsn: options.dsn || this.getDsn()\n    }));\n  };\n  /**\n   * @inheritDoc\n   */\n  BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n    event.platform = event.platform || 'javascript';\n    return _super.prototype._prepareEvent.call(this, event, scope, hint);\n  };\n  /**\n   * @inheritDoc\n   */\n  BrowserClient.prototype._sendEvent = function (event) {\n    var integration = this.getIntegration(Breadcrumbs);\n    if (integration) {\n      integration.addSentryBreadcrumb(event);\n    }\n    _super.prototype._sendEvent.call(this, event);\n  };\n  return BrowserClient;\n}(BaseClient);\nexport { BrowserClient };","map":{"version":3,"names":["BaseClient","SDK_VERSION","getGlobalObject","logger","BrowserBackend","injectReportDialog","Breadcrumbs","BrowserClient","_super","__extends","options","_this","_metadata","sdk","name","packages","version","call","prototype","showReportDialog","document","_isEnabled","error","__assign","dsn","getDsn","_prepareEvent","event","scope","hint","platform","_sendEvent","integration","getIntegration","addSentryBreadcrumb"],"sources":["D:\\project\\excalidraw-cn\\node_modules\\@sentry\\browser\\src\\client.ts"],"sourcesContent":["import { BaseClient, Scope, SDK_VERSION } from '@sentry/core';\nimport { Event, EventHint } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\nimport { BrowserBackend, BrowserOptions } from './backend';\nimport { injectReportDialog, ReportDialogOptions } from './helpers';\nimport { Breadcrumbs } from './integrations';\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserBackend, BrowserOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserOptions = {}) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(BrowserBackend, options);\n  }\n\n  /**\n   * Show a report dialog to the user to send feedback to a specific event.\n   *\n   * @param options Set individual options for the dialog\n   */\n  public showReportDialog(options: ReportDialogOptions = {}): void {\n    // doesn't work without a document (React Native)\n    const document = getGlobalObject<Window>().document;\n    if (!document) {\n      return;\n    }\n\n    if (!this._isEnabled()) {\n      logger.error('Trying to call showReportDialog with Sentry Client disabled');\n      return;\n    }\n\n    injectReportDialog({\n      ...options,\n      dsn: options.dsn || this.getDsn(),\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, scope, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _sendEvent(event: Event): void {\n    const integration = this.getIntegration(Breadcrumbs);\n    if (integration) {\n      integration.addSentryBreadcrumb(event);\n    }\n    super._sendEvent(event);\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,EAASC,WAAW,QAAQ,cAAc;AAE7D,SAASC,eAAe,EAAEC,MAAM,QAAQ,eAAe;AAEvD,SAASC,cAAc,QAAwB,WAAW;AAC1D,SAASC,kBAAkB,QAA6B,WAAW;AACnE,SAASC,WAAW,QAAQ,gBAAgB;AAE5C;;;;;;AAMA,IAAAC,aAAA,0BAAAC,MAAA;EAAmCC,SAAA,CAAAF,aAAA,EAAAC,MAAA;EACjC;;;;;EAKA,SAAAD,cAAmBG,OAA4B;IAA5B,IAAAA,OAAA;MAAAA,OAAA,KAA4B;IAAA;IAA/C,IAAAC,KAAA;IACED,OAAO,CAACE,SAAS,GAAGF,OAAO,CAACE,SAAS,IAAI,EAAE;IAC3CF,OAAO,CAACE,SAAS,CAACC,GAAG,GAAGH,OAAO,CAACE,SAAS,CAACC,GAAG,IAAI;MAC/CC,IAAI,EAAE,2BAA2B;MACjCC,QAAQ,EAAE,CACR;QACED,IAAI,EAAE,qBAAqB;QAC3BE,OAAO,EAAEf;OACV,CACF;MACDe,OAAO,EAAEf;KACV;IAEDU,KAAA,GAAAH,MAAA,CAAAS,IAAA,OAAMb,cAAc,EAAEM,OAAO,CAAC;;EAChC;EAEA;;;;;EAKOH,aAAA,CAAAW,SAAA,CAAAC,gBAAgB,GAAvB,UAAwBT,OAAiC;IAAjC,IAAAA,OAAA;MAAAA,OAAA,KAAiC;IAAA;IACvD;IACA,IAAMU,QAAQ,GAAGlB,eAAe,EAAU,CAACkB,QAAQ;IACnD,IAAI,CAACA,QAAQ,EAAE;MACb;;IAGF,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE,EAAE;MACtBlB,MAAM,CAACmB,KAAK,CAAC,6DAA6D,CAAC;MAC3E;;IAGFjB,kBAAkB,CAAAkB,QAAA,CAAAA,QAAA,KACbb,OAAO;MACVc,GAAG,EAAEd,OAAO,CAACc,GAAG,IAAI,IAAI,CAACC,MAAM;IAAE,GACjC;EACJ,CAAC;EAED;;;EAGUlB,aAAA,CAAAW,SAAA,CAAAQ,aAAa,GAAvB,UAAwBC,KAAY,EAAEC,KAAa,EAAEC,IAAgB;IACnEF,KAAK,CAACG,QAAQ,GAAGH,KAAK,CAACG,QAAQ,IAAI,YAAY;IAC/C,OAAOtB,MAAA,CAAAU,SAAA,CAAMQ,aAAa,CAAAT,IAAA,OAACU,KAAK,EAAEC,KAAK,EAAEC,IAAI,CAAC;EAChD,CAAC;EAED;;;EAGUtB,aAAA,CAAAW,SAAA,CAAAa,UAAU,GAApB,UAAqBJ,KAAY;IAC/B,IAAMK,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC3B,WAAW,CAAC;IACpD,IAAI0B,WAAW,EAAE;MACfA,WAAW,CAACE,mBAAmB,CAACP,KAAK,CAAC;;IAExCnB,MAAA,CAAAU,SAAA,CAAMa,UAAU,CAAAd,IAAA,OAACU,KAAK,CAAC;EACzB,CAAC;EACH,OAAApB,aAAC;AAAD,CAAC,CA/DkCP,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}