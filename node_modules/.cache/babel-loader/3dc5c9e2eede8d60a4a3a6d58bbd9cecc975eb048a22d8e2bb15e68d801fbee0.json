{"ast":null,"code":"import { SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, uuid4 } from '@sentry/utils';\n/**\n * @inheritdoc\n */\nvar Session = /** @class */function () {\n  function Session(context) {\n    this.errors = 0;\n    this.sid = uuid4();\n    this.timestamp = Date.now();\n    this.started = Date.now();\n    this.duration = 0;\n    this.status = SessionStatus.Ok;\n    this.init = true;\n    if (context) {\n      this.update(context);\n    }\n  }\n  /** JSDoc */\n  // eslint-disable-next-line complexity\n  Session.prototype.update = function (context) {\n    if (context === void 0) {\n      context = {};\n    }\n    if (context.user) {\n      if (context.user.ip_address) {\n        this.ipAddress = context.user.ip_address;\n      }\n      if (!context.did) {\n        this.did = context.user.id || context.user.email || context.user.username;\n      }\n    }\n    this.timestamp = context.timestamp || Date.now();\n    if (context.sid) {\n      // Good enough uuid validation. — Kamil\n      this.sid = context.sid.length === 32 ? context.sid : uuid4();\n    }\n    if (context.init !== undefined) {\n      this.init = context.init;\n    }\n    if (context.did) {\n      this.did = \"\" + context.did;\n    }\n    if (typeof context.started === 'number') {\n      this.started = context.started;\n    }\n    if (typeof context.duration === 'number') {\n      this.duration = context.duration;\n    } else {\n      this.duration = this.timestamp - this.started;\n    }\n    if (context.release) {\n      this.release = context.release;\n    }\n    if (context.environment) {\n      this.environment = context.environment;\n    }\n    if (context.ipAddress) {\n      this.ipAddress = context.ipAddress;\n    }\n    if (context.userAgent) {\n      this.userAgent = context.userAgent;\n    }\n    if (typeof context.errors === 'number') {\n      this.errors = context.errors;\n    }\n    if (context.status) {\n      this.status = context.status;\n    }\n  };\n  /** JSDoc */\n  Session.prototype.close = function (status) {\n    if (status) {\n      this.update({\n        status: status\n      });\n    } else if (this.status === SessionStatus.Ok) {\n      this.update({\n        status: SessionStatus.Exited\n      });\n    } else {\n      this.update();\n    }\n  };\n  /** JSDoc */\n  Session.prototype.toJSON = function () {\n    return dropUndefinedKeys({\n      sid: \"\" + this.sid,\n      init: this.init,\n      started: new Date(this.started).toISOString(),\n      timestamp: new Date(this.timestamp).toISOString(),\n      status: this.status,\n      errors: this.errors,\n      did: typeof this.did === 'number' || typeof this.did === 'string' ? \"\" + this.did : undefined,\n      duration: this.duration,\n      attrs: dropUndefinedKeys({\n        release: this.release,\n        environment: this.environment,\n        ip_address: this.ipAddress,\n        user_agent: this.userAgent\n      })\n    });\n  };\n  return Session;\n}();\nexport { Session };","map":{"version":3,"names":["SessionStatus","dropUndefinedKeys","uuid4","Session","context","errors","sid","timestamp","Date","now","started","duration","status","Ok","init","update","prototype","user","ip_address","ipAddress","did","id","email","username","length","undefined","release","environment","userAgent","close","Exited","toJSON","toISOString","attrs","user_agent"],"sources":["D:\\project\\excalidraw-cn\\node_modules\\@sentry\\hub\\src\\session.ts"],"sourcesContent":["import { Session as SessionInterface, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, uuid4 } from '@sentry/utils';\n\n/**\n * @inheritdoc\n */\nexport class Session implements SessionInterface {\n  public userAgent?: string;\n  public errors: number = 0;\n  public release?: string;\n  public sid: string = uuid4();\n  public did?: string;\n  public timestamp: number = Date.now();\n  public started: number = Date.now();\n  public duration: number = 0;\n  public status: SessionStatus = SessionStatus.Ok;\n  public environment?: string;\n  public ipAddress?: string;\n  public init: boolean = true;\n\n  constructor(context?: Omit<SessionContext, 'started' | 'status'>) {\n    if (context) {\n      this.update(context);\n    }\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line complexity\n  update(context: SessionContext = {}): void {\n    if (context.user) {\n      if (context.user.ip_address) {\n        this.ipAddress = context.user.ip_address;\n      }\n\n      if (!context.did) {\n        this.did = context.user.id || context.user.email || context.user.username;\n      }\n    }\n\n    this.timestamp = context.timestamp || Date.now();\n\n    if (context.sid) {\n      // Good enough uuid validation. — Kamil\n      this.sid = context.sid.length === 32 ? context.sid : uuid4();\n    }\n    if (context.init !== undefined) {\n      this.init = context.init;\n    }\n    if (context.did) {\n      this.did = `${context.did}`;\n    }\n    if (typeof context.started === 'number') {\n      this.started = context.started;\n    }\n    if (typeof context.duration === 'number') {\n      this.duration = context.duration;\n    } else {\n      this.duration = this.timestamp - this.started;\n    }\n    if (context.release) {\n      this.release = context.release;\n    }\n    if (context.environment) {\n      this.environment = context.environment;\n    }\n    if (context.ipAddress) {\n      this.ipAddress = context.ipAddress;\n    }\n    if (context.userAgent) {\n      this.userAgent = context.userAgent;\n    }\n    if (typeof context.errors === 'number') {\n      this.errors = context.errors;\n    }\n    if (context.status) {\n      this.status = context.status;\n    }\n  }\n\n  /** JSDoc */\n  close(status?: Exclude<SessionStatus, SessionStatus.Ok>): void {\n    if (status) {\n      this.update({ status });\n    } else if (this.status === SessionStatus.Ok) {\n      this.update({ status: SessionStatus.Exited });\n    } else {\n      this.update();\n    }\n  }\n\n  /** JSDoc */\n  toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  } {\n    return dropUndefinedKeys({\n      sid: `${this.sid}`,\n      init: this.init,\n      started: new Date(this.started).toISOString(),\n      timestamp: new Date(this.timestamp).toISOString(),\n      status: this.status,\n      errors: this.errors,\n      did: typeof this.did === 'number' || typeof this.did === 'string' ? `${this.did}` : undefined,\n      duration: this.duration,\n      attrs: dropUndefinedKeys({\n        release: this.release,\n        environment: this.environment,\n        ip_address: this.ipAddress,\n        user_agent: this.userAgent,\n      }),\n    });\n  }\n}\n"],"mappings":"AAAA,SAAsDA,aAAa,QAAQ,eAAe;AAC1F,SAASC,iBAAiB,EAAEC,KAAK,QAAQ,eAAe;AAExD;;;AAGA,IAAAC,OAAA;EAcE,SAAAA,QAAYC,OAAoD;IAZzD,KAAAC,MAAM,GAAW,CAAC;IAElB,KAAAC,GAAG,GAAWJ,KAAK,EAAE;IAErB,KAAAK,SAAS,GAAWC,IAAI,CAACC,GAAG,EAAE;IAC9B,KAAAC,OAAO,GAAWF,IAAI,CAACC,GAAG,EAAE;IAC5B,KAAAE,QAAQ,GAAW,CAAC;IACpB,KAAAC,MAAM,GAAkBZ,aAAa,CAACa,EAAE;IAGxC,KAAAC,IAAI,GAAY,IAAI;IAGzB,IAAIV,OAAO,EAAE;MACX,IAAI,CAACW,MAAM,CAACX,OAAO,CAAC;;EAExB;EAEA;EACA;EACAD,OAAA,CAAAa,SAAA,CAAAD,MAAM,GAAN,UAAOX,OAA4B;IAA5B,IAAAA,OAAA;MAAAA,OAAA,KAA4B;IAAA;IACjC,IAAIA,OAAO,CAACa,IAAI,EAAE;MAChB,IAAIb,OAAO,CAACa,IAAI,CAACC,UAAU,EAAE;QAC3B,IAAI,CAACC,SAAS,GAAGf,OAAO,CAACa,IAAI,CAACC,UAAU;;MAG1C,IAAI,CAACd,OAAO,CAACgB,GAAG,EAAE;QAChB,IAAI,CAACA,GAAG,GAAGhB,OAAO,CAACa,IAAI,CAACI,EAAE,IAAIjB,OAAO,CAACa,IAAI,CAACK,KAAK,IAAIlB,OAAO,CAACa,IAAI,CAACM,QAAQ;;;IAI7E,IAAI,CAAChB,SAAS,GAAGH,OAAO,CAACG,SAAS,IAAIC,IAAI,CAACC,GAAG,EAAE;IAEhD,IAAIL,OAAO,CAACE,GAAG,EAAE;MACf;MACA,IAAI,CAACA,GAAG,GAAGF,OAAO,CAACE,GAAG,CAACkB,MAAM,KAAK,EAAE,GAAGpB,OAAO,CAACE,GAAG,GAAGJ,KAAK,EAAE;;IAE9D,IAAIE,OAAO,CAACU,IAAI,KAAKW,SAAS,EAAE;MAC9B,IAAI,CAACX,IAAI,GAAGV,OAAO,CAACU,IAAI;;IAE1B,IAAIV,OAAO,CAACgB,GAAG,EAAE;MACf,IAAI,CAACA,GAAG,GAAG,KAAGhB,OAAO,CAACgB,GAAK;;IAE7B,IAAI,OAAOhB,OAAO,CAACM,OAAO,KAAK,QAAQ,EAAE;MACvC,IAAI,CAACA,OAAO,GAAGN,OAAO,CAACM,OAAO;;IAEhC,IAAI,OAAON,OAAO,CAACO,QAAQ,KAAK,QAAQ,EAAE;MACxC,IAAI,CAACA,QAAQ,GAAGP,OAAO,CAACO,QAAQ;KACjC,MAAM;MACL,IAAI,CAACA,QAAQ,GAAG,IAAI,CAACJ,SAAS,GAAG,IAAI,CAACG,OAAO;;IAE/C,IAAIN,OAAO,CAACsB,OAAO,EAAE;MACnB,IAAI,CAACA,OAAO,GAAGtB,OAAO,CAACsB,OAAO;;IAEhC,IAAItB,OAAO,CAACuB,WAAW,EAAE;MACvB,IAAI,CAACA,WAAW,GAAGvB,OAAO,CAACuB,WAAW;;IAExC,IAAIvB,OAAO,CAACe,SAAS,EAAE;MACrB,IAAI,CAACA,SAAS,GAAGf,OAAO,CAACe,SAAS;;IAEpC,IAAIf,OAAO,CAACwB,SAAS,EAAE;MACrB,IAAI,CAACA,SAAS,GAAGxB,OAAO,CAACwB,SAAS;;IAEpC,IAAI,OAAOxB,OAAO,CAACC,MAAM,KAAK,QAAQ,EAAE;MACtC,IAAI,CAACA,MAAM,GAAGD,OAAO,CAACC,MAAM;;IAE9B,IAAID,OAAO,CAACQ,MAAM,EAAE;MAClB,IAAI,CAACA,MAAM,GAAGR,OAAO,CAACQ,MAAM;;EAEhC,CAAC;EAED;EACAT,OAAA,CAAAa,SAAA,CAAAa,KAAK,GAAL,UAAMjB,MAAiD;IACrD,IAAIA,MAAM,EAAE;MACV,IAAI,CAACG,MAAM,CAAC;QAAEH,MAAM,EAAAA;MAAA,CAAE,CAAC;KACxB,MAAM,IAAI,IAAI,CAACA,MAAM,KAAKZ,aAAa,CAACa,EAAE,EAAE;MAC3C,IAAI,CAACE,MAAM,CAAC;QAAEH,MAAM,EAAEZ,aAAa,CAAC8B;MAAM,CAAE,CAAC;KAC9C,MAAM;MACL,IAAI,CAACf,MAAM,EAAE;;EAEjB,CAAC;EAED;EACAZ,OAAA,CAAAa,SAAA,CAAAe,MAAM,GAAN;IAgBE,OAAO9B,iBAAiB,CAAC;MACvBK,GAAG,EAAE,KAAG,IAAI,CAACA,GAAK;MAClBQ,IAAI,EAAE,IAAI,CAACA,IAAI;MACfJ,OAAO,EAAE,IAAIF,IAAI,CAAC,IAAI,CAACE,OAAO,CAAC,CAACsB,WAAW,EAAE;MAC7CzB,SAAS,EAAE,IAAIC,IAAI,CAAC,IAAI,CAACD,SAAS,CAAC,CAACyB,WAAW,EAAE;MACjDpB,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBP,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBe,GAAG,EAAE,OAAO,IAAI,CAACA,GAAG,KAAK,QAAQ,IAAI,OAAO,IAAI,CAACA,GAAG,KAAK,QAAQ,GAAG,KAAG,IAAI,CAACA,GAAK,GAAGK,SAAS;MAC7Fd,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBsB,KAAK,EAAEhC,iBAAiB,CAAC;QACvByB,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBC,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BT,UAAU,EAAE,IAAI,CAACC,SAAS;QAC1Be,UAAU,EAAE,IAAI,CAACN;OAClB;KACF,CAAC;EACJ,CAAC;EACH,OAAAzB,OAAC;AAAD,CAAC,EAtHD"},"metadata":{},"sourceType":"module","externalDependencies":[]}