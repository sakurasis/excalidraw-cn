{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\ColorPicker\\\\ColorPicker.tsx\";\nimport { isInteractive, isTransparent, isWritableElement } from \"../../utils\";\nimport { TopPicks } from \"./TopPicks\";\nimport { Picker } from \"./Picker\";\nimport * as Popover from \"@radix-ui/react-popover\";\nimport { useAtom } from \"jotai\";\nimport { activeColorPickerSectionAtom } from \"./colorPickerUtils\";\nimport { useDevice, useExcalidrawContainer } from \"../App\";\nimport { COLOR_PALETTE } from \"../../colors\";\nimport PickerHeading from \"./PickerHeading\";\nimport { t } from \"../../i18n\";\nimport clsx from \"clsx\";\nimport { jotaiScope } from \"../../jotai\";\nimport { ColorInput } from \"./ColorInput\";\nimport { useRef } from \"react\";\nimport { activeEyeDropperAtom } from \"../EyeDropper\";\nimport \"./ColorPicker.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isValidColor = color => {\n  const style = new Option().style;\n  style.color = color;\n  return !!style.color;\n};\nexport const getColor = color => {\n  if (isTransparent(color)) {\n    return color;\n  }\n\n  // testing for `#` first fixes a bug on Electron (more specfically, an\n  // Obsidian popout window), where a hex color without `#` is (incorrectly)\n  // considered valid\n  return isValidColor(`#${color}`) ? `#${color}` : isValidColor(color) ? color : null;\n};\nconst ColorPickerPopupContent = _ref => {\n  let {\n    type,\n    color,\n    onChange,\n    label,\n    elements,\n    palette = COLOR_PALETTE,\n    updateData\n  } = _ref;\n  const [, setActiveColorPickerSection] = useAtom(activeColorPickerSectionAtom);\n  const [eyeDropperState, setEyeDropperState] = useAtom(activeEyeDropperAtom, jotaiScope);\n  const {\n    container\n  } = useExcalidrawContainer();\n  const {\n    isMobile,\n    isLandscape\n  } = useDevice();\n  const colorInputJSX = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PickerHeading, {\n      children: t(\"colorPicker.hexCode\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColorInput, {\n      color: color,\n      label: label,\n      onChange: color => {\n        onChange(color);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n  const popoverRef = useRef(null);\n  const focusPickerContent = () => {\n    var _popoverRef$current, _popoverRef$current$q;\n    (_popoverRef$current = popoverRef.current) === null || _popoverRef$current === void 0 ? void 0 : (_popoverRef$current$q = _popoverRef$current.querySelector(\".color-picker-content\")) === null || _popoverRef$current$q === void 0 ? void 0 : _popoverRef$current$q.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(Popover.Portal, {\n    container: container,\n    children: /*#__PURE__*/_jsxDEV(Popover.Content, {\n      ref: popoverRef,\n      className: \"focus-visible-none\",\n      \"data-prevent-outside-click\": true,\n      onFocusOutside: event => {\n        focusPickerContent();\n        event.preventDefault();\n      },\n      onPointerDownOutside: event => {\n        if (eyeDropperState) {\n          // prevent from closing if we click outside the popover\n          // while eyedropping (e.g. click when clicking the sidebar;\n          // the eye-dropper-backdrop is prevented downstream)\n          event.preventDefault();\n        }\n      },\n      onCloseAutoFocus: e => {\n        e.stopPropagation();\n        // prevents focusing the trigger\n        e.preventDefault();\n\n        // return focus to excalidraw container unless\n        // user focuses an interactive element, such as a button, or\n        // enters the text editor by clicking on canvas with the text tool\n        if (container && !isInteractive(document.activeElement)) {\n          container.focus();\n        }\n        updateData({\n          openPopup: null\n        });\n        setActiveColorPickerSection(null);\n      },\n      side: isMobile && !isLandscape ? \"bottom\" : \"right\",\n      align: isMobile && !isLandscape ? \"center\" : \"start\",\n      alignOffset: -16,\n      sideOffset: 20,\n      style: {\n        zIndex: 9999,\n        backgroundColor: \"var(--popup-bg-color)\",\n        maxWidth: \"208px\",\n        maxHeight: window.innerHeight,\n        padding: \"12px\",\n        borderRadius: \"8px\",\n        boxSizing: \"border-box\",\n        overflowY: \"auto\",\n        boxShadow: \"0px 7px 14px rgba(0, 0, 0, 0.05), 0px 0px 3.12708px rgba(0, 0, 0, 0.0798), 0px 0px 0.931014px rgba(0, 0, 0, 0.1702)\"\n      },\n      children: [palette ? /*#__PURE__*/_jsxDEV(Picker, {\n        palette: palette,\n        color: color,\n        onChange: changedColor => {\n          onChange(changedColor);\n        },\n        onEyeDropperToggle: force => {\n          setEyeDropperState(state => {\n            if (force) {\n              state = state || {\n                keepOpenOnAlt: true,\n                onSelect: onChange\n              };\n              state.keepOpenOnAlt = true;\n              return state;\n            }\n            return force === false || state ? null : {\n              keepOpenOnAlt: false,\n              onSelect: onChange\n            };\n          });\n        },\n        onEscape: event => {\n          if (eyeDropperState) {\n            setEyeDropperState(null);\n          } else if (isWritableElement(event.target)) {\n            focusPickerContent();\n          } else {\n            updateData({\n              openPopup: null\n            });\n          }\n        },\n        label: label,\n        type: type,\n        elements: elements,\n        updateData: updateData,\n        children: colorInputJSX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this) : colorInputJSX, /*#__PURE__*/_jsxDEV(Popover.Arrow, {\n        width: 20,\n        height: 10,\n        style: {\n          fill: \"var(--popup-bg-color)\",\n          filter: \"drop-shadow(rgba(0, 0, 0, 0.05) 0px 3px 2px)\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\nconst ColorPickerTrigger = _ref2 => {\n  let {\n    label,\n    color,\n    type\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Popover.Trigger, {\n    type: \"button\",\n    className: clsx(\"color-picker__button active-color\", {\n      \"is-transparent\": color === \"transparent\" || !color\n    }),\n    \"aria-label\": label,\n    style: color ? {\n      \"--swatch-color\": color\n    } : undefined,\n    title: type === \"elementStroke\" ? t(\"labels.showStroke\") : t(\"labels.showBackground\"),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-picker__button-outline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\nexport const ColorPicker = _ref3 => {\n  let {\n    type,\n    color,\n    onChange,\n    label,\n    elements,\n    palette = COLOR_PALETTE,\n    topPicks,\n    updateData,\n    appState\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      className: \"color-picker-container\",\n      children: [/*#__PURE__*/_jsxDEV(TopPicks, {\n        activeColor: color,\n        onChange: onChange,\n        type: type,\n        topPicks: topPicks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 1,\n          height: \"100%\",\n          backgroundColor: \"var(--default-border-color)\",\n          margin: \"0 auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popover.Root, {\n        open: appState.openPopup === type,\n        onOpenChange: open => {\n          updateData({\n            openPopup: open ? type : null\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(ColorPickerTrigger, {\n          color: color,\n          label: label,\n          type: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), appState.openPopup === type && /*#__PURE__*/_jsxDEV(ColorPickerPopupContent, {\n          type: type,\n          color: color,\n          onChange: onChange,\n          label: label,\n          elements: elements,\n          palette: palette,\n          updateData: updateData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["isInteractive","isTransparent","isWritableElement","TopPicks","Picker","Popover","useAtom","activeColorPickerSectionAtom","useDevice","useExcalidrawContainer","COLOR_PALETTE","PickerHeading","t","clsx","jotaiScope","ColorInput","useRef","activeEyeDropperAtom","jsxDEV","_jsxDEV","isValidColor","color","style","Option","getColor","ColorPickerPopupContent","_ref","type","onChange","label","elements","palette","updateData","setActiveColorPickerSection","eyeDropperState","setEyeDropperState","container","isMobile","isLandscape","colorInputJSX","children","fileName","_jsxFileName","lineNumber","columnNumber","popoverRef","focusPickerContent","_popoverRef$current","_popoverRef$current$q","current","querySelector","focus","Portal","Content","ref","className","onFocusOutside","event","preventDefault","onPointerDownOutside","onCloseAutoFocus","e","stopPropagation","document","activeElement","openPopup","side","align","alignOffset","sideOffset","zIndex","backgroundColor","maxWidth","maxHeight","window","innerHeight","padding","borderRadius","boxSizing","overflowY","boxShadow","changedColor","onEyeDropperToggle","force","state","keepOpenOnAlt","onSelect","onEscape","target","Arrow","width","height","fill","filter","ColorPickerTrigger","_ref2","Trigger","undefined","title","ColorPicker","_ref3","topPicks","appState","role","activeColor","margin","Root","open","onOpenChange"],"sources":["D:/project/excalidraw-cn/src/components/ColorPicker/ColorPicker.tsx"],"sourcesContent":["import { isInteractive, isTransparent, isWritableElement } from \"../../utils\";\nimport { ExcalidrawElement } from \"../../element/types\";\nimport { AppState } from \"../../types\";\nimport { TopPicks } from \"./TopPicks\";\nimport { Picker } from \"./Picker\";\nimport * as Popover from \"@radix-ui/react-popover\";\nimport { useAtom } from \"jotai\";\nimport {\n  activeColorPickerSectionAtom,\n  ColorPickerType,\n} from \"./colorPickerUtils\";\nimport { useDevice, useExcalidrawContainer } from \"../App\";\nimport { ColorTuple, COLOR_PALETTE, ColorPaletteCustom } from \"../../colors\";\nimport PickerHeading from \"./PickerHeading\";\nimport { t } from \"../../i18n\";\nimport clsx from \"clsx\";\nimport { jotaiScope } from \"../../jotai\";\nimport { ColorInput } from \"./ColorInput\";\nimport { useRef } from \"react\";\nimport { activeEyeDropperAtom } from \"../EyeDropper\";\n\nimport \"./ColorPicker.scss\";\n\nconst isValidColor = (color: string) => {\n  const style = new Option().style;\n  style.color = color;\n  return !!style.color;\n};\n\nexport const getColor = (color: string): string | null => {\n  if (isTransparent(color)) {\n    return color;\n  }\n\n  // testing for `#` first fixes a bug on Electron (more specfically, an\n  // Obsidian popout window), where a hex color without `#` is (incorrectly)\n  // considered valid\n  return isValidColor(`#${color}`)\n    ? `#${color}`\n    : isValidColor(color)\n    ? color\n    : null;\n};\n\ninterface ColorPickerProps {\n  type: ColorPickerType;\n  color: string;\n  onChange: (color: string) => void;\n  label: string;\n  elements: readonly ExcalidrawElement[];\n  appState: AppState;\n  palette?: ColorPaletteCustom | null;\n  topPicks?: ColorTuple;\n  updateData: (formData?: any) => void;\n}\n\nconst ColorPickerPopupContent = ({\n  type,\n  color,\n  onChange,\n  label,\n  elements,\n  palette = COLOR_PALETTE,\n  updateData,\n}: Pick<\n  ColorPickerProps,\n  | \"type\"\n  | \"color\"\n  | \"onChange\"\n  | \"label\"\n  | \"elements\"\n  | \"palette\"\n  | \"updateData\"\n>) => {\n  const [, setActiveColorPickerSection] = useAtom(activeColorPickerSectionAtom);\n\n  const [eyeDropperState, setEyeDropperState] = useAtom(\n    activeEyeDropperAtom,\n    jotaiScope,\n  );\n\n  const { container } = useExcalidrawContainer();\n  const { isMobile, isLandscape } = useDevice();\n\n  const colorInputJSX = (\n    <div>\n      <PickerHeading>{t(\"colorPicker.hexCode\")}</PickerHeading>\n      <ColorInput\n        color={color}\n        label={label}\n        onChange={(color) => {\n          onChange(color);\n        }}\n      />\n    </div>\n  );\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  const focusPickerContent = () => {\n    popoverRef.current\n      ?.querySelector<HTMLDivElement>(\".color-picker-content\")\n      ?.focus();\n  };\n\n  return (\n    <Popover.Portal container={container}>\n      <Popover.Content\n        ref={popoverRef}\n        className=\"focus-visible-none\"\n        data-prevent-outside-click\n        onFocusOutside={(event) => {\n          focusPickerContent();\n          event.preventDefault();\n        }}\n        onPointerDownOutside={(event) => {\n          if (eyeDropperState) {\n            // prevent from closing if we click outside the popover\n            // while eyedropping (e.g. click when clicking the sidebar;\n            // the eye-dropper-backdrop is prevented downstream)\n            event.preventDefault();\n          }\n        }}\n        onCloseAutoFocus={(e) => {\n          e.stopPropagation();\n          // prevents focusing the trigger\n          e.preventDefault();\n\n          // return focus to excalidraw container unless\n          // user focuses an interactive element, such as a button, or\n          // enters the text editor by clicking on canvas with the text tool\n          if (container && !isInteractive(document.activeElement)) {\n            container.focus();\n          }\n\n          updateData({ openPopup: null });\n          setActiveColorPickerSection(null);\n        }}\n        side={isMobile && !isLandscape ? \"bottom\" : \"right\"}\n        align={isMobile && !isLandscape ? \"center\" : \"start\"}\n        alignOffset={-16}\n        sideOffset={20}\n        style={{\n          zIndex: 9999,\n          backgroundColor: \"var(--popup-bg-color)\",\n          maxWidth: \"208px\",\n          maxHeight: window.innerHeight,\n          padding: \"12px\",\n          borderRadius: \"8px\",\n          boxSizing: \"border-box\",\n          overflowY: \"auto\",\n          boxShadow:\n            \"0px 7px 14px rgba(0, 0, 0, 0.05), 0px 0px 3.12708px rgba(0, 0, 0, 0.0798), 0px 0px 0.931014px rgba(0, 0, 0, 0.1702)\",\n        }}\n      >\n        {palette ? (\n          <Picker\n            palette={palette}\n            color={color}\n            onChange={(changedColor) => {\n              onChange(changedColor);\n            }}\n            onEyeDropperToggle={(force) => {\n              setEyeDropperState((state) => {\n                if (force) {\n                  state = state || {\n                    keepOpenOnAlt: true,\n                    onSelect: onChange,\n                  };\n                  state.keepOpenOnAlt = true;\n                  return state;\n                }\n\n                return force === false || state\n                  ? null\n                  : {\n                      keepOpenOnAlt: false,\n                      onSelect: onChange,\n                    };\n              });\n            }}\n            onEscape={(event) => {\n              if (eyeDropperState) {\n                setEyeDropperState(null);\n              } else if (isWritableElement(event.target)) {\n                focusPickerContent();\n              } else {\n                updateData({ openPopup: null });\n              }\n            }}\n            label={label}\n            type={type}\n            elements={elements}\n            updateData={updateData}\n          >\n            {colorInputJSX}\n          </Picker>\n        ) : (\n          colorInputJSX\n        )}\n        <Popover.Arrow\n          width={20}\n          height={10}\n          style={{\n            fill: \"var(--popup-bg-color)\",\n            filter: \"drop-shadow(rgba(0, 0, 0, 0.05) 0px 3px 2px)\",\n          }}\n        />\n      </Popover.Content>\n    </Popover.Portal>\n  );\n};\n\nconst ColorPickerTrigger = ({\n  label,\n  color,\n  type,\n}: {\n  color: string;\n  label: string;\n  type: ColorPickerType;\n}) => {\n  return (\n    <Popover.Trigger\n      type=\"button\"\n      className={clsx(\"color-picker__button active-color\", {\n        \"is-transparent\": color === \"transparent\" || !color,\n      })}\n      aria-label={label}\n      style={color ? { \"--swatch-color\": color } : undefined}\n      title={\n        type === \"elementStroke\"\n          ? t(\"labels.showStroke\")\n          : t(\"labels.showBackground\")\n      }\n    >\n      <div className=\"color-picker__button-outline\" />\n    </Popover.Trigger>\n  );\n};\n\nexport const ColorPicker = ({\n  type,\n  color,\n  onChange,\n  label,\n  elements,\n  palette = COLOR_PALETTE,\n  topPicks,\n  updateData,\n  appState,\n}: ColorPickerProps) => {\n  return (\n    <div>\n      <div role=\"dialog\" aria-modal=\"true\" className=\"color-picker-container\">\n        <TopPicks\n          activeColor={color}\n          onChange={onChange}\n          type={type}\n          topPicks={topPicks}\n        />\n        <div\n          style={{\n            width: 1,\n            height: \"100%\",\n            backgroundColor: \"var(--default-border-color)\",\n            margin: \"0 auto\",\n          }}\n        />\n        <Popover.Root\n          open={appState.openPopup === type}\n          onOpenChange={(open) => {\n            updateData({ openPopup: open ? type : null });\n          }}\n        >\n          {/* serves as an active color indicator as well */}\n          <ColorPickerTrigger color={color} label={label} type={type} />\n          {/* popup content */}\n          {appState.openPopup === type && (\n            <ColorPickerPopupContent\n              type={type}\n              color={color}\n              onChange={onChange}\n              label={label}\n              elements={elements}\n              palette={palette}\n              updateData={updateData}\n            />\n          )}\n        </Popover.Root>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}