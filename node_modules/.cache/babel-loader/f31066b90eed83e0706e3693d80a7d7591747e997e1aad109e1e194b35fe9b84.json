{"ast":null,"code":"/*\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n'use strict';\n\n// WARNING\n// Don't use this file directly in production! Please include `pwacompat.min.js`!\n// WARNING\n/**\n * @suppress {uselessCode}\n */\nfunction unused() {\n  // compiled out, but crashes IE11 early rather than within the code\n  \"Please don't use this file directly: include pwacompat.min.js instead!\";\n}\n(function () {\n  // basic feature detection: from IE10+\n  // also fallout on 'navigator.standalone', we _are_ an iOS PWA\n  if (!('onload' in XMLHttpRequest.prototype) || navigator.standalone) {\n    return;\n  }\n  var debug = false;\n  var capableDisplayModes = ['standalone', 'fullscreen', 'minimal-ui'];\n  var defaultSplashColor = '#f8f9fa';\n  var defaultSplashTextSize = 24;\n  var defaultFontName = 'HelveticaNeue-CondensedBold';\n  var idealSplashIconSize = 128;\n  var minimumSplashIconSize = 48;\n  var splashIconPadding = 20;\n  var appleIconSizeMin = 120;\n  var userAgent = navigator.userAgent || '';\n  var isSafari = navigator.vendor && navigator.vendor.indexOf('Apple') !== -1;\n  var isSafariMobile = isSafari && (userAgent.indexOf('Mobile/') !== -1 || 'standalone' in navigator) || debug;\n  var isIEOrEdge = Boolean(userAgent.match(/(MSIE |Edge\\/|Trident\\/)/));\n  var isEdgePWA = typeof Windows !== 'undefined';\n  var manifestEl; // we need this later, not just for JSON\n  var internalStorage;\n  try {\n    internalStorage = sessionStorage;\n  } catch (e) {}\n  internalStorage = internalStorage || {};\n\n  /**\n   * Retrieves element in head if available, otherwise null\n   * @param {string} selector CSS selector\n   * @return {?Element}\n   */\n  function getElementInHead(selector) {\n    // It's possible to pass \"bad\" attr or values here (originally from the manifest); just\n    // return null if there's something wrong.\n    try {\n      return document.head.querySelector(selector);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @param {string} k\n   * @param {string=} v\n   * @return {string|undefined}\n   */\n  function store(k, v) {\n    var key = '__pwacompat_' + k;\n    if (v !== undefined) {\n      internalStorage[key] = v;\n    }\n    return internalStorage[key];\n  }\n  function setup() {\n    manifestEl = getElementInHead('link[rel=\"manifest\"]');\n    var manifestHref = manifestEl ? manifestEl.href : '';\n    if (!manifestHref) {\n      throw \"can't find <link rel=\\\"manifest\\\" href=\\\"..\\\" />'\";\n    }\n    var hrefFactory = buildHrefFactory([manifestHref, location]);\n    var storedResponse = store('manifest');\n    if (storedResponse) {\n      try {\n        var data = /** @type {!Object<string, *>} */JSON.parse(storedResponse);\n        process(data, hrefFactory);\n      } catch (err) {\n        console.warn('PWACompat error', err);\n      }\n      return;\n    }\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', manifestHref);\n\n    // nb. use getAttribute for older brower safety\n    xhr.withCredentials = manifestEl.getAttribute('crossorigin') === 'use-credentials';\n\n    // this is IE10+\n    xhr.onload = function () {\n      try {\n        var _data = /** @type {!Object<string, *>} */JSON.parse(xhr.responseText);\n        store('manifest', xhr.responseText);\n        process(_data, hrefFactory);\n      } catch (err) {\n        console.warn('PWACompat error', err);\n      }\n    };\n    xhr.send(null);\n  }\n\n  /**\n   * @param {!Array<string>} options\n   * @return {function(string): string}\n   */\n  function buildHrefFactory(options) {\n    var _loop = function _loop() {\n      var opt = options[i];\n      try {\n        new URL('', opt);\n        return {\n          v: function v(part) {\n            return new URL(part || '', opt).toString();\n          }\n        };\n      } catch (e) {}\n    };\n    for (var i = 0; i < options.length; ++i) {\n      var _ret = _loop();\n      if (typeof _ret === \"object\") return _ret.v;\n    }\n    return function (part) {\n      return part || '';\n    };\n  }\n\n  /**\n   * Adds an element in the <head> if it's not present already based on the passed check.\n   * @param {string} localName tag name\n   * @param {!Object<string>} attr key-value collection of attributes\n   * @param {string} check to apply to the tag\n   */\n  function push(localName, attr, check) {\n    if (getElementInHead(localName + check)) {\n      return;\n    }\n    var node = document.createElement(localName);\n    for (var k in attr) {\n      node.setAttribute(k, attr[k]);\n    }\n    document.head.appendChild(node);\n    return node;\n  }\n  function meta(name, content) {\n    if (content) {\n      if (content === true) {\n        content = 'yes';\n      }\n      push('meta', {\n        name: name,\n        content: content\n      }, \"[name=\\\"\".concat(name, \"\\\"]\"));\n    }\n  }\n\n  /**\n   * Pre-process the icon sizes and purpose into a tuple and array.\n   */\n  function normalizeIcon(icon) {\n    var parsedSizes = icon.sizes.split(/\\s+/g).map(function (size) {\n      if (size === 'any') {\n        return Infinity;\n      }\n      return parseInt(size, 10) || 0; // NaN is falsey\n    });\n\n    return {\n      src: icon.src,\n      type: icon.type,\n      sizes: icon.sizes,\n      // Get the largest size from a processed icon.\n      largestSize: Math.max.apply(null, parsedSizes),\n      purpose: icon.purpose ? icon.purpose.split(/\\s+/g) : ['any']\n    };\n  }\n\n  /**\n   * @param {!Object<string, (string|*)>} manifest\n   * @param {function(string): string} urlFactory\n   */\n  function process(manifest, urlFactory) {\n    // largest first\n    var allIcons = (manifest['icons'] || []).map(normalizeIcon).sort(function (a, b) {\n      return b.largestSize - a.largestSize;\n    });\n    var icons = allIcons.filter(function (icon) {\n      return icon.purpose.indexOf('any') > -1;\n    });\n    var maskable = allIcons.filter(function (icon) {\n      return icon.purpose.indexOf('maskable') > -1;\n    });\n    var appleTouchIcons = (maskable.length > 0 ? maskable : icons).map(function (icon) {\n      // create regular link icons as byproduct\n      var attr = {\n        'rel': 'icon',\n        'href': urlFactory(icon['src']),\n        'sizes': icon['sizes']\n      };\n      // This checks for matching \"rel\" and \"sizes\". We don't check for the same image file, as\n      // it is used literally by ourselves (and could be set by users for another icon).\n      var querySuffix = \"[sizes=\\\"\".concat(icon['sizes'], \"\\\"]\");\n      push('link', attr, '[rel=\"icon\"]' + querySuffix);\n      if (!isSafariMobile) {\n        return;\n      }\n      if (icon.largestSize < appleIconSizeMin) {\n        return;\n      }\n      attr['rel'] = 'apple-touch-icon';\n\n      // nb. we used to call `removeAttribute('sizes')` here, which crashed iOS 8\n      // ... sizes has been supported since iOS 4.2 (!)\n      return push('link', attr, '[rel=\"apple-touch-icon\"]' + querySuffix);\n    }).filter(Boolean);\n\n    // nb. only for iOS, but watch for future CSS rule `@viewport { viewport-fit: cover; }`\n    var metaViewport = getElementInHead('meta[name=\"viewport\"]');\n    var viewport = metaViewport && metaViewport.content || '';\n    var viewportFitCover = Boolean(viewport.match(/\\bviewport-fit\\s*=\\s*cover\\b/));\n    var display = manifest['display'];\n    var isCapable = capableDisplayModes.indexOf(display) !== -1;\n    meta('mobile-web-app-capable', isCapable);\n    updateThemeColorRender( /** @type {string} */manifest['theme_color'] || 'black', viewportFitCover);\n    if (isIEOrEdge) {\n      // Pinned Sites, largely from https://technet.microsoft.com/en-us/windows/dn255024(v=vs.60)\n      meta('application-name', manifest['short_name']);\n      meta('msapplication-tooltip', manifest['description']);\n      meta('msapplication-starturl', urlFactory( /** @type {string} */manifest['start_url'] || '.'));\n      meta('msapplication-navbutton-color', manifest['theme_color']);\n      var largest = icons[0];\n      if (largest) {\n        meta('msapplication-TileImage', urlFactory(largest['src']));\n      }\n      meta('msapplication-TileColor', manifest['background_color']);\n    }\n    meta('theme-color', manifest['theme_color']);\n    if (!isSafariMobile) {\n      // TODO(samthor): We don't detect QQ or UC, we just set the vars anyway.\n      var orientation = simpleOrientationFor(manifest['orientation']);\n      meta('x5-orientation', orientation); // QQ\n      meta('screen-orientation', orientation); // UC\n      if (display === 'fullscreen') {\n        meta('x5-fullscreen', 'true'); // QQ\n        meta('full-screen', 'yes'); // UC\n      } else if (isCapable) {\n        meta('x5-page-mode', 'app'); // QQ\n        meta('browsermode', 'application'); // UC\n      }\n\n      return; // the rest of this file is for Mobile Safari\n    }\n\n    var backgroundColor = /** @type {string} */manifest['background_color'] || defaultSplashColor;\n    var backgroundIsLight = shouldUseLightForeground(backgroundColor);\n\n    // Add related iTunes app from manifest.\n    var itunes = findAppleId(manifest['related_applications']);\n    itunes && meta('apple-itunes-app', \"app-id=\".concat(itunes));\n\n    // General iOS meta tags.\n    meta('apple-mobile-web-app-capable', isCapable);\n    meta('apple-mobile-web-app-title', manifest['short_name'] || manifest['name']);\n\n    /**\n     * @param {number} width\n     * @param {number} height\n     * @param {string} orientation\n     * @param {?Image} icon\n     * @return {function(): string}\n     */\n    function splashFor(width, height, orientation, icon) {\n      var ratio = window.devicePixelRatio;\n      var ctx = contextForCanvas({\n        width: width * ratio,\n        height: height * ratio\n      });\n      ctx.scale(ratio, ratio);\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.translate(width / 2, (height - splashIconPadding) / 2);\n      if (icon) {\n        // nb: on Chrome, we need the image >=48px, use the big layout >=80dp, ideal is >=128dp\n        var iconWidth = icon.width / ratio;\n        var iconHeight = icon.height / ratio;\n        if (iconHeight > idealSplashIconSize) {\n          // clamp to 128px height max\n          iconWidth /= iconHeight / idealSplashIconSize;\n          iconHeight = idealSplashIconSize;\n        }\n        if (iconWidth >= minimumSplashIconSize && iconHeight >= minimumSplashIconSize) {\n          ctx.drawImage(icon, iconWidth / -2, iconHeight / -2, iconWidth, iconHeight);\n          ctx.translate(0, iconHeight / 2 + splashIconPadding);\n        }\n      }\n      ctx.fillStyle = backgroundIsLight ? 'white' : 'black';\n      ctx.font = \"\".concat(defaultSplashTextSize, \"px \").concat(defaultFontName);\n\n      // Set the user-requested font; if it's invalid, the set will fail.\n      var s = getComputedStyle(manifestEl);\n      ctx.font = s.getPropertyValue('--pwacompat-splash-font'); // blank for old browsers\n\n      var title = manifest['name'] || manifest['short_name'] || document.title;\n      var measure = ctx.measureText(title);\n      var textHeight = measure.actualBoundingBoxAscent || defaultSplashTextSize;\n      ctx.translate(0, textHeight);\n      if (measure.width < width * 0.8) {\n        // short-circuit, just draw entire string\n        ctx.fillText(title, measure.width / -2, 0);\n      } else {\n        // longer wrap case, draw once we have >0.7 width accumulated\n        var words = title.split(/\\s+/g);\n        for (var i = 1; i <= words.length; ++i) {\n          var cand = words.slice(0, i).join(' ');\n          var measureWidth = ctx.measureText(cand).width;\n          if (i === words.length || measureWidth > width * 0.6) {\n            // render accumulated words\n            ctx.fillText(cand, measureWidth / -2, 0);\n            ctx.translate(0, textHeight * 1.2);\n            words.splice(0, i);\n            i = 0;\n          }\n        }\n      }\n      return function () {\n        var data = ctx.canvas.toDataURL();\n        if (debug) {\n          var img = document.createElement('img');\n          img.src = data;\n          document.body.append(img);\n        }\n        appendSplash(orientation, data);\n        return data;\n      };\n    }\n\n    /**\n     * @param {string} orientation\n     * @param {string} data\n     */\n    function appendSplash(orientation, data) {\n      var generatedSplash = /** @type {!HTMLLinkElement} */document.createElement('link');\n      generatedSplash.setAttribute('rel', 'apple-touch-startup-image');\n      generatedSplash.setAttribute('media', \"(orientation: \".concat(orientation, \")\"));\n      generatedSplash.setAttribute('href', data);\n      document.head.appendChild(generatedSplash);\n    }\n\n    // fetch previous (session) iOS image updates\n    var rendered = store('iOS');\n    if (!debug && rendered) {\n      try {\n        var prev = /** @type {!Object<string, string>} */JSON.parse(rendered);\n        appendSplash('portrait', prev['p']);\n        appendSplash('landscape', prev['l']);\n        appleTouchIcons.forEach(function (icon) {\n          var change = prev['i'][icon.href];\n          if (change) {\n            icon.href = change;\n          }\n        });\n        return;\n      } catch (e) {\n        // ignore, some problem with the JSON\n      }\n    }\n    var update = {\n      'i': {}\n    };\n\n    /**\n     * @param {?Image} applicationIcon\n     * @param {function(): void} done\n     */\n    function renderBothSplash(applicationIcon, done) {\n      var s = window.screen;\n      var portrait = splashFor(s.width, s.height, 'portrait', applicationIcon);\n      var landscape = splashFor(s.height, s.width, 'landscape', applicationIcon);\n\n      // this is particularly egregious setTimeout use, but the .toDataURL() is one of the\n      // \"bottlenecks\" of PWACompat, so don't elongate any single frame more than needed.\n\n      setTimeout(function () {\n        update['p'] = portrait();\n        setTimeout(function () {\n          update['l'] = landscape();\n          done();\n        }, 10);\n      }, 10);\n    }\n\n    // fetches and redraws any remaining icons in appleTouchIcons (to have proper bg)\n    function redrawRemainingIcons(done) {\n      var left = appleTouchIcons.length + 1;\n      var check = function check() {\n        if (! --left) {\n          done();\n        }\n      };\n      check();\n      appleTouchIcons.forEach(function (icon) {\n        var img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.onerror = check;\n        img.onload = function () {\n          img.onload = null;\n          icon.href = updateTransparent(img, backgroundColor, true);\n          update['i'][img.src] = icon.href;\n          check();\n        };\n        img.src = icon.href;\n      });\n    }\n\n    // write the update to sessionStorage\n    function saveUpdate() {\n      store('iOS', JSON.stringify(update));\n    }\n\n    // called repeatedly until a valid icon is found\n    function fetchIconAndBuildSplash() {\n      var icon = appleTouchIcons.shift();\n      if (!icon) {\n        renderBothSplash(null, saveUpdate); // ran out of icons, render without one\n        return;\n      }\n      var img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onerror = function () {\n        return void fetchIconAndBuildSplash();\n      }; // try again\n      img.onload = function () {\n        img.onload = null; // iOS Safari might call this many times\n        renderBothSplash(img, function () {\n          // ... if the icon used for splash changed, redraw others too\n          var redrawn = manifest['background_color'] && updateTransparent(img, backgroundColor);\n          if (redrawn) {\n            icon.href = redrawn;\n            update['i'][img.src] = redrawn;\n            redrawRemainingIcons(saveUpdate);\n          } else {\n            saveUpdate();\n          }\n        });\n      };\n      img.src = icon.href; // trigger load\n    }\n\n    fetchIconAndBuildSplash();\n  }\n  function findAppleId(related) {\n    var itunes;\n    (related || []).filter(function (app) {\n      return app['platform'] === 'itunes';\n    }).forEach(function (app) {\n      if (app['id']) {\n        itunes = app['id'];\n      } else {\n        var match = app['url'].match(/id(\\d+)/);\n        if (match) {\n          itunes = match[1];\n        }\n      }\n    });\n    return itunes;\n  }\n  function simpleOrientationFor(v) {\n    var prefix = String(v || '').substr(0, 3);\n    return {\n      'por': 'portrait',\n      'lan': 'landscape'\n    }[prefix] || '';\n  }\n\n  /**\n   * @param {string} color\n   * @param {boolean} viewportFitCover\n   */\n  function updateThemeColorRender(color, viewportFitCover) {\n    if (!(isSafariMobile || isEdgePWA)) {\n      return;\n    }\n    var themeIsLight = shouldUseLightForeground(color);\n    if (isSafariMobile) {\n      // nb. Safari 11.3+ gives a deprecation warning about this meta tag.\n      var content = viewportFitCover ? 'black-translucent' : themeIsLight ? 'black' : 'default';\n      meta('apple-mobile-web-app-status-bar-style', content);\n    } else {\n      // Edge PWA\n      var t = getEdgeTitleBar();\n      if (!t) {\n        return; // something went wrong, we had a UWP without titleBar\n      }\n      // Foreground is black if theme is light, otherwise white.\n      var v = themeIsLight ? 255 : 0;\n      t.foregroundColor = /** @type {WindowsColor} */{\n        'r': v,\n        'g': v,\n        'b': v,\n        'a': 255\n      };\n      t.backgroundColor = colorToWindowsRGBA(color);\n    }\n  }\n\n  /**\n   * @return {!ApplicationViewTitleBar|undefined}\n   */\n  function getEdgeTitleBar() {\n    try {\n      return Windows.UI.ViewManagement.ApplicationView.getForCurrentView().titleBar;\n    } catch (e) {\n      // implicit return undefined\n    }\n  }\n\n  /**\n   * The Windows titlebar APIs expect an object of {r, g, b, a}.\n   *\n   * @param {string} color\n   * @return {WindowsColor}\n   */\n  function colorToWindowsRGBA(color) {\n    var data = readColor(color);\n    return (/** @type {WindowsColor} */{\n        'r': data[0],\n        'g': data[1],\n        'b': data[2],\n        'a': data[3]\n      }\n    );\n  }\n\n  /**\n   * @param {string} color\n   * @return {!Uint8ClampedArray}\n   */\n  function readColor(color) {\n    var c = contextForCanvas();\n    c.fillStyle = color;\n    c.fillRect(0, 0, 1, 1);\n    return c.getImageData(0, 0, 1, 1).data || []; // incase this fails for some reason\n  }\n\n  /**\n   * @param {string} color\n   * @return {boolean}\n   */\n  function shouldUseLightForeground(color) {\n    var pixelData = readColor(color);\n\n    // From https://cs.chromium.org/chromium/src/chrome/android/java/src/org/chromium/chrome/browser/util/ColorUtils.java\n    var data = pixelData.map(function (v) {\n      var f = v / 255;\n      return f < 0.03928 ? f / 12.92 : Math.pow((f + 0.055) / 1.055, 2.4);\n    });\n    var lum = 0.2126 * data[0] + 0.7152 * data[1] + 0.0722 * data[2];\n    var contrast = Math.abs(1.05 / (lum + 0.05));\n    return contrast > 3;\n  }\n  function updateTransparent(image, background) {\n    var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var context = contextForCanvas(image);\n    context.drawImage(image, 0, 0);\n\n    // look for transparent pixel in top-left\n    // TODO: Chrome actually checks the four corners for some cases.\n    if (!force) {\n      var imageData = context.getImageData(0, 0, 1, 1);\n      if (imageData.data[3] === 255) {\n        return;\n      }\n    }\n    context.globalCompositeOperation = 'destination-over'; // only replace transparent areas\n    context.fillStyle = background;\n    context.fillRect(0, 0, image.width, image.height);\n    return context.canvas.toDataURL();\n  }\n  function contextForCanvas() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        width: 1,\n        height: 1\n      },\n      width = _ref.width,\n      height = _ref.height;\n    var canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas.getContext('2d');\n  }\n\n  // actually run PWACompat here\n  if (document.readyState === 'complete') {\n    setup();\n  } else {\n    window.addEventListener('load', setup);\n  }\n})();","map":{"version":3,"names":["unused","XMLHttpRequest","prototype","navigator","standalone","debug","capableDisplayModes","defaultSplashColor","defaultSplashTextSize","defaultFontName","idealSplashIconSize","minimumSplashIconSize","splashIconPadding","appleIconSizeMin","userAgent","isSafari","vendor","indexOf","isSafariMobile","isIEOrEdge","Boolean","match","isEdgePWA","Windows","manifestEl","internalStorage","sessionStorage","e","getElementInHead","selector","document","head","querySelector","store","k","v","key","undefined","setup","manifestHref","href","hrefFactory","buildHrefFactory","location","storedResponse","data","JSON","parse","process","err","console","warn","xhr","open","withCredentials","getAttribute","onload","responseText","send","options","_loop","opt","i","URL","part","toString","length","_ret","push","localName","attr","check","node","createElement","setAttribute","appendChild","meta","name","content","concat","normalizeIcon","icon","parsedSizes","sizes","split","map","size","Infinity","parseInt","src","type","largestSize","Math","max","apply","purpose","manifest","urlFactory","allIcons","sort","a","b","icons","filter","maskable","appleTouchIcons","querySuffix","metaViewport","viewport","viewportFitCover","display","isCapable","updateThemeColorRender","largest","orientation","simpleOrientationFor","backgroundColor","backgroundIsLight","shouldUseLightForeground","itunes","findAppleId","splashFor","width","height","ratio","window","devicePixelRatio","ctx","contextForCanvas","scale","fillStyle","fillRect","translate","iconWidth","iconHeight","drawImage","font","s","getComputedStyle","getPropertyValue","title","measure","measureText","textHeight","actualBoundingBoxAscent","fillText","words","cand","slice","join","measureWidth","splice","canvas","toDataURL","img","body","append","appendSplash","generatedSplash","rendered","prev","forEach","change","update","renderBothSplash","applicationIcon","done","screen","portrait","landscape","setTimeout","redrawRemainingIcons","left","Image","crossOrigin","onerror","updateTransparent","saveUpdate","stringify","fetchIconAndBuildSplash","shift","redrawn","related","app","prefix","String","substr","color","themeIsLight","t","getEdgeTitleBar","foregroundColor","colorToWindowsRGBA","UI","ViewManagement","ApplicationView","getForCurrentView","titleBar","readColor","c","getImageData","pixelData","f","pow","lum","contrast","abs","image","background","force","arguments","context","imageData","globalCompositeOperation","_ref","getContext","readyState","addEventListener"],"sources":["D:/project/excalidraw-cn/node_modules/pwacompat/src/pwacompat.js"],"sourcesContent":["/*\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n'use strict';\n\n// WARNING\n// Don't use this file directly in production! Please include `pwacompat.min.js`!\n// WARNING\n/**\n * @suppress {uselessCode}\n */\nfunction unused() {\n  // compiled out, but crashes IE11 early rather than within the code\n  `Please don't use this file directly: include pwacompat.min.js instead!`;\n}\n\n(function() {\n  // basic feature detection: from IE10+\n  // also fallout on 'navigator.standalone', we _are_ an iOS PWA\n  if (!('onload' in XMLHttpRequest.prototype) || navigator.standalone) {\n    return;\n  }\n\n  const debug = false;\n\n  const capableDisplayModes = ['standalone', 'fullscreen', 'minimal-ui'];\n  const defaultSplashColor = '#f8f9fa';\n  const defaultSplashTextSize = 24;\n  const defaultFontName = 'HelveticaNeue-CondensedBold';\n  const idealSplashIconSize = 128;\n  const minimumSplashIconSize = 48;\n  const splashIconPadding = 20;\n  const appleIconSizeMin = 120;\n\n  const userAgent = navigator.userAgent || '';\n  const isSafari = (navigator.vendor && navigator.vendor.indexOf('Apple') !== -1);\n  const isSafariMobile = isSafari && (userAgent.indexOf('Mobile/') !== -1 || 'standalone' in navigator) || debug;\n  const isIEOrEdge = Boolean(userAgent.match(/(MSIE |Edge\\/|Trident\\/)/));\n  const isEdgePWA = (typeof Windows !== 'undefined');\n\n  let manifestEl;  // we need this later, not just for JSON\n  let internalStorage;\n  try {\n    internalStorage = sessionStorage;\n  } catch (e) {}\n  internalStorage = internalStorage || {};\n\n  /**\n   * Retrieves element in head if available, otherwise null\n   * @param {string} selector CSS selector\n   * @return {?Element}\n   */\n  function getElementInHead(selector) {\n    // It's possible to pass \"bad\" attr or values here (originally from the manifest); just\n    // return null if there's something wrong.\n    try {\n      return document.head.querySelector(selector);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @param {string} k\n   * @param {string=} v\n   * @return {string|undefined}\n   */\n  function store(k, v) {\n    const key = '__pwacompat_' + k;\n    if (v !== undefined) {\n      internalStorage[key] = v;\n    }\n    return internalStorage[key];\n  }\n\n  function setup() {\n    manifestEl = getElementInHead('link[rel=\"manifest\"]');\n    const manifestHref = manifestEl ? manifestEl.href : '';\n    if (!manifestHref) {\n      throw `can't find <link rel=\"manifest\" href=\"..\" />'`;\n    }\n\n    const hrefFactory = buildHrefFactory([manifestHref, location]);\n    const storedResponse = store('manifest');\n    if (storedResponse) {\n      try {\n        const data = /** @type {!Object<string, *>} */ (JSON.parse(storedResponse));\n        process(data, hrefFactory);\n      } catch (err) {\n        console.warn('PWACompat error', err);\n      }\n      return;\n    }\n\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', manifestHref);\n\n    // nb. use getAttribute for older brower safety\n    xhr.withCredentials = (manifestEl.getAttribute('crossorigin') === 'use-credentials');\n\n    // this is IE10+\n    xhr.onload = () => {\n      try {\n        const data = /** @type {!Object<string, *>} */ (JSON.parse(xhr.responseText));\n        store('manifest', xhr.responseText);\n        process(data, hrefFactory);\n      } catch (err) {\n        console.warn('PWACompat error', err);\n      }\n    };\n    xhr.send(null);\n  }\n\n  /**\n   * @param {!Array<string>} options\n   * @return {function(string): string}\n   */\n  function buildHrefFactory(options) {\n    for (let i = 0; i < options.length; ++i) {\n      const opt = options[i];\n      try {\n        new URL('', opt);\n        return (part) => (new URL(part || '', opt)).toString();\n      } catch (e) {}\n    }\n    return (part) => part || '';\n  }\n\n  /**\n   * Adds an element in the <head> if it's not present already based on the passed check.\n   * @param {string} localName tag name\n   * @param {!Object<string>} attr key-value collection of attributes\n   * @param {string} check to apply to the tag\n   */\n  function push(localName, attr, check) {\n    if (getElementInHead(localName + check)) {\n      return;\n    }\n    const node = document.createElement(localName);\n    for (const k in attr) {\n      node.setAttribute(k, attr[k]);\n    }\n    document.head.appendChild(node);\n    return node;\n  }\n\n  function meta(name, content) {\n    if (content) {\n      if (content === true) {\n        content = 'yes';\n      }\n      push('meta', {name, content}, `[name=\"${name}\"]`);\n    }\n  }\n\n  /**\n   * Pre-process the icon sizes and purpose into a tuple and array.\n   */\n  function normalizeIcon(icon) {\n    const parsedSizes = icon.sizes.split(/\\s+/g).map((size) => {\n      if (size === 'any') {\n        return Infinity;\n      }\n      return parseInt(size, 10) || 0; // NaN is falsey\n    });\n\n    return {\n      src: icon.src,\n      type: icon.type,\n      sizes: icon.sizes,\n      // Get the largest size from a processed icon.\n      largestSize: Math.max.apply(null, parsedSizes),\n      purpose: icon.purpose ? icon.purpose.split(/\\s+/g) : ['any'],\n    };\n  }\n\n  /**\n   * @param {!Object<string, (string|*)>} manifest\n   * @param {function(string): string} urlFactory\n   */\n  function process(manifest, urlFactory) {\n    // largest first\n    const allIcons = (manifest['icons'] || [])\n      .map(normalizeIcon)\n      .sort((a, b) => b.largestSize - a.largestSize);\n\n    const icons = allIcons.filter((icon) => icon.purpose.indexOf('any') > -1)\n    const maskable = allIcons.filter((icon) => icon.purpose.indexOf('maskable') > -1);\n\n    const appleTouchIcons = (maskable.length > 0 ? maskable : icons).map((icon) => {\n      // create regular link icons as byproduct\n      const attr = {'rel': 'icon', 'href': urlFactory(icon['src']), 'sizes': icon['sizes']};\n      // This checks for matching \"rel\" and \"sizes\". We don't check for the same image file, as\n      // it is used literally by ourselves (and could be set by users for another icon).\n      const querySuffix = `[sizes=\"${icon['sizes']}\"]`;\n      push('link', attr, '[rel=\"icon\"]' + querySuffix);\n      if (!isSafariMobile) {\n        return;\n      }\n      if (icon.largestSize < appleIconSizeMin) {\n        return;\n      }\n      attr['rel'] = 'apple-touch-icon';\n\n      // nb. we used to call `removeAttribute('sizes')` here, which crashed iOS 8\n      // ... sizes has been supported since iOS 4.2 (!)\n      return push('link', attr, '[rel=\"apple-touch-icon\"]' + querySuffix);\n    }).filter(Boolean);\n\n    // nb. only for iOS, but watch for future CSS rule `@viewport { viewport-fit: cover; }`\n    const metaViewport = getElementInHead('meta[name=\"viewport\"]');\n    const viewport = metaViewport && metaViewport.content || '';\n    const viewportFitCover = Boolean(viewport.match(/\\bviewport-fit\\s*=\\s*cover\\b/));\n\n    const display = manifest['display'];\n    const isCapable = capableDisplayModes.indexOf(display) !== -1;\n    meta('mobile-web-app-capable', isCapable);\n    updateThemeColorRender(/** @type {string} */ (manifest['theme_color']) || 'black', viewportFitCover);\n\n    if (isIEOrEdge) {\n      // Pinned Sites, largely from https://technet.microsoft.com/en-us/windows/dn255024(v=vs.60)\n      meta('application-name', manifest['short_name']);\n      meta('msapplication-tooltip', manifest['description']);\n      meta('msapplication-starturl', urlFactory(/** @type {string} */ (manifest['start_url']) || '.'));\n      meta('msapplication-navbutton-color', manifest['theme_color']);\n\n      const largest = icons[0];\n      if (largest) {\n        meta('msapplication-TileImage', urlFactory(largest['src']));\n      }\n      meta('msapplication-TileColor', manifest['background_color']);\n    }\n\n    meta('theme-color', manifest['theme_color']);\n\n    if (!isSafariMobile) {\n      // TODO(samthor): We don't detect QQ or UC, we just set the vars anyway.\n      const orientation = simpleOrientationFor(manifest['orientation']);\n      meta('x5-orientation', orientation);      // QQ\n      meta('screen-orientation', orientation);  // UC\n      if (display === 'fullscreen') {\n        meta('x5-fullscreen', 'true');  // QQ\n        meta('full-screen', 'yes');     // UC\n      } else if (isCapable) {\n        meta('x5-page-mode', 'app');         // QQ\n        meta('browsermode', 'application');  // UC\n      }\n\n      return;  // the rest of this file is for Mobile Safari\n    }\n\n    const backgroundColor =\n        /** @type {string} */ (manifest['background_color']) || defaultSplashColor;\n    const backgroundIsLight = shouldUseLightForeground(backgroundColor);\n\n    // Add related iTunes app from manifest.\n    const itunes = findAppleId(manifest['related_applications']);\n    itunes && meta('apple-itunes-app', `app-id=${itunes}`);\n\n    // General iOS meta tags.\n    meta('apple-mobile-web-app-capable', isCapable);\n    meta('apple-mobile-web-app-title', manifest['short_name'] || manifest['name']);\n\n    /**\n     * @param {number} width\n     * @param {number} height\n     * @param {string} orientation\n     * @param {?Image} icon\n     * @return {function(): string}\n     */\n    function splashFor(width, height, orientation, icon) {\n      const ratio = window.devicePixelRatio;\n      const ctx = contextForCanvas({width: width * ratio, height: height * ratio});\n\n      ctx.scale(ratio, ratio);\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.translate(width / 2, (height - splashIconPadding) / 2);\n\n      if (icon) {\n        // nb: on Chrome, we need the image >=48px, use the big layout >=80dp, ideal is >=128dp\n        let iconWidth = (icon.width / ratio);\n        let iconHeight = (icon.height / ratio);\n        if (iconHeight > idealSplashIconSize) {\n          // clamp to 128px height max\n          iconWidth /= (iconHeight / idealSplashIconSize);\n          iconHeight = idealSplashIconSize;\n        }\n\n        if (iconWidth >= minimumSplashIconSize && iconHeight >= minimumSplashIconSize) {\n          ctx.drawImage(icon, iconWidth / -2, iconHeight / -2, iconWidth, iconHeight);\n          ctx.translate(0, iconHeight / 2 + splashIconPadding);\n        }\n      }\n\n      ctx.fillStyle = backgroundIsLight ? 'white' : 'black';\n      ctx.font = `${defaultSplashTextSize}px ${defaultFontName}`;\n\n      // Set the user-requested font; if it's invalid, the set will fail.\n      const s = getComputedStyle(manifestEl);\n      ctx.font = s.getPropertyValue('--pwacompat-splash-font'); // blank for old browsers\n\n      const title = manifest['name'] || manifest['short_name'] || document.title;\n      const measure = ctx.measureText(title);\n      const textHeight = (measure.actualBoundingBoxAscent || defaultSplashTextSize);\n      ctx.translate(0, textHeight);\n\n      if (measure.width < width * 0.8) {\n        // short-circuit, just draw entire string\n        ctx.fillText(title, measure.width / -2, 0);\n      } else {\n        // longer wrap case, draw once we have >0.7 width accumulated\n        const words = title.split(/\\s+/g);\n        for (let i = 1; i <= words.length; ++i) {\n          const cand = words.slice(0, i).join(' ');\n          const measureWidth = ctx.measureText(cand).width;\n          if (i === words.length || measureWidth > width * 0.6) {\n            // render accumulated words\n            ctx.fillText(cand, measureWidth / -2, 0);\n            ctx.translate(0, textHeight * 1.2);\n            words.splice(0, i);\n            i = 0;\n          }\n        }\n      }\n\n      return () => {\n        const data = ctx.canvas.toDataURL();\n        if (debug) {\n          const img = document.createElement('img');\n          img.src = data;\n          document.body.append(img);\n        }\n        appendSplash(orientation, data);\n        return data;\n      };\n    }\n\n    /**\n     * @param {string} orientation\n     * @param {string} data\n     */\n    function appendSplash(orientation, data) {\n      const generatedSplash = /** @type {!HTMLLinkElement} */ (document.createElement('link'));\n      generatedSplash.setAttribute('rel', 'apple-touch-startup-image');\n      generatedSplash.setAttribute('media', `(orientation: ${orientation})`);\n      generatedSplash.setAttribute('href', data);\n      document.head.appendChild(generatedSplash);\n    }\n\n    // fetch previous (session) iOS image updates\n    const rendered = store('iOS');\n    if (!debug && rendered) {\n      try {\n        const prev = /** @type {!Object<string, string>} */ (JSON.parse(rendered));\n        appendSplash('portrait', prev['p']);\n        appendSplash('landscape', prev['l']);\n        appleTouchIcons.forEach((icon) => {\n          const change = prev['i'][icon.href];\n          if (change) {\n            icon.href = change;\n          }\n        });\n        return;\n      } catch (e) {\n        // ignore, some problem with the JSON\n      }\n    }\n    const update = {'i': {}};\n\n    /**\n     * @param {?Image} applicationIcon\n     * @param {function(): void} done\n     */\n    function renderBothSplash(applicationIcon, done) {\n      const s = window.screen;\n      const portrait = splashFor(s.width, s.height, 'portrait', applicationIcon);\n      const landscape = splashFor(s.height, s.width, 'landscape', applicationIcon);\n\n      // this is particularly egregious setTimeout use, but the .toDataURL() is one of the\n      // \"bottlenecks\" of PWACompat, so don't elongate any single frame more than needed.\n\n      setTimeout(() => {\n        update['p'] = portrait();\n        setTimeout(() => {\n          update['l'] = landscape();\n          done();\n        }, 10);\n      }, 10);\n    }\n\n    // fetches and redraws any remaining icons in appleTouchIcons (to have proper bg)\n    function redrawRemainingIcons(done) {\n      let left = appleTouchIcons.length + 1;\n      const check = () => {\n        if (!--left) {\n          done();\n        }\n      };\n      check();\n      appleTouchIcons.forEach((icon) => {\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.onerror = check;\n        img.onload = () => {\n          img.onload = null;\n          icon.href = updateTransparent(img, backgroundColor, true);\n          update['i'][img.src] = icon.href;\n          check();\n        };\n        img.src = icon.href;\n      });\n    }\n\n    // write the update to sessionStorage\n    function saveUpdate() {\n      store('iOS', JSON.stringify(update));\n    }\n\n    // called repeatedly until a valid icon is found\n    function fetchIconAndBuildSplash() {\n      const icon = appleTouchIcons.shift();\n      if (!icon) {\n        renderBothSplash(null, saveUpdate);  // ran out of icons, render without one\n        return;\n      }\n\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onerror = () => void fetchIconAndBuildSplash();  // try again\n      img.onload = () => {\n        img.onload = null;  // iOS Safari might call this many times\n        renderBothSplash(img, () => {\n          // ... if the icon used for splash changed, redraw others too\n          const redrawn = manifest['background_color'] && updateTransparent(img, backgroundColor);\n          if (redrawn) {\n            icon.href = redrawn;\n            update['i'][img.src] = redrawn;\n            redrawRemainingIcons(saveUpdate);\n          } else {\n            saveUpdate();\n          }\n        });\n      };\n\n      img.src = icon.href;  // trigger load\n    }\n    fetchIconAndBuildSplash();\n  }\n\n  function findAppleId(related) {\n    let itunes;\n    (related || [])\n        .filter((app) => app['platform'] === 'itunes')\n        .forEach((app) => {\n          if (app['id']) {\n            itunes = app['id'];\n          } else {\n            const match = app['url'].match(/id(\\d+)/);\n            if (match) {\n              itunes = match[1];\n            }\n          }\n        });\n    return itunes;\n  }\n\n  function simpleOrientationFor(v) {\n    const prefix = String(v || '').substr(0, 3);\n    return {'por': 'portrait', 'lan': 'landscape'}[prefix] || '';\n  }\n\n  /**\n   * @param {string} color\n   * @param {boolean} viewportFitCover\n   */\n  function updateThemeColorRender(color, viewportFitCover) {\n    if (!(isSafariMobile || isEdgePWA)) {\n      return;\n    }\n\n    const themeIsLight = shouldUseLightForeground(color);\n    if (isSafariMobile) {\n      // nb. Safari 11.3+ gives a deprecation warning about this meta tag.\n      const content = viewportFitCover ? 'black-translucent' : (themeIsLight ? 'black' : 'default');\n      meta('apple-mobile-web-app-status-bar-style', content);\n    } else {\n      // Edge PWA\n      const t = getEdgeTitleBar();\n      if (!t) {\n        return;  // something went wrong, we had a UWP without titleBar\n      }\n      // Foreground is black if theme is light, otherwise white.\n      const v = themeIsLight ? 255 : 0;\n      t.foregroundColor = /** @type {WindowsColor} */ ({'r': v, 'g': v, 'b': v, 'a': 255});\n      t.backgroundColor = colorToWindowsRGBA(color);\n    }\n  }\n\n  /**\n   * @return {!ApplicationViewTitleBar|undefined}\n   */\n  function getEdgeTitleBar() {\n    try {\n      return Windows.UI.ViewManagement.ApplicationView.getForCurrentView().titleBar;\n    } catch (e) {\n      // implicit return undefined\n    }\n  }\n\n  /**\n   * The Windows titlebar APIs expect an object of {r, g, b, a}.\n   *\n   * @param {string} color\n   * @return {WindowsColor}\n   */\n  function colorToWindowsRGBA(color) {\n    const data = readColor(color);\n    return /** @type {WindowsColor} */ ({\n      'r': data[0],\n      'g': data[1],\n      'b': data[2],\n      'a': data[3],\n    });\n  }\n\n  /**\n   * @param {string} color\n   * @return {!Uint8ClampedArray}\n   */\n  function readColor(color) {\n    const c = contextForCanvas();\n    c.fillStyle = color;\n    c.fillRect(0, 0, 1, 1);\n    return c.getImageData(0, 0, 1, 1).data || [];  // incase this fails for some reason\n  }\n\n  /**\n   * @param {string} color\n   * @return {boolean}\n   */\n  function shouldUseLightForeground(color) {\n    const pixelData = readColor(color);\n\n    // From https://cs.chromium.org/chromium/src/chrome/android/java/src/org/chromium/chrome/browser/util/ColorUtils.java\n    const data = pixelData.map((v) => {\n      const f = v / 255;\n      return (f < 0.03928) ? f / 12.92 : Math.pow((f + 0.055) / 1.055, 2.4);\n    });\n    const lum = 0.2126 * data[0] + 0.7152 * data[1] + 0.0722 * data[2];\n    const contrast = Math.abs((1.05) / (lum + 0.05));\n    return contrast > 3;\n  }\n\n  function updateTransparent(image, background, force=false) {\n    const context = contextForCanvas(image);\n    context.drawImage(image, 0, 0);\n\n    // look for transparent pixel in top-left\n    // TODO: Chrome actually checks the four corners for some cases.\n    if (!force) {\n      const imageData = context.getImageData(0, 0, 1, 1);\n      if (imageData.data[3] === 255) {\n        return;\n      }\n    }\n\n    context.globalCompositeOperation = 'destination-over';  // only replace transparent areas\n    context.fillStyle = background;\n    context.fillRect(0, 0, image.width, image.height);\n    return context.canvas.toDataURL();\n  }\n\n  function contextForCanvas({width, height} = {width: 1, height: 1}) {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas.getContext('2d');\n  }\n\n  // actually run PWACompat here\n  if (document.readyState === 'complete') {\n    setup();\n  } else {\n    window.addEventListener('load', setup);\n  }\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}