{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\EyeDropper.tsx\";\nimport { atom } from \"jotai\";\nimport { useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { COLOR_PALETTE, rgbToHex } from \"../colors\";\nimport { EVENT } from \"../constants\";\nimport { useUIAppState } from \"../context/ui-appState\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { useCreatePortalContainer } from \"../hooks/useCreatePortalContainer\";\nimport { useOutsideClick } from \"../hooks/useOutsideClick\";\nimport { KEYS } from \"../keys\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport { getSelectedElements } from \"../scene\";\nimport Scene from \"../scene/Scene\";\nimport { useApp, useExcalidrawContainer, useExcalidrawElements } from \"./App\";\nimport \"./EyeDropper.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const activeEyeDropperAtom = atom(null);\nexport const EyeDropper = _ref => {\n  let {\n    onCancel,\n    onSelect,\n    swapPreviewOnAlt,\n    previewType = \"backgroundColor\"\n  } = _ref;\n  const eyeDropperContainer = useCreatePortalContainer({\n    className: \"excalidraw-eye-dropper-backdrop\",\n    parentSelector: \".excalidraw-eye-dropper-container\"\n  });\n  const appState = useUIAppState();\n  const elements = useExcalidrawElements();\n  const app = useApp();\n  const selectedElements = getSelectedElements(elements, appState);\n  const metaStuffRef = useRef({\n    selectedElements,\n    app\n  });\n  metaStuffRef.current.selectedElements = selectedElements;\n  metaStuffRef.current.app = app;\n  const {\n    container: excalidrawContainer\n  } = useExcalidrawContainer();\n  useEffect(() => {\n    const colorPreviewDiv = ref.current;\n    if (!colorPreviewDiv || !app.canvas || !eyeDropperContainer) {\n      return;\n    }\n    let currentColor = COLOR_PALETTE.black;\n    let isHoldingPointerDown = false;\n    const ctx = app.canvas.getContext(\"2d\");\n    const mouseMoveListener = _ref2 => {\n      let {\n        clientX,\n        clientY,\n        altKey\n      } = _ref2;\n      // FIXME swap offset when the preview gets outside viewport\n      colorPreviewDiv.style.top = `${clientY + 20}px`;\n      colorPreviewDiv.style.left = `${clientX + 20}px`;\n      const pixel = ctx.getImageData(clientX * window.devicePixelRatio - appState.offsetLeft, clientY * window.devicePixelRatio - appState.offsetTop, 1, 1).data;\n      currentColor = rgbToHex(pixel[0], pixel[1], pixel[2]);\n      if (isHoldingPointerDown) {\n        var _Scene$getScene;\n        for (const element of metaStuffRef.current.selectedElements) {\n          mutateElement(element, {\n            [altKey && swapPreviewOnAlt ? previewType === \"strokeColor\" ? \"backgroundColor\" : \"strokeColor\" : previewType]: currentColor\n          }, false);\n          invalidateShapeForElement(element);\n        }\n        (_Scene$getScene = Scene.getScene(metaStuffRef.current.selectedElements[0])) === null || _Scene$getScene === void 0 ? void 0 : _Scene$getScene.informMutation();\n      }\n      colorPreviewDiv.style.background = currentColor;\n    };\n    const pointerDownListener = event => {\n      isHoldingPointerDown = true;\n      // NOTE we can't event.preventDefault() as that would stop\n      // pointermove events\n      event.stopImmediatePropagation();\n    };\n    const pointerUpListener = event => {\n      isHoldingPointerDown = false;\n\n      // since we're not preventing default on pointerdown, the focus would\n      // goes back to `body` so we want to refocus the editor container instead\n      excalidrawContainer === null || excalidrawContainer === void 0 ? void 0 : excalidrawContainer.focus();\n      event.stopImmediatePropagation();\n      event.preventDefault();\n      onSelect(currentColor, event);\n    };\n    const keyDownListener = event => {\n      if (event.key === KEYS.ESCAPE) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        onCancel();\n      }\n    };\n\n    // -------------------------------------------------------------------------\n\n    eyeDropperContainer.tabIndex = -1;\n    // focus container so we can listen on keydown events\n    eyeDropperContainer.focus();\n\n    // init color preview else it would show only after the first mouse move\n    mouseMoveListener({\n      clientX: metaStuffRef.current.app.lastViewportPosition.x,\n      clientY: metaStuffRef.current.app.lastViewportPosition.y,\n      altKey: false\n    });\n    eyeDropperContainer.addEventListener(EVENT.KEYDOWN, keyDownListener);\n    eyeDropperContainer.addEventListener(EVENT.POINTER_DOWN, pointerDownListener);\n    eyeDropperContainer.addEventListener(EVENT.POINTER_UP, pointerUpListener);\n    window.addEventListener(\"pointermove\", mouseMoveListener, {\n      passive: true\n    });\n    window.addEventListener(EVENT.BLUR, onCancel);\n    return () => {\n      isHoldingPointerDown = false;\n      eyeDropperContainer.removeEventListener(EVENT.KEYDOWN, keyDownListener);\n      eyeDropperContainer.removeEventListener(EVENT.POINTER_DOWN, pointerDownListener);\n      eyeDropperContainer.removeEventListener(EVENT.POINTER_UP, pointerUpListener);\n      window.removeEventListener(\"pointermove\", mouseMoveListener);\n      window.removeEventListener(EVENT.BLUR, onCancel);\n    };\n  }, [app.canvas, eyeDropperContainer, onCancel, onSelect, swapPreviewOnAlt, previewType, excalidrawContainer, appState.offsetLeft, appState.offsetTop]);\n  const ref = useRef(null);\n  useOutsideClick(ref, () => {\n    onCancel();\n  }, event => {\n    if (event.target.closest(\".excalidraw-eye-dropper-trigger, .excalidraw-eye-dropper-backdrop\")) {\n      return true;\n    }\n    // consider all other clicks as outside\n    return false;\n  });\n  if (!eyeDropperContainer) {\n    return null;\n  }\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"excalidraw-eye-dropper-preview\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this), eyeDropperContainer);\n};","map":{"version":3,"names":["atom","useEffect","useRef","createPortal","COLOR_PALETTE","rgbToHex","EVENT","useUIAppState","mutateElement","useCreatePortalContainer","useOutsideClick","KEYS","invalidateShapeForElement","getSelectedElements","Scene","useApp","useExcalidrawContainer","useExcalidrawElements","jsxDEV","_jsxDEV","activeEyeDropperAtom","EyeDropper","_ref","onCancel","onSelect","swapPreviewOnAlt","previewType","eyeDropperContainer","className","parentSelector","appState","elements","app","selectedElements","metaStuffRef","current","container","excalidrawContainer","colorPreviewDiv","ref","canvas","currentColor","black","isHoldingPointerDown","ctx","getContext","mouseMoveListener","_ref2","clientX","clientY","altKey","style","top","left","pixel","getImageData","window","devicePixelRatio","offsetLeft","offsetTop","data","_Scene$getScene","element","getScene","informMutation","background","pointerDownListener","event","stopImmediatePropagation","pointerUpListener","focus","preventDefault","keyDownListener","key","ESCAPE","tabIndex","lastViewportPosition","x","y","addEventListener","KEYDOWN","POINTER_DOWN","POINTER_UP","passive","BLUR","removeEventListener","target","closest","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/project/excalidraw-cn/src/components/EyeDropper.tsx"],"sourcesContent":["import { atom } from \"jotai\";\nimport { useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { COLOR_PALETTE, rgbToHex } from \"../colors\";\nimport { EVENT } from \"../constants\";\nimport { useUIAppState } from \"../context/ui-appState\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { useCreatePortalContainer } from \"../hooks/useCreatePortalContainer\";\nimport { useOutsideClick } from \"../hooks/useOutsideClick\";\nimport { KEYS } from \"../keys\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport { getSelectedElements } from \"../scene\";\nimport Scene from \"../scene/Scene\";\nimport { useApp, useExcalidrawContainer, useExcalidrawElements } from \"./App\";\n\nimport \"./EyeDropper.scss\";\n\ntype EyeDropperProperties = {\n  keepOpenOnAlt: boolean;\n  swapPreviewOnAlt?: boolean;\n  onSelect?: (color: string, event: PointerEvent) => void;\n  previewType?: \"strokeColor\" | \"backgroundColor\";\n};\n\nexport const activeEyeDropperAtom = atom<null | EyeDropperProperties>(null);\n\nexport const EyeDropper: React.FC<{\n  onCancel: () => void;\n  onSelect: Required<EyeDropperProperties>[\"onSelect\"];\n  swapPreviewOnAlt?: EyeDropperProperties[\"swapPreviewOnAlt\"];\n  previewType?: EyeDropperProperties[\"previewType\"];\n}> = ({\n  onCancel,\n  onSelect,\n  swapPreviewOnAlt,\n  previewType = \"backgroundColor\",\n}) => {\n  const eyeDropperContainer = useCreatePortalContainer({\n    className: \"excalidraw-eye-dropper-backdrop\",\n    parentSelector: \".excalidraw-eye-dropper-container\",\n  });\n  const appState = useUIAppState();\n  const elements = useExcalidrawElements();\n  const app = useApp();\n\n  const selectedElements = getSelectedElements(elements, appState);\n\n  const metaStuffRef = useRef({ selectedElements, app });\n  metaStuffRef.current.selectedElements = selectedElements;\n  metaStuffRef.current.app = app;\n\n  const { container: excalidrawContainer } = useExcalidrawContainer();\n\n  useEffect(() => {\n    const colorPreviewDiv = ref.current;\n\n    if (!colorPreviewDiv || !app.canvas || !eyeDropperContainer) {\n      return;\n    }\n\n    let currentColor = COLOR_PALETTE.black;\n    let isHoldingPointerDown = false;\n\n    const ctx = app.canvas.getContext(\"2d\")!;\n\n    const mouseMoveListener = ({\n      clientX,\n      clientY,\n      altKey,\n    }: {\n      clientX: number;\n      clientY: number;\n      altKey: boolean;\n    }) => {\n      // FIXME swap offset when the preview gets outside viewport\n      colorPreviewDiv.style.top = `${clientY + 20}px`;\n      colorPreviewDiv.style.left = `${clientX + 20}px`;\n\n      const pixel = ctx.getImageData(\n        clientX * window.devicePixelRatio - appState.offsetLeft,\n        clientY * window.devicePixelRatio - appState.offsetTop,\n        1,\n        1,\n      ).data;\n\n      currentColor = rgbToHex(pixel[0], pixel[1], pixel[2]);\n\n      if (isHoldingPointerDown) {\n        for (const element of metaStuffRef.current.selectedElements) {\n          mutateElement(\n            element,\n            {\n              [altKey && swapPreviewOnAlt\n                ? previewType === \"strokeColor\"\n                  ? \"backgroundColor\"\n                  : \"strokeColor\"\n                : previewType]: currentColor,\n            },\n            false,\n          );\n          invalidateShapeForElement(element);\n        }\n        Scene.getScene(\n          metaStuffRef.current.selectedElements[0],\n        )?.informMutation();\n      }\n\n      colorPreviewDiv.style.background = currentColor;\n    };\n\n    const pointerDownListener = (event: PointerEvent) => {\n      isHoldingPointerDown = true;\n      // NOTE we can't event.preventDefault() as that would stop\n      // pointermove events\n      event.stopImmediatePropagation();\n    };\n\n    const pointerUpListener = (event: PointerEvent) => {\n      isHoldingPointerDown = false;\n\n      // since we're not preventing default on pointerdown, the focus would\n      // goes back to `body` so we want to refocus the editor container instead\n      excalidrawContainer?.focus();\n\n      event.stopImmediatePropagation();\n      event.preventDefault();\n\n      onSelect(currentColor, event);\n    };\n\n    const keyDownListener = (event: KeyboardEvent) => {\n      if (event.key === KEYS.ESCAPE) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        onCancel();\n      }\n    };\n\n    // -------------------------------------------------------------------------\n\n    eyeDropperContainer.tabIndex = -1;\n    // focus container so we can listen on keydown events\n    eyeDropperContainer.focus();\n\n    // init color preview else it would show only after the first mouse move\n    mouseMoveListener({\n      clientX: metaStuffRef.current.app.lastViewportPosition.x,\n      clientY: metaStuffRef.current.app.lastViewportPosition.y,\n      altKey: false,\n    });\n\n    eyeDropperContainer.addEventListener(EVENT.KEYDOWN, keyDownListener);\n    eyeDropperContainer.addEventListener(\n      EVENT.POINTER_DOWN,\n      pointerDownListener,\n    );\n    eyeDropperContainer.addEventListener(EVENT.POINTER_UP, pointerUpListener);\n    window.addEventListener(\"pointermove\", mouseMoveListener, {\n      passive: true,\n    });\n    window.addEventListener(EVENT.BLUR, onCancel);\n\n    return () => {\n      isHoldingPointerDown = false;\n      eyeDropperContainer.removeEventListener(EVENT.KEYDOWN, keyDownListener);\n      eyeDropperContainer.removeEventListener(\n        EVENT.POINTER_DOWN,\n        pointerDownListener,\n      );\n      eyeDropperContainer.removeEventListener(\n        EVENT.POINTER_UP,\n        pointerUpListener,\n      );\n      window.removeEventListener(\"pointermove\", mouseMoveListener);\n      window.removeEventListener(EVENT.BLUR, onCancel);\n    };\n  }, [\n    app.canvas,\n    eyeDropperContainer,\n    onCancel,\n    onSelect,\n    swapPreviewOnAlt,\n    previewType,\n    excalidrawContainer,\n    appState.offsetLeft,\n    appState.offsetTop,\n  ]);\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOutsideClick(\n    ref,\n    () => {\n      onCancel();\n    },\n    (event) => {\n      if (\n        event.target.closest(\n          \".excalidraw-eye-dropper-trigger, .excalidraw-eye-dropper-backdrop\",\n        )\n      ) {\n        return true;\n      }\n      // consider all other clicks as outside\n      return false;\n    },\n  );\n\n  if (!eyeDropperContainer) {\n    return null;\n  }\n\n  return createPortal(\n    <div ref={ref} className=\"excalidraw-eye-dropper-preview\" />,\n    eyeDropperContainer,\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}