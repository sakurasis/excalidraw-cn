{"ast":null,"code":"import _regeneratorRuntime from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import fallbackLangData from\"./locales/en.json\";import percentages from\"./locales/percentages.json\";import{ENV}from\"./constants\";import{jotaiScope,jotaiStore}from\"./jotai\";import{atom,useAtomValue}from\"jotai\";var COMPLETION_THRESHOLD=85;export var defaultLang={code:\"en\",label:\"English\"};export var languages=[defaultLang].concat(_toConsumableArray([{code:\"ar-SA\",label:\"العربية\",rtl:true},{code:\"bg-BG\",label:\"Български\"},{code:\"ca-ES\",label:\"Català\"},{code:\"cs-CZ\",label:\"Česky\"},{code:\"de-DE\",label:\"Deutsch\"},{code:\"el-GR\",label:\"Ελληνικά\"},{code:\"es-ES\",label:\"Español\"},{code:\"eu-ES\",label:\"Euskara\"},{code:\"fa-IR\",label:\"فارسی\",rtl:true},{code:\"fi-FI\",label:\"Suomi\"},{code:\"fr-FR\",label:\"Français\"},{code:\"gl-ES\",label:\"Galego\"},{code:\"he-IL\",label:\"עברית\",rtl:true},{code:\"hi-IN\",label:\"हिन्दी\"},{code:\"hu-HU\",label:\"Magyar\"},{code:\"id-ID\",label:\"Bahasa Indonesia\"},{code:\"it-IT\",label:\"Italiano\"},{code:\"ja-JP\",label:\"日本語\"},{code:\"kab-KAB\",label:\"Taqbaylit\"},{code:\"kk-KZ\",label:\"Қазақ тілі\"},{code:\"ko-KR\",label:\"한국어\"},{code:\"ku-TR\",label:\"Kurdî\"},{code:\"lt-LT\",label:\"Lietuvių\"},{code:\"lv-LV\",label:\"Latviešu\"},{code:\"my-MM\",label:\"Burmese\"},{code:\"nb-NO\",label:\"Norsk bokmål\"},{code:\"nl-NL\",label:\"Nederlands\"},{code:\"nn-NO\",label:\"Norsk nynorsk\"},{code:\"oc-FR\",label:\"Occitan\"},{code:\"pa-IN\",label:\"ਪੰਜਾਬੀ\"},{code:\"pl-PL\",label:\"Polski\"},{code:\"pt-BR\",label:\"Português Brasileiro\"},{code:\"pt-PT\",label:\"Português\"},{code:\"ro-RO\",label:\"Română\"},{code:\"ru-RU\",label:\"Русский\"},{code:\"sk-SK\",label:\"Slovenčina\"},{code:\"sv-SE\",label:\"Svenska\"},{code:\"sl-SI\",label:\"Slovenščina\"},{code:\"tr-TR\",label:\"Türkçe\"},{code:\"uk-UA\",label:\"Українська\"},{code:\"zh-CN\",label:\"简体中文\"},{code:\"zh-TW\",label:\"繁體中文\"},{code:\"vi-VN\",label:\"Tiếng Việt\"},{code:\"mr-IN\",label:\"मराठी\"}].filter(function(lang){return percentages[lang.code]>=COMPLETION_THRESHOLD;}).sort(function(left,right){return left.label>right.label?1:-1;})));var TEST_LANG_CODE=\"__test__\";if(process.env.NODE_ENV===ENV.DEVELOPMENT){languages.unshift({code:TEST_LANG_CODE,label:\"test language\"},{code:\"\".concat(TEST_LANG_CODE,\".rtl\"),label:\"\\u202Atest language (rtl)\\u202C\",rtl:true});}var currentLang=defaultLang;var currentLangData={};export var setLanguage=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(lang){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:currentLang=lang;document.documentElement.dir=currentLang.rtl?\"rtl\":\"ltr\";document.documentElement.lang=currentLang.code;if(!lang.code.startsWith(TEST_LANG_CODE)){_context.next=7;break;}currentLangData={};_context.next=17;break;case 7:_context.prev=7;_context.next=10;return import(/* webpackChunkName: \"locales/[request]\" */\"./locales/\".concat(currentLang.code,\".json\"));case 10:currentLangData=_context.sent;_context.next=17;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](7);console.error(\"Failed to load language \".concat(lang.code,\":\"),_context.t0.message);currentLangData=fallbackLangData;case 17:jotaiStore.set(editorLangCodeAtom,lang.code);case 18:case\"end\":return _context.stop();}},_callee,null,[[7,13]]);}));return function setLanguage(_x){return _ref.apply(this,arguments);};}();export var getLanguage=function getLanguage(){return currentLang;};var findPartsForData=function findPartsForData(data,parts){for(var index=0;index<parts.length;++index){var part=parts[index];if(data[part]===undefined){return undefined;}data=data[part];}if(typeof data!==\"string\"){return undefined;}return data;};export var t=function t(path,replacement,fallback){if(currentLang.code.startsWith(TEST_LANG_CODE)){var name=replacement?\"\".concat(path,\"(\").concat(JSON.stringify(replacement).slice(1,-1),\")\"):path;return\"\\u202A[[\".concat(name,\"]]\\u202C\");}var parts=path.split(\".\");var translation=findPartsForData(currentLangData,parts)||findPartsForData(fallbackLangData,parts)||fallback;if(translation===undefined){var errorMessage=\"Can't find translation for \".concat(path);// in production, don't blow up the app on a missing translation key\nif(process.env.NODE_ENV===\"production\"){console.warn(errorMessage);return\"\";}throw new Error(errorMessage);}if(replacement){for(var _key in replacement){translation=translation.replace(\"{{\".concat(_key,\"}}\"),String(replacement[_key]));}}return translation;};/** @private atom used solely to rerender components using `useI18n` hook */var editorLangCodeAtom=atom(defaultLang.code);// Should be used in components that fall under these cases:\n// - component is rendered as an <Excalidraw> child\n// - component is rendered internally by <Excalidraw>, but the component\n//   is memoized w/o being updated on `langCode`, `AppState`, or `UIAppState`\nexport var useI18n=function useI18n(){var langCode=useAtomValue(editorLangCodeAtom,jotaiScope);return{t:t,langCode:langCode};};","map":{"version":3,"names":["fallbackLangData","percentages","ENV","jotaiScope","jotaiStore","atom","useAtomValue","COMPLETION_THRESHOLD","defaultLang","code","label","languages","concat","_toConsumableArray","rtl","filter","lang","sort","left","right","TEST_LANG_CODE","process","env","NODE_ENV","DEVELOPMENT","unshift","currentLang","currentLangData","setLanguage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","document","documentElement","dir","startsWith","sent","t0","console","error","message","set","editorLangCodeAtom","stop","_x","apply","arguments","getLanguage","findPartsForData","data","parts","index","length","part","undefined","t","path","replacement","fallback","name","JSON","stringify","slice","split","translation","errorMessage","warn","Error","key","replace","String","useI18n","langCode"],"sources":["D:/project/excalidraw-cn/src/i18n.ts"],"sourcesContent":["import fallbackLangData from \"./locales/en.json\";\nimport percentages from \"./locales/percentages.json\";\nimport { ENV } from \"./constants\";\nimport { jotaiScope, jotaiStore } from \"./jotai\";\nimport { atom, useAtomValue } from \"jotai\";\n\nconst COMPLETION_THRESHOLD = 85;\n\nexport interface Language {\n  code: string;\n  label: string;\n  rtl?: boolean;\n}\n\nexport const defaultLang = { code: \"en\", label: \"English\" };\n\nexport const languages: Language[] = [\n  defaultLang,\n  ...[\n    { code: \"ar-SA\", label: \"العربية\", rtl: true },\n    { code: \"bg-BG\", label: \"Български\" },\n    { code: \"ca-ES\", label: \"Català\" },\n    { code: \"cs-CZ\", label: \"Česky\" },\n    { code: \"de-DE\", label: \"Deutsch\" },\n    { code: \"el-GR\", label: \"Ελληνικά\" },\n    { code: \"es-ES\", label: \"Español\" },\n    { code: \"eu-ES\", label: \"Euskara\" },\n    { code: \"fa-IR\", label: \"فارسی\", rtl: true },\n    { code: \"fi-FI\", label: \"Suomi\" },\n    { code: \"fr-FR\", label: \"Français\" },\n    { code: \"gl-ES\", label: \"Galego\" },\n    { code: \"he-IL\", label: \"עברית\", rtl: true },\n    { code: \"hi-IN\", label: \"हिन्दी\" },\n    { code: \"hu-HU\", label: \"Magyar\" },\n    { code: \"id-ID\", label: \"Bahasa Indonesia\" },\n    { code: \"it-IT\", label: \"Italiano\" },\n    { code: \"ja-JP\", label: \"日本語\" },\n    { code: \"kab-KAB\", label: \"Taqbaylit\" },\n    { code: \"kk-KZ\", label: \"Қазақ тілі\" },\n    { code: \"ko-KR\", label: \"한국어\" },\n    { code: \"ku-TR\", label: \"Kurdî\" },\n    { code: \"lt-LT\", label: \"Lietuvių\" },\n    { code: \"lv-LV\", label: \"Latviešu\" },\n    { code: \"my-MM\", label: \"Burmese\" },\n    { code: \"nb-NO\", label: \"Norsk bokmål\" },\n    { code: \"nl-NL\", label: \"Nederlands\" },\n    { code: \"nn-NO\", label: \"Norsk nynorsk\" },\n    { code: \"oc-FR\", label: \"Occitan\" },\n    { code: \"pa-IN\", label: \"ਪੰਜਾਬੀ\" },\n    { code: \"pl-PL\", label: \"Polski\" },\n    { code: \"pt-BR\", label: \"Português Brasileiro\" },\n    { code: \"pt-PT\", label: \"Português\" },\n    { code: \"ro-RO\", label: \"Română\" },\n    { code: \"ru-RU\", label: \"Русский\" },\n    { code: \"sk-SK\", label: \"Slovenčina\" },\n    { code: \"sv-SE\", label: \"Svenska\" },\n    { code: \"sl-SI\", label: \"Slovenščina\" },\n    { code: \"tr-TR\", label: \"Türkçe\" },\n    { code: \"uk-UA\", label: \"Українська\" },\n    { code: \"zh-CN\", label: \"简体中文\" },\n    { code: \"zh-TW\", label: \"繁體中文\" },\n    { code: \"vi-VN\", label: \"Tiếng Việt\" },\n    { code: \"mr-IN\", label: \"मराठी\" },\n  ]\n    .filter(\n      (lang) =>\n        (percentages as Record<string, number>)[lang.code] >=\n        COMPLETION_THRESHOLD,\n    )\n    .sort((left, right) => (left.label > right.label ? 1 : -1)),\n];\n\nconst TEST_LANG_CODE = \"__test__\";\nif (process.env.NODE_ENV === ENV.DEVELOPMENT) {\n  languages.unshift(\n    { code: TEST_LANG_CODE, label: \"test language\" },\n    {\n      code: `${TEST_LANG_CODE}.rtl`,\n      label: \"\\u{202a}test language (rtl)\\u{202c}\",\n      rtl: true,\n    },\n  );\n}\n\nlet currentLang: Language = defaultLang;\nlet currentLangData = {};\n\nexport const setLanguage = async (lang: Language) => {\n  currentLang = lang;\n  document.documentElement.dir = currentLang.rtl ? \"rtl\" : \"ltr\";\n  document.documentElement.lang = currentLang.code;\n\n  if (lang.code.startsWith(TEST_LANG_CODE)) {\n    currentLangData = {};\n  } else {\n    try {\n      currentLangData = await import(\n        /* webpackChunkName: \"locales/[request]\" */ `./locales/${currentLang.code}.json`\n      );\n    } catch (error: any) {\n      console.error(`Failed to load language ${lang.code}:`, error.message);\n      currentLangData = fallbackLangData;\n    }\n  }\n\n  jotaiStore.set(editorLangCodeAtom, lang.code);\n};\n\nexport const getLanguage = () => currentLang;\n\nconst findPartsForData = (data: any, parts: string[]) => {\n  for (let index = 0; index < parts.length; ++index) {\n    const part = parts[index];\n    if (data[part] === undefined) {\n      return undefined;\n    }\n    data = data[part];\n  }\n  if (typeof data !== \"string\") {\n    return undefined;\n  }\n  return data;\n};\n\nexport const t = (\n  path: string,\n  replacement?: { [key: string]: string | number } | null,\n  fallback?: string,\n) => {\n  if (currentLang.code.startsWith(TEST_LANG_CODE)) {\n    const name = replacement\n      ? `${path}(${JSON.stringify(replacement).slice(1, -1)})`\n      : path;\n    return `\\u{202a}[[${name}]]\\u{202c}`;\n  }\n\n  const parts = path.split(\".\");\n  let translation =\n    findPartsForData(currentLangData, parts) ||\n    findPartsForData(fallbackLangData, parts) ||\n    fallback;\n  if (translation === undefined) {\n    const errorMessage = `Can't find translation for ${path}`;\n    // in production, don't blow up the app on a missing translation key\n    if (process.env.NODE_ENV === \"production\") {\n      console.warn(errorMessage);\n      return \"\";\n    }\n    throw new Error(errorMessage);\n  }\n\n  if (replacement) {\n    for (const key in replacement) {\n      translation = translation.replace(`{{${key}}}`, String(replacement[key]));\n    }\n  }\n  return translation;\n};\n\n/** @private atom used solely to rerender components using `useI18n` hook */\nconst editorLangCodeAtom = atom(defaultLang.code);\n\n// Should be used in components that fall under these cases:\n// - component is rendered as an <Excalidraw> child\n// - component is rendered internally by <Excalidraw>, but the component\n//   is memoized w/o being updated on `langCode`, `AppState`, or `UIAppState`\nexport const useI18n = () => {\n  const langCode = useAtomValue(editorLangCodeAtom, jotaiScope);\n  return { t, langCode };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}