{"ast":null,"code":"/**\n * https://stackoverflow.com/a/3368118\n * Draws a rounded rectangle using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius\n */export var roundRect=function roundRect(context,x,y,width,height,radius,strokeColor){context.beginPath();context.moveTo(x+radius,y);context.lineTo(x+width-radius,y);context.quadraticCurveTo(x+width,y,x+width,y+radius);context.lineTo(x+width,y+height-radius);context.quadraticCurveTo(x+width,y+height,x+width-radius,y+height);context.lineTo(x+radius,y+height);context.quadraticCurveTo(x,y+height,x,y+height-radius);context.lineTo(x,y+radius);context.quadraticCurveTo(x,y,x+radius,y);context.closePath();context.fill();if(strokeColor){context.strokeStyle=strokeColor;}context.stroke();};","map":{"version":3,"names":["roundRect","context","x","y","width","height","radius","strokeColor","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","strokeStyle","stroke"],"sources":["D:/project/excalidraw-cn/src/renderer/roundRect.ts"],"sourcesContent":["/**\n * https://stackoverflow.com/a/3368118\n * Draws a rounded rectangle using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius\n */\nexport const roundRect = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n  strokeColor?: string,\n) => {\n  context.beginPath();\n  context.moveTo(x + radius, y);\n  context.lineTo(x + width - radius, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius);\n  context.lineTo(x + width, y + height - radius);\n  context.quadraticCurveTo(\n    x + width,\n    y + height,\n    x + width - radius,\n    y + height,\n  );\n  context.lineTo(x + radius, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius);\n  context.lineTo(x, y + radius);\n  context.quadraticCurveTo(x, y, x + radius, y);\n  context.closePath();\n  context.fill();\n  if (strokeColor) {\n    context.strokeStyle = strokeColor;\n  }\n  context.stroke();\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAA,SAAS,CAAG,QAAZ,CAAAA,SAASA,CACpBC,OAAiC,CACjCC,CAAS,CACTC,CAAS,CACTC,KAAa,CACbC,MAAc,CACdC,MAAc,CACdC,WAAoB,CACjB,CACHN,OAAO,CAACO,SAAS,EAAE,CACnBP,OAAO,CAACQ,MAAM,CAACP,CAAC,CAAGI,MAAM,CAAEH,CAAC,CAAC,CAC7BF,OAAO,CAACS,MAAM,CAACR,CAAC,CAAGE,KAAK,CAAGE,MAAM,CAAEH,CAAC,CAAC,CACrCF,OAAO,CAACU,gBAAgB,CAACT,CAAC,CAAGE,KAAK,CAAED,CAAC,CAAED,CAAC,CAAGE,KAAK,CAAED,CAAC,CAAGG,MAAM,CAAC,CAC7DL,OAAO,CAACS,MAAM,CAACR,CAAC,CAAGE,KAAK,CAAED,CAAC,CAAGE,MAAM,CAAGC,MAAM,CAAC,CAC9CL,OAAO,CAACU,gBAAgB,CACtBT,CAAC,CAAGE,KAAK,CACTD,CAAC,CAAGE,MAAM,CACVH,CAAC,CAAGE,KAAK,CAAGE,MAAM,CAClBH,CAAC,CAAGE,MAAM,CACX,CACDJ,OAAO,CAACS,MAAM,CAACR,CAAC,CAAGI,MAAM,CAAEH,CAAC,CAAGE,MAAM,CAAC,CACtCJ,OAAO,CAACU,gBAAgB,CAACT,CAAC,CAAEC,CAAC,CAAGE,MAAM,CAAEH,CAAC,CAAEC,CAAC,CAAGE,MAAM,CAAGC,MAAM,CAAC,CAC/DL,OAAO,CAACS,MAAM,CAACR,CAAC,CAAEC,CAAC,CAAGG,MAAM,CAAC,CAC7BL,OAAO,CAACU,gBAAgB,CAACT,CAAC,CAAEC,CAAC,CAAED,CAAC,CAAGI,MAAM,CAAEH,CAAC,CAAC,CAC7CF,OAAO,CAACW,SAAS,EAAE,CACnBX,OAAO,CAACY,IAAI,EAAE,CACd,GAAIN,WAAW,CAAE,CACfN,OAAO,CAACa,WAAW,CAAGP,WAAW,CACnC,CACAN,OAAO,CAACc,MAAM,EAAE,CAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}