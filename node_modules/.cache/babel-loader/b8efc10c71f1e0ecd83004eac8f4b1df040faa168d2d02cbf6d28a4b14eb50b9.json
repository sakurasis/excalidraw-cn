{"ast":null,"code":"import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _createClass from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _toConsumableArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _createForOfIteratorHelper from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import{loadLibraryFromBlob}from\"./blob\";import{restoreLibraryItems}from\"./restore\";import{atom}from\"jotai\";import{jotaiStore}from\"../jotai\";import{getCommonBoundingBox}from\"../element/bounds\";import{AbortError}from\"../errors\";import{t}from\"../i18n\";import{useEffect,useRef}from\"react\";import{URL_HASH_KEYS,URL_QUERY_KEYS,APP_NAME,EVENT,DEFAULT_SIDEBAR,LIBRARY_SIDEBAR_TAB}from\"../constants\";import{libraryItemSvgsCache}from\"../hooks/useLibraryItemSvg\";export var libraryItemsAtom=atom({status:\"loaded\",isInitialized:true,libraryItems:[]});var cloneLibraryItems=function cloneLibraryItems(libraryItems){return JSON.parse(JSON.stringify(libraryItems));};/**\n * checks if library item does not exist already in current library\n */var isUniqueItem=function isUniqueItem(existingLibraryItems,targetLibraryItem){return!existingLibraryItems.find(function(libraryItem){if(libraryItem.elements.length!==targetLibraryItem.elements.length){return false;}// detect z-index difference by checking the excalidraw elements\n// are in order\nreturn libraryItem.elements.every(function(libItemExcalidrawItem,idx){return libItemExcalidrawItem.id===targetLibraryItem.elements[idx].id&&libItemExcalidrawItem.versionNonce===targetLibraryItem.elements[idx].versionNonce;});});};/** Merges otherItems into localItems. Unique items in otherItems array are\n    sorted first. */export var mergeLibraryItems=function mergeLibraryItems(localItems,otherItems){var newItems=[];var _iterator=_createForOfIteratorHelper(otherItems),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;if(isUniqueItem(localItems,item)){newItems.push(item);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return[].concat(newItems,_toConsumableArray(localItems));};var Library=/*#__PURE__*/_createClass(function Library(app){var _this=this;_classCallCheck(this,Library);/** latest libraryItems */this.lastLibraryItems=[];/** indicates whether library is initialized with library items (has gone\n   * though at least one update) */this.isInitialized=false;this.app=void 0;this.updateQueue=[];this.getLastUpdateTask=function(){return _this.updateQueue[_this.updateQueue.length-1];};this.notifyListeners=function(){if(_this.updateQueue.length>0){jotaiStore.set(libraryItemsAtom,{status:\"loading\",libraryItems:_this.lastLibraryItems,isInitialized:_this.isInitialized});}else{_this.isInitialized=true;jotaiStore.set(libraryItemsAtom,{status:\"loaded\",libraryItems:_this.lastLibraryItems,isInitialized:_this.isInitialized});try{var _this$app$props$onLib,_this$app$props;(_this$app$props$onLib=(_this$app$props=_this.app.props).onLibraryChange)===null||_this$app$props$onLib===void 0?void 0:_this$app$props$onLib.call(_this$app$props,cloneLibraryItems(_this.lastLibraryItems));}catch(error){console.error(error);}}};/** call on excalidraw instance unmount */this.destroy=function(){_this.isInitialized=false;_this.updateQueue=[];_this.lastLibraryItems=[];jotaiStore.set(libraryItemSvgsCache,new Map());// TODO uncomment after/if we make jotai store scoped to each excal instance\n// jotaiStore.set(libraryItemsAtom, {\n//   status: \"loading\",\n//   isInitialized: false,\n//   libraryItems: [],\n// });\n};this.resetLibrary=function(){return _this.setLibrary([]);};/**\n   * @returns latest cloned libraryItems. Awaits all in-progress updates first.\n   */this.getLatestLibrary=function(){return new Promise(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(resolve){var libraryItems;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _this.getLastUpdateTask()||_this.lastLibraryItems;case 3:libraryItems=_context.sent;if(_this.updateQueue.length>0){resolve(_this.getLatestLibrary());}else{resolve(cloneLibraryItems(libraryItems));}_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",resolve(_this.lastLibraryItems));case 10:case\"end\":return _context.stop();}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}());};// NOTE this is a high-level public API (exposed on ExcalidrawAPI) with\n// a slight overhead (always restoring library items). For internal use\n// where merging isn't needed, use `library.setLibrary()` directly.\nthis.updateLibrary=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_ref2){var libraryItems,_ref2$prompt,prompt,_ref2$merge,merge,_ref2$openLibraryMenu,openLibraryMenu,_ref2$defaultStatus,defaultStatus;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:libraryItems=_ref2.libraryItems,_ref2$prompt=_ref2.prompt,prompt=_ref2$prompt===void 0?false:_ref2$prompt,_ref2$merge=_ref2.merge,merge=_ref2$merge===void 0?false:_ref2$merge,_ref2$openLibraryMenu=_ref2.openLibraryMenu,openLibraryMenu=_ref2$openLibraryMenu===void 0?false:_ref2$openLibraryMenu,_ref2$defaultStatus=_ref2.defaultStatus,defaultStatus=_ref2$defaultStatus===void 0?\"unpublished\":_ref2$defaultStatus;if(openLibraryMenu){_this.app.setState({openSidebar:{name:DEFAULT_SIDEBAR.name,tab:LIBRARY_SIDEBAR_TAB}});}return _context3.abrupt(\"return\",_this.setLibrary(function(){return new Promise(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(resolve,reject){var source,nextItems;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return typeof libraryItems===\"function\"&&!(libraryItems instanceof Blob)?libraryItems(_this.lastLibraryItems):libraryItems;case 3:source=_context2.sent;if(!(source instanceof Blob)){_context2.next=10;break;}_context2.next=7;return loadLibraryFromBlob(source,defaultStatus);case 7:nextItems=_context2.sent;_context2.next=11;break;case 10:nextItems=restoreLibraryItems(source,defaultStatus);case 11:if(!prompt||window.confirm(t(\"alerts.confirmAddLibrary\",{numShapes:nextItems.length}))){if(prompt){// focus container if we've prompted. We focus conditionally\n// lest `props.autoFocus` is disabled (in which case we should\n// focus only on user action such as prompt confirm)\n_this.app.focusContainer();}if(merge){resolve(mergeLibraryItems(_this.lastLibraryItems,nextItems));}else{resolve(nextItems);}}else{reject(new AbortError());}_context2.next=17;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](0);reject(_context2.t0);case 17:case\"end\":return _context2.stop();}},_callee2,null,[[0,14]]);}));return function(_x3,_x4){return _ref4.apply(this,arguments);};}());}));case 3:case\"end\":return _context3.stop();}},_callee3);}));return function(_x2){return _ref3.apply(this,arguments);};}();this.setLibrary=function(libraryItems){var task=new Promise(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(resolve,reject){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return _this.getLastUpdateTask();case 3:if(typeof libraryItems===\"function\"){libraryItems=libraryItems(_this.lastLibraryItems);}_context4.t0=cloneLibraryItems;_context4.next=7;return libraryItems;case 7:_context4.t1=_context4.sent;_this.lastLibraryItems=(0,_context4.t0)(_context4.t1);resolve(_this.lastLibraryItems);_context4.next=15;break;case 12:_context4.prev=12;_context4.t2=_context4[\"catch\"](0);reject(_context4.t2);case 15:case\"end\":return _context4.stop();}},_callee4,null,[[0,12]]);}));return function(_x5,_x6){return _ref5.apply(this,arguments);};}()).catch(function(error){if(error.name===\"AbortError\"){console.warn(\"Library update aborted by user\");return _this.lastLibraryItems;}throw error;}).finally(function(){_this.updateQueue=_this.updateQueue.filter(function(_task){return _task!==task;});_this.notifyListeners();});_this.updateQueue.push(task);_this.notifyListeners();return task;};this.app=app;});export default Library;export var distributeLibraryItemsOnSquareGrid=function distributeLibraryItemsOnSquareGrid(libraryItems){var PADDING=50;var ITEMS_PER_ROW=Math.ceil(Math.sqrt(libraryItems.length));var resElements=[];var getMaxHeightPerRow=function getMaxHeightPerRow(row){var maxHeight=libraryItems.slice(row*ITEMS_PER_ROW,row*ITEMS_PER_ROW+ITEMS_PER_ROW).reduce(function(acc,item){var _getCommonBoundingBox=getCommonBoundingBox(item.elements),height=_getCommonBoundingBox.height;return Math.max(acc,height);},0);return maxHeight;};var getMaxWidthPerCol=function getMaxWidthPerCol(targetCol){var index=0;var currCol=0;var maxWidth=0;var _iterator2=_createForOfIteratorHelper(libraryItems),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var item=_step2.value;if(index%ITEMS_PER_ROW===0){currCol=0;}if(currCol===targetCol){var _getCommonBoundingBox2=getCommonBoundingBox(item.elements),width=_getCommonBoundingBox2.width;maxWidth=Math.max(maxWidth,width);}index++;currCol++;}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return maxWidth;};var colOffsetX=0;var rowOffsetY=0;var maxHeightCurrRow=0;var maxWidthCurrCol=0;var index=0;var col=0;var row=0;var _iterator3=_createForOfIteratorHelper(libraryItems),_step3;try{var _loop=function _loop(){var item=_step3.value;if(index&&index%ITEMS_PER_ROW===0){rowOffsetY+=maxHeightCurrRow+PADDING;colOffsetX=0;col=0;row++;}if(col===0){maxHeightCurrRow=getMaxHeightPerRow(row);}maxWidthCurrCol=getMaxWidthPerCol(col);var _getCommonBoundingBox3=getCommonBoundingBox(item.elements),minX=_getCommonBoundingBox3.minX,minY=_getCommonBoundingBox3.minY,width=_getCommonBoundingBox3.width,height=_getCommonBoundingBox3.height;var offsetCenterX=(maxWidthCurrCol-width)/2;var offsetCenterY=(maxHeightCurrRow-height)/2;resElements.push.apply(resElements,_toConsumableArray(item.elements.map(function(element){return _objectSpread(_objectSpread({},element),{},{x:element.x+// offset for column\ncolOffsetX+// offset to center in given square grid\noffsetCenterX-// subtract minX so that given item starts at 0 coord\nminX,y:element.y+// offset for row\nrowOffsetY+// offset to center in given square grid\noffsetCenterY-// subtract minY so that given item starts at 0 coord\nminY});})));colOffsetX+=maxWidthCurrCol+PADDING;index++;col++;};for(_iterator3.s();!(_step3=_iterator3.n()).done;){_loop();}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}return resElements;};export var parseLibraryTokensFromUrl=function parseLibraryTokensFromUrl(){var libraryUrl=// current\nnew URLSearchParams(window.location.hash.slice(1)).get(URL_HASH_KEYS.addLibrary)||// legacy, kept for compat reasons\nnew URLSearchParams(window.location.search).get(URL_QUERY_KEYS.addLibrary);var idToken=libraryUrl?new URLSearchParams(window.location.hash.slice(1)).get(\"token\"):null;return libraryUrl?{libraryUrl:libraryUrl,idToken:idToken}:null;};export var useHandleLibrary=function useHandleLibrary(_ref6){var excalidrawAPI=_ref6.excalidrawAPI,getInitialLibraryItems=_ref6.getInitialLibraryItems;var getInitialLibraryRef=useRef(getInitialLibraryItems);useEffect(function(){if(!excalidrawAPI){return;}var importLibraryFromURL=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(_ref7){var libraryUrl,idToken,libraryPromise,shouldPrompt,hash,query;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:libraryUrl=_ref7.libraryUrl,idToken=_ref7.idToken;libraryPromise=new Promise(/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(resolve,reject){var request,blob;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return fetch(decodeURIComponent(libraryUrl));case 3:request=_context5.sent;_context5.next=6;return request.blob();case 6:blob=_context5.sent;resolve(blob);_context5.next=13;break;case 10:_context5.prev=10;_context5.t0=_context5[\"catch\"](0);reject(_context5.t0);case 13:case\"end\":return _context5.stop();}},_callee5,null,[[0,10]]);}));return function(_x8,_x9){return _ref9.apply(this,arguments);};}());shouldPrompt=idToken!==excalidrawAPI.id;// wait for the tab to be focused before continuing in case we'll prompt\n// for confirmation\n_context6.next=5;return shouldPrompt&&document.hidden?new Promise(function(resolve){window.addEventListener(\"focus\",function(){return resolve();},{once:true});}):null;case 5:_context6.prev=5;_context6.next=8;return excalidrawAPI.updateLibrary({libraryItems:libraryPromise,prompt:shouldPrompt,merge:true,defaultStatus:\"published\",openLibraryMenu:true});case 8:_context6.next=13;break;case 10:_context6.prev=10;_context6.t0=_context6[\"catch\"](5);throw _context6.t0;case 13:_context6.prev=13;if(window.location.hash.includes(URL_HASH_KEYS.addLibrary)){hash=new URLSearchParams(window.location.hash.slice(1));hash.delete(URL_HASH_KEYS.addLibrary);window.history.replaceState({},APP_NAME,\"#\".concat(hash.toString()));}else if(window.location.search.includes(URL_QUERY_KEYS.addLibrary)){query=new URLSearchParams(window.location.search);query.delete(URL_QUERY_KEYS.addLibrary);window.history.replaceState({},APP_NAME,\"?\".concat(query.toString()));}return _context6.finish(13);case 16:case\"end\":return _context6.stop();}},_callee6,null,[[5,10,13,16]]);}));return function importLibraryFromURL(_x7){return _ref8.apply(this,arguments);};}();var onHashChange=function onHashChange(event){event.preventDefault();var libraryUrlTokens=parseLibraryTokensFromUrl();if(libraryUrlTokens){event.stopImmediatePropagation();// If hash changed and it contains library url, import it and replace\n// the url to its previous state (important in case of collaboration\n// and similar).\n// Using history API won't trigger another hashchange.\nwindow.history.replaceState({},\"\",event.oldURL);importLibraryFromURL(libraryUrlTokens);}};// -------------------------------------------------------------------------\n// ------ init load --------------------------------------------------------\nif(getInitialLibraryRef.current){excalidrawAPI.updateLibrary({libraryItems:getInitialLibraryRef.current()});}var libraryUrlTokens=parseLibraryTokensFromUrl();if(libraryUrlTokens){importLibraryFromURL(libraryUrlTokens);}// --------------------------------------------------------- init load -----\nwindow.addEventListener(EVENT.HASHCHANGE,onHashChange);return function(){window.removeEventListener(EVENT.HASHCHANGE,onHashChange);};},[excalidrawAPI]);};","map":{"version":3,"names":["loadLibraryFromBlob","restoreLibraryItems","atom","jotaiStore","getCommonBoundingBox","AbortError","t","useEffect","useRef","URL_HASH_KEYS","URL_QUERY_KEYS","APP_NAME","EVENT","DEFAULT_SIDEBAR","LIBRARY_SIDEBAR_TAB","libraryItemSvgsCache","libraryItemsAtom","status","isInitialized","libraryItems","cloneLibraryItems","JSON","parse","stringify","isUniqueItem","existingLibraryItems","targetLibraryItem","find","libraryItem","elements","length","every","libItemExcalidrawItem","idx","id","versionNonce","mergeLibraryItems","localItems","otherItems","newItems","_iterator","_createForOfIteratorHelper","_step","s","n","done","item","value","push","err","e","f","concat","_toConsumableArray","Library","_createClass","app","_this","_classCallCheck","lastLibraryItems","updateQueue","getLastUpdateTask","notifyListeners","set","_this$app$props$onLib","_this$app$props","props","onLibraryChange","call","error","console","destroy","Map","resetLibrary","setLibrary","getLatestLibrary","Promise","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resolve","wrap","_callee$","_context","prev","next","sent","t0","abrupt","stop","_x","apply","arguments","updateLibrary","_ref3","_callee3","_ref2","_ref2$prompt","prompt","_ref2$merge","merge","_ref2$openLibraryMenu","openLibraryMenu","_ref2$defaultStatus","defaultStatus","_callee3$","_context3","setState","openSidebar","name","tab","_ref4","_callee2","reject","source","nextItems","_callee2$","_context2","Blob","window","confirm","numShapes","focusContainer","_x3","_x4","_x2","task","_ref5","_callee4","_callee4$","_context4","t1","t2","_x5","_x6","catch","warn","finally","filter","_task","distributeLibraryItemsOnSquareGrid","PADDING","ITEMS_PER_ROW","Math","ceil","sqrt","resElements","getMaxHeightPerRow","row","maxHeight","slice","reduce","acc","_getCommonBoundingBox","height","max","getMaxWidthPerCol","targetCol","index","currCol","maxWidth","_iterator2","_step2","_getCommonBoundingBox2","width","colOffsetX","rowOffsetY","maxHeightCurrRow","maxWidthCurrCol","col","_iterator3","_step3","_loop","_getCommonBoundingBox3","minX","minY","offsetCenterX","offsetCenterY","map","element","_objectSpread","x","y","parseLibraryTokensFromUrl","libraryUrl","URLSearchParams","location","hash","get","addLibrary","search","idToken","useHandleLibrary","_ref6","excalidrawAPI","getInitialLibraryItems","getInitialLibraryRef","importLibraryFromURL","_ref8","_callee6","_ref7","libraryPromise","shouldPrompt","query","_callee6$","_context6","_ref9","_callee5","request","blob","_callee5$","_context5","fetch","decodeURIComponent","_x8","_x9","document","hidden","addEventListener","once","includes","delete","history","replaceState","toString","finish","_x7","onHashChange","event","preventDefault","libraryUrlTokens","stopImmediatePropagation","oldURL","current","HASHCHANGE","removeEventListener"],"sources":["D:/project/excalidraw-cn/src/data/library.ts"],"sourcesContent":["import { loadLibraryFromBlob } from \"./blob\";\nimport {\n  LibraryItems,\n  LibraryItem,\n  ExcalidrawImperativeAPI,\n  LibraryItemsSource,\n} from \"../types\";\nimport { restoreLibraryItems } from \"./restore\";\nimport type App from \"../components/App\";\nimport { atom } from \"jotai\";\nimport { jotaiStore } from \"../jotai\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBoundingBox } from \"../element/bounds\";\nimport { AbortError } from \"../errors\";\nimport { t } from \"../i18n\";\nimport { useEffect, useRef } from \"react\";\nimport {\n  URL_HASH_KEYS,\n  URL_QUERY_KEYS,\n  APP_NAME,\n  EVENT,\n  DEFAULT_SIDEBAR,\n  LIBRARY_SIDEBAR_TAB,\n} from \"../constants\";\nimport { libraryItemSvgsCache } from \"../hooks/useLibraryItemSvg\";\n\nexport const libraryItemsAtom = atom<{\n  status: \"loading\" | \"loaded\";\n  isInitialized: boolean;\n  libraryItems: LibraryItems;\n}>({ status: \"loaded\", isInitialized: true, libraryItems: [] });\n\nconst cloneLibraryItems = (libraryItems: LibraryItems): LibraryItems =>\n  JSON.parse(JSON.stringify(libraryItems));\n\n/**\n * checks if library item does not exist already in current library\n */\nconst isUniqueItem = (\n  existingLibraryItems: LibraryItems,\n  targetLibraryItem: LibraryItem,\n) => {\n  return !existingLibraryItems.find((libraryItem) => {\n    if (libraryItem.elements.length !== targetLibraryItem.elements.length) {\n      return false;\n    }\n\n    // detect z-index difference by checking the excalidraw elements\n    // are in order\n    return libraryItem.elements.every((libItemExcalidrawItem, idx) => {\n      return (\n        libItemExcalidrawItem.id === targetLibraryItem.elements[idx].id &&\n        libItemExcalidrawItem.versionNonce ===\n          targetLibraryItem.elements[idx].versionNonce\n      );\n    });\n  });\n};\n\n/** Merges otherItems into localItems. Unique items in otherItems array are\n    sorted first. */\nexport const mergeLibraryItems = (\n  localItems: LibraryItems,\n  otherItems: LibraryItems,\n): LibraryItems => {\n  const newItems = [];\n  for (const item of otherItems) {\n    if (isUniqueItem(localItems, item)) {\n      newItems.push(item);\n    }\n  }\n\n  return [...newItems, ...localItems];\n};\n\nclass Library {\n  /** latest libraryItems */\n  private lastLibraryItems: LibraryItems = [];\n  /** indicates whether library is initialized with library items (has gone\n   * though at least one update) */\n  private isInitialized = false;\n\n  private app: App;\n\n  constructor(app: App) {\n    this.app = app;\n  }\n\n  private updateQueue: Promise<LibraryItems>[] = [];\n\n  private getLastUpdateTask = (): Promise<LibraryItems> | undefined => {\n    return this.updateQueue[this.updateQueue.length - 1];\n  };\n\n  private notifyListeners = () => {\n    if (this.updateQueue.length > 0) {\n      jotaiStore.set(libraryItemsAtom, {\n        status: \"loading\",\n        libraryItems: this.lastLibraryItems,\n        isInitialized: this.isInitialized,\n      });\n    } else {\n      this.isInitialized = true;\n      jotaiStore.set(libraryItemsAtom, {\n        status: \"loaded\",\n        libraryItems: this.lastLibraryItems,\n        isInitialized: this.isInitialized,\n      });\n      try {\n        this.app.props.onLibraryChange?.(\n          cloneLibraryItems(this.lastLibraryItems),\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  /** call on excalidraw instance unmount */\n  destroy = () => {\n    this.isInitialized = false;\n    this.updateQueue = [];\n    this.lastLibraryItems = [];\n    jotaiStore.set(libraryItemSvgsCache, new Map());\n    // TODO uncomment after/if we make jotai store scoped to each excal instance\n    // jotaiStore.set(libraryItemsAtom, {\n    //   status: \"loading\",\n    //   isInitialized: false,\n    //   libraryItems: [],\n    // });\n  };\n\n  resetLibrary = () => {\n    return this.setLibrary([]);\n  };\n\n  /**\n   * @returns latest cloned libraryItems. Awaits all in-progress updates first.\n   */\n  getLatestLibrary = (): Promise<LibraryItems> => {\n    return new Promise(async (resolve) => {\n      try {\n        const libraryItems = await (this.getLastUpdateTask() ||\n          this.lastLibraryItems);\n        if (this.updateQueue.length > 0) {\n          resolve(this.getLatestLibrary());\n        } else {\n          resolve(cloneLibraryItems(libraryItems));\n        }\n      } catch (error) {\n        return resolve(this.lastLibraryItems);\n      }\n    });\n  };\n\n  // NOTE this is a high-level public API (exposed on ExcalidrawAPI) with\n  // a slight overhead (always restoring library items). For internal use\n  // where merging isn't needed, use `library.setLibrary()` directly.\n  updateLibrary = async ({\n    libraryItems,\n    prompt = false,\n    merge = false,\n    openLibraryMenu = false,\n    defaultStatus = \"unpublished\",\n  }: {\n    libraryItems: LibraryItemsSource;\n    merge?: boolean;\n    prompt?: boolean;\n    openLibraryMenu?: boolean;\n    defaultStatus?: \"unpublished\" | \"published\";\n  }): Promise<LibraryItems> => {\n    if (openLibraryMenu) {\n      this.app.setState({\n        openSidebar: { name: DEFAULT_SIDEBAR.name, tab: LIBRARY_SIDEBAR_TAB },\n      });\n    }\n\n    return this.setLibrary(() => {\n      return new Promise<LibraryItems>(async (resolve, reject) => {\n        try {\n          const source = await (typeof libraryItems === \"function\" &&\n          !(libraryItems instanceof Blob)\n            ? libraryItems(this.lastLibraryItems)\n            : libraryItems);\n\n          let nextItems;\n\n          if (source instanceof Blob) {\n            nextItems = await loadLibraryFromBlob(source, defaultStatus);\n          } else {\n            nextItems = restoreLibraryItems(source, defaultStatus);\n          }\n          if (\n            !prompt ||\n            window.confirm(\n              t(\"alerts.confirmAddLibrary\", {\n                numShapes: nextItems.length,\n              }),\n            )\n          ) {\n            if (prompt) {\n              // focus container if we've prompted. We focus conditionally\n              // lest `props.autoFocus` is disabled (in which case we should\n              // focus only on user action such as prompt confirm)\n              this.app.focusContainer();\n            }\n\n            if (merge) {\n              resolve(mergeLibraryItems(this.lastLibraryItems, nextItems));\n            } else {\n              resolve(nextItems);\n            }\n          } else {\n            reject(new AbortError());\n          }\n        } catch (error: any) {\n          reject(error);\n        }\n      });\n    });\n  };\n\n  setLibrary = (\n    /**\n     * LibraryItems that will replace current items. Can be a function which\n     * will be invoked after all previous tasks are resolved\n     * (this is the prefered way to update the library to avoid race conditions,\n     * but you'll want to manually merge the library items in the callback\n     *  - which is what we're doing in Library.importLibrary()).\n     *\n     * If supplied promise is rejected with AbortError, we swallow it and\n     * do not update the library.\n     */\n    libraryItems:\n      | LibraryItems\n      | Promise<LibraryItems>\n      | ((\n          latestLibraryItems: LibraryItems,\n        ) => LibraryItems | Promise<LibraryItems>),\n  ): Promise<LibraryItems> => {\n    const task = new Promise<LibraryItems>(async (resolve, reject) => {\n      try {\n        await this.getLastUpdateTask();\n\n        if (typeof libraryItems === \"function\") {\n          libraryItems = libraryItems(this.lastLibraryItems);\n        }\n\n        this.lastLibraryItems = cloneLibraryItems(await libraryItems);\n\n        resolve(this.lastLibraryItems);\n      } catch (error: any) {\n        reject(error);\n      }\n    })\n      .catch((error) => {\n        if (error.name === \"AbortError\") {\n          console.warn(\"Library update aborted by user\");\n          return this.lastLibraryItems;\n        }\n        throw error;\n      })\n      .finally(() => {\n        this.updateQueue = this.updateQueue.filter((_task) => _task !== task);\n        this.notifyListeners();\n      });\n\n    this.updateQueue.push(task);\n    this.notifyListeners();\n\n    return task;\n  };\n}\n\nexport default Library;\n\nexport const distributeLibraryItemsOnSquareGrid = (\n  libraryItems: LibraryItems,\n) => {\n  const PADDING = 50;\n  const ITEMS_PER_ROW = Math.ceil(Math.sqrt(libraryItems.length));\n\n  const resElements: ExcalidrawElement[] = [];\n\n  const getMaxHeightPerRow = (row: number) => {\n    const maxHeight = libraryItems\n      .slice(row * ITEMS_PER_ROW, row * ITEMS_PER_ROW + ITEMS_PER_ROW)\n      .reduce((acc, item) => {\n        const { height } = getCommonBoundingBox(item.elements);\n        return Math.max(acc, height);\n      }, 0);\n    return maxHeight;\n  };\n\n  const getMaxWidthPerCol = (targetCol: number) => {\n    let index = 0;\n    let currCol = 0;\n    let maxWidth = 0;\n    for (const item of libraryItems) {\n      if (index % ITEMS_PER_ROW === 0) {\n        currCol = 0;\n      }\n      if (currCol === targetCol) {\n        const { width } = getCommonBoundingBox(item.elements);\n        maxWidth = Math.max(maxWidth, width);\n      }\n      index++;\n      currCol++;\n    }\n    return maxWidth;\n  };\n\n  let colOffsetX = 0;\n  let rowOffsetY = 0;\n\n  let maxHeightCurrRow = 0;\n  let maxWidthCurrCol = 0;\n\n  let index = 0;\n  let col = 0;\n  let row = 0;\n\n  for (const item of libraryItems) {\n    if (index && index % ITEMS_PER_ROW === 0) {\n      rowOffsetY += maxHeightCurrRow + PADDING;\n      colOffsetX = 0;\n      col = 0;\n      row++;\n    }\n\n    if (col === 0) {\n      maxHeightCurrRow = getMaxHeightPerRow(row);\n    }\n    maxWidthCurrCol = getMaxWidthPerCol(col);\n\n    const { minX, minY, width, height } = getCommonBoundingBox(item.elements);\n    const offsetCenterX = (maxWidthCurrCol - width) / 2;\n    const offsetCenterY = (maxHeightCurrRow - height) / 2;\n    resElements.push(\n      // eslint-disable-next-line no-loop-func\n      ...item.elements.map((element) => ({\n        ...element,\n        x:\n          element.x +\n          // offset for column\n          colOffsetX +\n          // offset to center in given square grid\n          offsetCenterX -\n          // subtract minX so that given item starts at 0 coord\n          minX,\n        y:\n          element.y +\n          // offset for row\n          rowOffsetY +\n          // offset to center in given square grid\n          offsetCenterY -\n          // subtract minY so that given item starts at 0 coord\n          minY,\n      })),\n    );\n    colOffsetX += maxWidthCurrCol + PADDING;\n    index++;\n    col++;\n  }\n\n  return resElements;\n};\n\nexport const parseLibraryTokensFromUrl = () => {\n  const libraryUrl =\n    // current\n    new URLSearchParams(window.location.hash.slice(1)).get(\n      URL_HASH_KEYS.addLibrary,\n    ) ||\n    // legacy, kept for compat reasons\n    new URLSearchParams(window.location.search).get(URL_QUERY_KEYS.addLibrary);\n  const idToken = libraryUrl\n    ? new URLSearchParams(window.location.hash.slice(1)).get(\"token\")\n    : null;\n\n  return libraryUrl ? { libraryUrl, idToken } : null;\n};\n\nexport const useHandleLibrary = ({\n  excalidrawAPI,\n  getInitialLibraryItems,\n}: {\n  excalidrawAPI: ExcalidrawImperativeAPI | null;\n  getInitialLibraryItems?: () => LibraryItemsSource;\n}) => {\n  const getInitialLibraryRef = useRef(getInitialLibraryItems);\n\n  useEffect(() => {\n    if (!excalidrawAPI) {\n      return;\n    }\n\n    const importLibraryFromURL = async ({\n      libraryUrl,\n      idToken,\n    }: {\n      libraryUrl: string;\n      idToken: string | null;\n    }) => {\n      const libraryPromise = new Promise<Blob>(async (resolve, reject) => {\n        try {\n          const request = await fetch(decodeURIComponent(libraryUrl));\n          const blob = await request.blob();\n          resolve(blob);\n        } catch (error: any) {\n          reject(error);\n        }\n      });\n\n      const shouldPrompt = idToken !== excalidrawAPI.id;\n\n      // wait for the tab to be focused before continuing in case we'll prompt\n      // for confirmation\n      await (shouldPrompt && document.hidden\n        ? new Promise<void>((resolve) => {\n            window.addEventListener(\"focus\", () => resolve(), {\n              once: true,\n            });\n          })\n        : null);\n\n      try {\n        await excalidrawAPI.updateLibrary({\n          libraryItems: libraryPromise,\n          prompt: shouldPrompt,\n          merge: true,\n          defaultStatus: \"published\",\n          openLibraryMenu: true,\n        });\n      } catch (error) {\n        throw error;\n      } finally {\n        if (window.location.hash.includes(URL_HASH_KEYS.addLibrary)) {\n          const hash = new URLSearchParams(window.location.hash.slice(1));\n          hash.delete(URL_HASH_KEYS.addLibrary);\n          window.history.replaceState({}, APP_NAME, `#${hash.toString()}`);\n        } else if (window.location.search.includes(URL_QUERY_KEYS.addLibrary)) {\n          const query = new URLSearchParams(window.location.search);\n          query.delete(URL_QUERY_KEYS.addLibrary);\n          window.history.replaceState({}, APP_NAME, `?${query.toString()}`);\n        }\n      }\n    };\n    const onHashChange = (event: HashChangeEvent) => {\n      event.preventDefault();\n      const libraryUrlTokens = parseLibraryTokensFromUrl();\n      if (libraryUrlTokens) {\n        event.stopImmediatePropagation();\n        // If hash changed and it contains library url, import it and replace\n        // the url to its previous state (important in case of collaboration\n        // and similar).\n        // Using history API won't trigger another hashchange.\n        window.history.replaceState({}, \"\", event.oldURL);\n\n        importLibraryFromURL(libraryUrlTokens);\n      }\n    };\n\n    // -------------------------------------------------------------------------\n    // ------ init load --------------------------------------------------------\n    if (getInitialLibraryRef.current) {\n      excalidrawAPI.updateLibrary({\n        libraryItems: getInitialLibraryRef.current(),\n      });\n    }\n\n    const libraryUrlTokens = parseLibraryTokensFromUrl();\n\n    if (libraryUrlTokens) {\n      importLibraryFromURL(libraryUrlTokens);\n    }\n    // --------------------------------------------------------- init load -----\n\n    window.addEventListener(EVENT.HASHCHANGE, onHashChange);\n    return () => {\n      window.removeEventListener(EVENT.HASHCHANGE, onHashChange);\n    };\n  }, [excalidrawAPI]);\n};\n"],"mappings":"+yBAAA,OAASA,mBAAmB,KAAQ,QAAQ,CAO5C,OAASC,mBAAmB,KAAQ,WAAW,CAE/C,OAASC,IAAI,KAAQ,OAAO,CAC5B,OAASC,UAAU,KAAQ,UAAU,CAErC,OAASC,oBAAoB,KAAQ,mBAAmB,CACxD,OAASC,UAAU,KAAQ,WAAW,CACtC,OAASC,CAAC,KAAQ,SAAS,CAC3B,OAASC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACzC,OACEC,aAAa,CACbC,cAAc,CACdC,QAAQ,CACRC,KAAK,CACLC,eAAe,CACfC,mBAAmB,KACd,cAAc,CACrB,OAASC,oBAAoB,KAAQ,4BAA4B,CAEjE,MAAO,IAAM,CAAAC,gBAAgB,CAAGd,IAAI,CAIjC,CAAEe,MAAM,CAAE,QAAQ,CAAEC,aAAa,CAAE,IAAI,CAAEC,YAAY,CAAE,EAAG,CAAC,CAAC,CAE/D,GAAM,CAAAC,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAID,YAA0B,QACnD,CAAAE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,YAAY,CAAC,CAAC,GAE1C;AACA;AACA,GACA,GAAM,CAAAK,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAChBC,oBAAkC,CAClCC,iBAA8B,CAC3B,CACH,MAAO,CAACD,oBAAoB,CAACE,IAAI,CAAC,SAACC,WAAW,CAAK,CACjD,GAAIA,WAAW,CAACC,QAAQ,CAACC,MAAM,GAAKJ,iBAAiB,CAACG,QAAQ,CAACC,MAAM,CAAE,CACrE,MAAO,MAAK,CACd,CAEA;AACA;AACA,MAAO,CAAAF,WAAW,CAACC,QAAQ,CAACE,KAAK,CAAC,SAACC,qBAAqB,CAAEC,GAAG,CAAK,CAChE,MACE,CAAAD,qBAAqB,CAACE,EAAE,GAAKR,iBAAiB,CAACG,QAAQ,CAACI,GAAG,CAAC,CAACC,EAAE,EAC/DF,qBAAqB,CAACG,YAAY,GAChCT,iBAAiB,CAACG,QAAQ,CAACI,GAAG,CAAC,CAACE,YAAY,CAElD,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAED;AACA,oBACA,MAAO,IAAM,CAAAC,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAC5BC,UAAwB,CACxBC,UAAwB,CACP,CACjB,GAAM,CAAAC,QAAQ,CAAG,EAAE,CAAC,IAAAC,SAAA,CAAAC,0BAAA,CACDH,UAAU,EAAAI,KAAA,KAA7B,IAAAF,SAAA,CAAAG,CAAA,KAAAD,KAAA,CAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,EAA+B,IAApB,CAAAC,IAAI,CAAAJ,KAAA,CAAAK,KAAA,CACb,GAAIvB,YAAY,CAACa,UAAU,CAAES,IAAI,CAAC,CAAE,CAClCP,QAAQ,CAACS,IAAI,CAACF,IAAI,CAAC,CACrB,CACF,CAAC,OAAAG,GAAA,EAAAT,SAAA,CAAAU,CAAA,CAAAD,GAAA,WAAAT,SAAA,CAAAW,CAAA,IAED,SAAAC,MAAA,CAAWb,QAAQ,CAAAc,kBAAA,CAAKhB,UAAU,GACpC,CAAC,CAAC,GAEI,CAAAiB,OAAO,cAAAC,YAAA,CASX,SAAAD,QAAYE,GAAQ,CAAE,KAAAC,KAAA,MAAAC,eAAA,MAAAJ,OAAA,EARtB,+BACQK,gBAAgB,CAAiB,EAAE,CAC3C;AACF,mCADE,KAEQzC,aAAa,CAAG,KAAK,MAErBsC,GAAG,aAMHI,WAAW,CAA4B,EAAE,MAEzCC,iBAAiB,CAAG,UAAyC,CACnE,MAAO,CAAAJ,KAAI,CAACG,WAAW,CAACH,KAAI,CAACG,WAAW,CAAC9B,MAAM,CAAG,CAAC,CAAC,CACtD,CAAC,MAEOgC,eAAe,CAAG,UAAM,CAC9B,GAAIL,KAAI,CAACG,WAAW,CAAC9B,MAAM,CAAG,CAAC,CAAE,CAC/B3B,UAAU,CAAC4D,GAAG,CAAC/C,gBAAgB,CAAE,CAC/BC,MAAM,CAAE,SAAS,CACjBE,YAAY,CAAEsC,KAAI,CAACE,gBAAgB,CACnCzC,aAAa,CAAEuC,KAAI,CAACvC,aACtB,CAAC,CAAC,CACJ,CAAC,IAAM,CACLuC,KAAI,CAACvC,aAAa,CAAG,IAAI,CACzBf,UAAU,CAAC4D,GAAG,CAAC/C,gBAAgB,CAAE,CAC/BC,MAAM,CAAE,QAAQ,CAChBE,YAAY,CAAEsC,KAAI,CAACE,gBAAgB,CACnCzC,aAAa,CAAEuC,KAAI,CAACvC,aACtB,CAAC,CAAC,CACF,GAAI,KAAA8C,qBAAA,CAAAC,eAAA,CACF,CAAAD,qBAAA,EAAAC,eAAA,CAAAR,KAAI,CAACD,GAAG,CAACU,KAAK,EAACC,eAAe,UAAAH,qBAAA,iBAA9BA,qBAAA,CAAAI,IAAA,CAAAH,eAAA,CACE7C,iBAAiB,CAACqC,KAAI,CAACE,gBAAgB,CAAC,CACzC,CACH,CAAE,MAAOU,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACtB,CACF,CACF,CAAC,CAED,+CACAE,OAAO,CAAG,UAAM,CACdd,KAAI,CAACvC,aAAa,CAAG,KAAK,CAC1BuC,KAAI,CAACG,WAAW,CAAG,EAAE,CACrBH,KAAI,CAACE,gBAAgB,CAAG,EAAE,CAC1BxD,UAAU,CAAC4D,GAAG,CAAChD,oBAAoB,CAAE,GAAI,CAAAyD,GAAG,EAAE,CAAC,CAC/C;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,MAEDC,YAAY,CAAG,UAAM,CACnB,MAAO,CAAAhB,KAAI,CAACiB,UAAU,CAAC,EAAE,CAAC,CAC5B,CAAC,CAED;AACF;AACA,KAFE,KAGAC,gBAAgB,CAAG,UAA6B,CAC9C,MAAO,IAAI,CAAAC,OAAO,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAC,QAAOC,OAAO,MAAA/D,YAAA,QAAA4D,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAED,CAAA9B,KAAI,CAACI,iBAAiB,EAAE,EAClDJ,KAAI,CAACE,gBAAgB,QADjBxC,YAAY,CAAAkE,QAAA,CAAAG,IAAA,CAElB,GAAI/B,KAAI,CAACG,WAAW,CAAC9B,MAAM,CAAG,CAAC,CAAE,CAC/BoD,OAAO,CAACzB,KAAI,CAACkB,gBAAgB,EAAE,CAAC,CAClC,CAAC,IAAM,CACLO,OAAO,CAAC9D,iBAAiB,CAACD,YAAY,CAAC,CAAC,CAC1C,CAACkE,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAI,EAAA,CAAAJ,QAAA,oBAAAA,QAAA,CAAAK,MAAA,UAEMR,OAAO,CAACzB,KAAI,CAACE,gBAAgB,CAAC,2BAAA0B,QAAA,CAAAM,IAAA,MAAAV,OAAA,gBAExC,mBAAAW,EAAA,SAAAf,IAAA,CAAAgB,KAAA,MAAAC,SAAA,QAAC,CACJ,CAAC,CAED;AACA;AACA;AAAA,KACAC,aAAa,6BAAAC,KAAA,CAAAlB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAiB,SAAAC,KAAA,MAAA/E,YAAA,CAAAgF,YAAA,CAAAC,MAAA,CAAAC,WAAA,CAAAC,KAAA,CAAAC,qBAAA,CAAAC,eAAA,CAAAC,mBAAA,CAAAC,aAAA,QAAA3B,mBAAA,GAAAI,IAAA,UAAAwB,UAAAC,SAAA,iBAAAA,SAAA,CAAAtB,IAAA,CAAAsB,SAAA,CAAArB,IAAA,SACdpE,YAAY,CAAA+E,KAAA,CAAZ/E,YAAY,CAAAgF,YAAA,CAAAD,KAAA,CACZE,MAAM,CAANA,MAAM,CAAAD,YAAA,UAAG,KAAK,CAAAA,YAAA,CAAAE,WAAA,CAAAH,KAAA,CACdI,KAAK,CAALA,KAAK,CAAAD,WAAA,UAAG,KAAK,CAAAA,WAAA,CAAAE,qBAAA,CAAAL,KAAA,CACbM,eAAe,CAAfA,eAAe,CAAAD,qBAAA,UAAG,KAAK,CAAAA,qBAAA,CAAAE,mBAAA,CAAAP,KAAA,CACvBQ,aAAa,CAAbA,aAAa,CAAAD,mBAAA,UAAG,aAAa,CAAAA,mBAAA,CAQ7B,GAAID,eAAe,CAAE,CACnB/C,KAAI,CAACD,GAAG,CAACqD,QAAQ,CAAC,CAChBC,WAAW,CAAE,CAAEC,IAAI,CAAElG,eAAe,CAACkG,IAAI,CAAEC,GAAG,CAAElG,mBAAoB,CACtE,CAAC,CAAC,CACJ,CAAC,OAAA8F,SAAA,CAAAlB,MAAA,UAEMjC,KAAI,CAACiB,UAAU,CAAC,UAAM,CAC3B,MAAO,IAAI,CAAAE,OAAO,6BAAAqC,KAAA,CAAAnC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAe,SAAAkC,SAAOhC,OAAO,CAAEiC,MAAM,MAAAC,MAAA,CAAAC,SAAA,QAAAtC,mBAAA,GAAAI,IAAA,UAAAmC,UAAAC,SAAA,iBAAAA,SAAA,CAAAjC,IAAA,CAAAiC,SAAA,CAAAhC,IAAA,SAAAgC,SAAA,CAAAjC,IAAA,GAAAiC,SAAA,CAAAhC,IAAA,SAE7B,OAAO,CAAApE,YAAY,GAAK,UAAU,EACxD,EAAEA,YAAY,WAAY,CAAAqG,IAAI,CAAC,CAC3BrG,YAAY,CAACsC,KAAI,CAACE,gBAAgB,CAAC,CACnCxC,YAAY,QAHViG,MAAM,CAAAG,SAAA,CAAA/B,IAAA,MAOR4B,MAAM,WAAY,CAAAI,IAAI,GAAAD,SAAA,CAAAhC,IAAA,WAAAgC,SAAA,CAAAhC,IAAA,SACN,CAAAvF,mBAAmB,CAACoH,MAAM,CAAEV,aAAa,CAAC,QAA5DW,SAAS,CAAAE,SAAA,CAAA/B,IAAA,CAAA+B,SAAA,CAAAhC,IAAA,kBAET8B,SAAS,CAAGpH,mBAAmB,CAACmH,MAAM,CAAEV,aAAa,CAAC,CAAC,QAEzD,GACE,CAACN,MAAM,EACPqB,MAAM,CAACC,OAAO,CACZpH,CAAC,CAAC,0BAA0B,CAAE,CAC5BqH,SAAS,CAAEN,SAAS,CAACvF,MACvB,CAAC,CAAC,CACH,CACD,CACA,GAAIsE,MAAM,CAAE,CACV;AACA;AACA;AACA3C,KAAI,CAACD,GAAG,CAACoE,cAAc,EAAE,CAC3B,CAEA,GAAItB,KAAK,CAAE,CACTpB,OAAO,CAAC9C,iBAAiB,CAACqB,KAAI,CAACE,gBAAgB,CAAE0D,SAAS,CAAC,CAAC,CAC9D,CAAC,IAAM,CACLnC,OAAO,CAACmC,SAAS,CAAC,CACpB,CACF,CAAC,IAAM,CACLF,MAAM,CAAC,GAAI,CAAA9G,UAAU,EAAE,CAAC,CAC1B,CAACkH,SAAA,CAAAhC,IAAA,kBAAAgC,SAAA,CAAAjC,IAAA,IAAAiC,SAAA,CAAA9B,EAAA,CAAA8B,SAAA,aAEDJ,MAAM,CAAAI,SAAA,CAAA9B,EAAA,CAAO,CAAC,yBAAA8B,SAAA,CAAA5B,IAAA,MAAAuB,QAAA,iBAEjB,mBAAAW,GAAA,CAAAC,GAAA,SAAAb,KAAA,CAAApB,KAAA,MAAAC,SAAA,QAAC,CACJ,CAAC,CAAC,0BAAAc,SAAA,CAAAjB,IAAA,MAAAM,QAAA,GACH,mBAAA8B,GAAA,SAAA/B,KAAA,CAAAH,KAAA,MAAAC,SAAA,aAEDpB,UAAU,CAAG,SAWXvD,YAK8C,CACpB,CAC1B,GAAM,CAAA6G,IAAI,CAAG,GAAI,CAAApD,OAAO,6BAAAqD,KAAA,CAAAnD,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAe,SAAAkD,SAAOhD,OAAO,CAAEiC,MAAM,SAAApC,mBAAA,GAAAI,IAAA,UAAAgD,UAAAC,SAAA,iBAAAA,SAAA,CAAA9C,IAAA,CAAA8C,SAAA,CAAA7C,IAAA,SAAA6C,SAAA,CAAA9C,IAAA,GAAA8C,SAAA,CAAA7C,IAAA,SAEnD,CAAA9B,KAAI,CAACI,iBAAiB,EAAE,QAE9B,GAAI,MAAO,CAAA1C,YAAY,GAAK,UAAU,CAAE,CACtCA,YAAY,CAAGA,YAAY,CAACsC,KAAI,CAACE,gBAAgB,CAAC,CACpD,CAACyE,SAAA,CAAA3C,EAAA,CAEuBrE,iBAAiB,CAAAgH,SAAA,CAAA7C,IAAA,SAAO,CAAApE,YAAY,QAAAiH,SAAA,CAAAC,EAAA,CAAAD,SAAA,CAAA5C,IAAA,CAA5D/B,KAAI,CAACE,gBAAgB,IAAAyE,SAAA,CAAA3C,EAAA,EAAA2C,SAAA,CAAAC,EAAA,EAErBnD,OAAO,CAACzB,KAAI,CAACE,gBAAgB,CAAC,CAACyE,SAAA,CAAA7C,IAAA,kBAAA6C,SAAA,CAAA9C,IAAA,IAAA8C,SAAA,CAAAE,EAAA,CAAAF,SAAA,aAE/BjB,MAAM,CAAAiB,SAAA,CAAAE,EAAA,CAAO,CAAC,yBAAAF,SAAA,CAAAzC,IAAA,MAAAuC,QAAA,iBAEjB,mBAAAK,GAAA,CAAAC,GAAA,SAAAP,KAAA,CAAApC,KAAA,MAAAC,SAAA,QAAC,CACC2C,KAAK,CAAC,SAACpE,KAAK,CAAK,CAChB,GAAIA,KAAK,CAAC0C,IAAI,GAAK,YAAY,CAAE,CAC/BzC,OAAO,CAACoE,IAAI,CAAC,gCAAgC,CAAC,CAC9C,MAAO,CAAAjF,KAAI,CAACE,gBAAgB,CAC9B,CACA,KAAM,CAAAU,KAAK,CACb,CAAC,CAAC,CACDsE,OAAO,CAAC,UAAM,CACblF,KAAI,CAACG,WAAW,CAAGH,KAAI,CAACG,WAAW,CAACgF,MAAM,CAAC,SAACC,KAAK,QAAK,CAAAA,KAAK,GAAKb,IAAI,GAAC,CACrEvE,KAAI,CAACK,eAAe,EAAE,CACxB,CAAC,CAAC,CAEJL,KAAI,CAACG,WAAW,CAACZ,IAAI,CAACgF,IAAI,CAAC,CAC3BvE,KAAI,CAACK,eAAe,EAAE,CAEtB,MAAO,CAAAkE,IAAI,CACb,CAAC,CA1LC,IAAI,CAACxE,GAAG,CAAGA,GAAG,CAChB,CAAC,EA4LH,cAAe,CAAAF,OAAO,CAEtB,MAAO,IAAM,CAAAwF,kCAAkC,CAAG,QAArC,CAAAA,kCAAkCA,CAC7C3H,YAA0B,CACvB,CACH,GAAM,CAAA4H,OAAO,CAAG,EAAE,CAClB,GAAM,CAAAC,aAAa,CAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,IAAI,CAAChI,YAAY,CAACW,MAAM,CAAC,CAAC,CAE/D,GAAM,CAAAsH,WAAgC,CAAG,EAAE,CAE3C,GAAM,CAAAC,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAIC,GAAW,CAAK,CAC1C,GAAM,CAAAC,SAAS,CAAGpI,YAAY,CAC3BqI,KAAK,CAACF,GAAG,CAAGN,aAAa,CAAEM,GAAG,CAAGN,aAAa,CAAGA,aAAa,CAAC,CAC/DS,MAAM,CAAC,SAACC,GAAG,CAAE5G,IAAI,CAAK,CACrB,IAAA6G,qBAAA,CAAmBvJ,oBAAoB,CAAC0C,IAAI,CAACjB,QAAQ,CAAC,CAA9C+H,MAAM,CAAAD,qBAAA,CAANC,MAAM,CACd,MAAO,CAAAX,IAAI,CAACY,GAAG,CAACH,GAAG,CAAEE,MAAM,CAAC,CAC9B,CAAC,CAAE,CAAC,CAAC,CACP,MAAO,CAAAL,SAAS,CAClB,CAAC,CAED,GAAM,CAAAO,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,SAAiB,CAAK,CAC/C,GAAI,CAAAC,KAAK,CAAG,CAAC,CACb,GAAI,CAAAC,OAAO,CAAG,CAAC,CACf,GAAI,CAAAC,QAAQ,CAAG,CAAC,CAAC,IAAAC,UAAA,CAAA1H,0BAAA,CACEtB,YAAY,EAAAiJ,MAAA,KAA/B,IAAAD,UAAA,CAAAxH,CAAA,KAAAyH,MAAA,CAAAD,UAAA,CAAAvH,CAAA,IAAAC,IAAA,EAAiC,IAAtB,CAAAC,IAAI,CAAAsH,MAAA,CAAArH,KAAA,CACb,GAAIiH,KAAK,CAAGhB,aAAa,GAAK,CAAC,CAAE,CAC/BiB,OAAO,CAAG,CAAC,CACb,CACA,GAAIA,OAAO,GAAKF,SAAS,CAAE,CACzB,IAAAM,sBAAA,CAAkBjK,oBAAoB,CAAC0C,IAAI,CAACjB,QAAQ,CAAC,CAA7CyI,KAAK,CAAAD,sBAAA,CAALC,KAAK,CACbJ,QAAQ,CAAGjB,IAAI,CAACY,GAAG,CAACK,QAAQ,CAAEI,KAAK,CAAC,CACtC,CACAN,KAAK,EAAE,CACPC,OAAO,EAAE,CACX,CAAC,OAAAhH,GAAA,EAAAkH,UAAA,CAAAjH,CAAA,CAAAD,GAAA,WAAAkH,UAAA,CAAAhH,CAAA,IACD,MAAO,CAAA+G,QAAQ,CACjB,CAAC,CAED,GAAI,CAAAK,UAAU,CAAG,CAAC,CAClB,GAAI,CAAAC,UAAU,CAAG,CAAC,CAElB,GAAI,CAAAC,gBAAgB,CAAG,CAAC,CACxB,GAAI,CAAAC,eAAe,CAAG,CAAC,CAEvB,GAAI,CAAAV,KAAK,CAAG,CAAC,CACb,GAAI,CAAAW,GAAG,CAAG,CAAC,CACX,GAAI,CAAArB,GAAG,CAAG,CAAC,CAAC,IAAAsB,UAAA,CAAAnI,0BAAA,CAEOtB,YAAY,EAAA0J,MAAA,SAAAC,KAAA,UAAAA,MAAA,CAAE,IAAtB,CAAAhI,IAAI,CAAA+H,MAAA,CAAA9H,KAAA,CACb,GAAIiH,KAAK,EAAIA,KAAK,CAAGhB,aAAa,GAAK,CAAC,CAAE,CACxCwB,UAAU,EAAIC,gBAAgB,CAAG1B,OAAO,CACxCwB,UAAU,CAAG,CAAC,CACdI,GAAG,CAAG,CAAC,CACPrB,GAAG,EAAE,CACP,CAEA,GAAIqB,GAAG,GAAK,CAAC,CAAE,CACbF,gBAAgB,CAAGpB,kBAAkB,CAACC,GAAG,CAAC,CAC5C,CACAoB,eAAe,CAAGZ,iBAAiB,CAACa,GAAG,CAAC,CAExC,IAAAI,sBAAA,CAAsC3K,oBAAoB,CAAC0C,IAAI,CAACjB,QAAQ,CAAC,CAAjEmJ,IAAI,CAAAD,sBAAA,CAAJC,IAAI,CAAEC,IAAI,CAAAF,sBAAA,CAAJE,IAAI,CAAEX,KAAK,CAAAS,sBAAA,CAALT,KAAK,CAAEV,MAAM,CAAAmB,sBAAA,CAANnB,MAAM,CACjC,GAAM,CAAAsB,aAAa,CAAG,CAACR,eAAe,CAAGJ,KAAK,EAAI,CAAC,CACnD,GAAM,CAAAa,aAAa,CAAG,CAACV,gBAAgB,CAAGb,MAAM,EAAI,CAAC,CACrDR,WAAW,CAACpG,IAAI,CAAA6C,KAAA,CAAhBuD,WAAW,CAAA/F,kBAAA,CAENP,IAAI,CAACjB,QAAQ,CAACuJ,GAAG,CAAC,SAACC,OAAO,SAAAC,aAAA,CAAAA,aAAA,IACxBD,OAAO,MACVE,CAAC,CACCF,OAAO,CAACE,CAAC,CACT;AACAhB,UAAU,CACV;AACAW,aAAa,CACb;AACAF,IAAI,CACNQ,CAAC,CACCH,OAAO,CAACG,CAAC,CACT;AACAhB,UAAU,CACV;AACAW,aAAa,CACb;AACAF,IAAI,IACN,CAAC,EACJ,CACDV,UAAU,EAAIG,eAAe,CAAG3B,OAAO,CACvCiB,KAAK,EAAE,CACPW,GAAG,EAAE,CACP,CAAC,CAzCD,IAAAC,UAAA,CAAAjI,CAAA,KAAAkI,MAAA,CAAAD,UAAA,CAAAhI,CAAA,IAAAC,IAAA,GAAAiI,KAAA,IAyCC,OAAA7H,GAAA,EAAA2H,UAAA,CAAA1H,CAAA,CAAAD,GAAA,WAAA2H,UAAA,CAAAzH,CAAA,IAED,MAAO,CAAAiG,WAAW,CACpB,CAAC,CAED,MAAO,IAAM,CAAAqC,yBAAyB,CAAG,QAA5B,CAAAA,yBAAyBA,CAAA,CAAS,CAC7C,GAAM,CAAAC,UAAU,CACd;AACA,GAAI,CAAAC,eAAe,CAAClE,MAAM,CAACmE,QAAQ,CAACC,IAAI,CAACrC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACsC,GAAG,CACpDrL,aAAa,CAACsL,UAAU,CACzB,EACD;AACA,GAAI,CAAAJ,eAAe,CAAClE,MAAM,CAACmE,QAAQ,CAACI,MAAM,CAAC,CAACF,GAAG,CAACpL,cAAc,CAACqL,UAAU,CAAC,CAC5E,GAAM,CAAAE,OAAO,CAAGP,UAAU,CACtB,GAAI,CAAAC,eAAe,CAAClE,MAAM,CAACmE,QAAQ,CAACC,IAAI,CAACrC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACsC,GAAG,CAAC,OAAO,CAAC,CAC/D,IAAI,CAER,MAAO,CAAAJ,UAAU,CAAG,CAAEA,UAAU,CAAVA,UAAU,CAAEO,OAAO,CAAPA,OAAQ,CAAC,CAAG,IAAI,CACpD,CAAC,CAED,MAAO,IAAM,CAAAC,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAAC,KAAA,CAMvB,IALJ,CAAAC,aAAa,CAAAD,KAAA,CAAbC,aAAa,CACbC,sBAAsB,CAAAF,KAAA,CAAtBE,sBAAsB,CAKtB,GAAM,CAAAC,oBAAoB,CAAG9L,MAAM,CAAC6L,sBAAsB,CAAC,CAE3D9L,SAAS,CAAC,UAAM,CACd,GAAI,CAAC6L,aAAa,CAAE,CAClB,OACF,CAEA,GAAM,CAAAG,oBAAoB,6BAAAC,KAAA,CAAA1H,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAyH,SAAAC,KAAA,MAAAhB,UAAA,CAAAO,OAAA,CAAAU,cAAA,CAAAC,YAAA,CAAAf,IAAA,CAAAgB,KAAA,QAAA9H,mBAAA,GAAAI,IAAA,UAAA2H,UAAAC,SAAA,iBAAAA,SAAA,CAAAzH,IAAA,CAAAyH,SAAA,CAAAxH,IAAA,SAC3BmG,UAAU,CAAAgB,KAAA,CAAVhB,UAAU,CACVO,OAAO,CAAAS,KAAA,CAAPT,OAAO,CAKDU,cAAc,CAAG,GAAI,CAAA/H,OAAO,6BAAAoI,KAAA,CAAAlI,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAO,SAAAiI,SAAO/H,OAAO,CAAEiC,MAAM,MAAA+F,OAAA,CAAAC,IAAA,QAAApI,mBAAA,GAAAI,IAAA,UAAAiI,UAAAC,SAAA,iBAAAA,SAAA,CAAA/H,IAAA,CAAA+H,SAAA,CAAA9H,IAAA,SAAA8H,SAAA,CAAA/H,IAAA,GAAA+H,SAAA,CAAA9H,IAAA,SAErC,CAAA+H,KAAK,CAACC,kBAAkB,CAAC7B,UAAU,CAAC,CAAC,QAArDwB,OAAO,CAAAG,SAAA,CAAA7H,IAAA,CAAA6H,SAAA,CAAA9H,IAAA,SACM,CAAA2H,OAAO,CAACC,IAAI,EAAE,QAA3BA,IAAI,CAAAE,SAAA,CAAA7H,IAAA,CACVN,OAAO,CAACiI,IAAI,CAAC,CAACE,SAAA,CAAA9H,IAAA,kBAAA8H,SAAA,CAAA/H,IAAA,IAAA+H,SAAA,CAAA5H,EAAA,CAAA4H,SAAA,aAEdlG,MAAM,CAAAkG,SAAA,CAAA5H,EAAA,CAAO,CAAC,yBAAA4H,SAAA,CAAA1H,IAAA,MAAAsH,QAAA,iBAEjB,mBAAAO,GAAA,CAAAC,GAAA,SAAAT,KAAA,CAAAnH,KAAA,MAAAC,SAAA,QAAC,CAEI8G,YAAY,CAAGX,OAAO,GAAKG,aAAa,CAAClK,EAAE,CAEjD;AACA;AAAA6K,SAAA,CAAAxH,IAAA,SACO,CAAAqH,YAAY,EAAIc,QAAQ,CAACC,MAAM,CAClC,GAAI,CAAA/I,OAAO,CAAO,SAACM,OAAO,CAAK,CAC7BuC,MAAM,CAACmG,gBAAgB,CAAC,OAAO,CAAE,iBAAM,CAAA1I,OAAO,EAAE,GAAE,CAChD2I,IAAI,CAAE,IACR,CAAC,CAAC,CACJ,CAAC,CAAC,CACF,IAAI,QAAAd,SAAA,CAAAzH,IAAA,GAAAyH,SAAA,CAAAxH,IAAA,SAGA,CAAA6G,aAAa,CAACrG,aAAa,CAAC,CAChC5E,YAAY,CAAEwL,cAAc,CAC5BvG,MAAM,CAAEwG,YAAY,CACpBtG,KAAK,CAAE,IAAI,CACXI,aAAa,CAAE,WAAW,CAC1BF,eAAe,CAAE,IACnB,CAAC,CAAC,QAAAuG,SAAA,CAAAxH,IAAA,kBAAAwH,SAAA,CAAAzH,IAAA,IAAAyH,SAAA,CAAAtH,EAAA,CAAAsH,SAAA,mBAAAA,SAAA,CAAAtH,EAAA,SAAAsH,SAAA,CAAAzH,IAAA,IAIF,GAAImC,MAAM,CAACmE,QAAQ,CAACC,IAAI,CAACiC,QAAQ,CAACrN,aAAa,CAACsL,UAAU,CAAC,CAAE,CACrDF,IAAI,CAAG,GAAI,CAAAF,eAAe,CAAClE,MAAM,CAACmE,QAAQ,CAACC,IAAI,CAACrC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC/DqC,IAAI,CAACkC,MAAM,CAACtN,aAAa,CAACsL,UAAU,CAAC,CACrCtE,MAAM,CAACuG,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,CAAEtN,QAAQ,KAAAyC,MAAA,CAAMyI,IAAI,CAACqC,QAAQ,EAAE,EAAG,CAClE,CAAC,IAAM,IAAIzG,MAAM,CAACmE,QAAQ,CAACI,MAAM,CAAC8B,QAAQ,CAACpN,cAAc,CAACqL,UAAU,CAAC,CAAE,CAC/Dc,KAAK,CAAG,GAAI,CAAAlB,eAAe,CAAClE,MAAM,CAACmE,QAAQ,CAACI,MAAM,CAAC,CACzDa,KAAK,CAACkB,MAAM,CAACrN,cAAc,CAACqL,UAAU,CAAC,CACvCtE,MAAM,CAACuG,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,CAAEtN,QAAQ,KAAAyC,MAAA,CAAMyJ,KAAK,CAACqB,QAAQ,EAAE,EAAG,CACnE,CAAC,OAAAnB,SAAA,CAAAoB,MAAA,8BAAApB,SAAA,CAAApH,IAAA,MAAA8G,QAAA,uBAEJ,kBAlDK,CAAAF,oBAAoBA,CAAA6B,GAAA,SAAA5B,KAAA,CAAA3G,KAAA,MAAAC,SAAA,OAkDzB,CACD,GAAM,CAAAuI,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,KAAsB,CAAK,CAC/CA,KAAK,CAACC,cAAc,EAAE,CACtB,GAAM,CAAAC,gBAAgB,CAAG/C,yBAAyB,EAAE,CACpD,GAAI+C,gBAAgB,CAAE,CACpBF,KAAK,CAACG,wBAAwB,EAAE,CAChC;AACA;AACA;AACA;AACAhH,MAAM,CAACuG,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,CAAE,EAAE,CAAEK,KAAK,CAACI,MAAM,CAAC,CAEjDnC,oBAAoB,CAACiC,gBAAgB,CAAC,CACxC,CACF,CAAC,CAED;AACA;AACA,GAAIlC,oBAAoB,CAACqC,OAAO,CAAE,CAChCvC,aAAa,CAACrG,aAAa,CAAC,CAC1B5E,YAAY,CAAEmL,oBAAoB,CAACqC,OAAO,EAC5C,CAAC,CAAC,CACJ,CAEA,GAAM,CAAAH,gBAAgB,CAAG/C,yBAAyB,EAAE,CAEpD,GAAI+C,gBAAgB,CAAE,CACpBjC,oBAAoB,CAACiC,gBAAgB,CAAC,CACxC,CACA;AAEA/G,MAAM,CAACmG,gBAAgB,CAAChN,KAAK,CAACgO,UAAU,CAAEP,YAAY,CAAC,CACvD,MAAO,WAAM,CACX5G,MAAM,CAACoH,mBAAmB,CAACjO,KAAK,CAACgO,UAAU,CAAEP,YAAY,CAAC,CAC5D,CAAC,CACH,CAAC,CAAE,CAACjC,aAAa,CAAC,CAAC,CACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}