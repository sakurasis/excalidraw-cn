{"ast":null,"code":"/* crc32.js (C) 2014-2015 SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\nvar CRC32;\n(function (factory) {\n  if (typeof DO_NOT_EXPORT_CRC === 'undefined') {\n    if ('object' === typeof exports) {\n      factory(exports);\n    } else if ('function' === typeof define && define.amd) {\n      define(function () {\n        var module = {};\n        factory(module);\n        return module;\n      });\n    } else {\n      factory(CRC32 = {});\n    }\n  } else {\n    factory(CRC32 = {});\n  }\n})(function (CRC32) {\n  CRC32.version = '0.3.0';\n  /* see perf/crc32table.js */\n  function signed_crc_table() {\n    var c = 0,\n      table = new Array(256);\n    for (var n = 0; n != 256; ++n) {\n      c = n;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      table[n] = c;\n    }\n    return typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n  }\n  var table = signed_crc_table();\n  /* charCodeAt is the best approach for binary strings */\n  var use_buffer = typeof Buffer !== 'undefined';\n  function crc32_bstr(bstr) {\n    if (bstr.length > 32768) if (use_buffer) return crc32_buf_8(new Buffer(bstr));\n    var crc = -1,\n      L = bstr.length - 1;\n    for (var i = 0; i < L;) {\n      crc = table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ crc >>> 8;\n      crc = table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ crc >>> 8;\n    }\n    if (i === L) crc = crc >>> 8 ^ table[(crc ^ bstr.charCodeAt(i)) & 0xFF];\n    return crc ^ -1;\n  }\n  function crc32_buf(buf) {\n    if (buf.length > 10000) return crc32_buf_8(buf);\n    for (var crc = -1, i = 0, L = buf.length - 3; i < L;) {\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n    }\n    while (i < L + 3) crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n    return crc ^ -1;\n  }\n  function crc32_buf_8(buf) {\n    for (var crc = -1, i = 0, L = buf.length - 7; i < L;) {\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n      crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n    }\n    while (i < L + 7) crc = crc >>> 8 ^ table[(crc ^ buf[i++]) & 0xFF];\n    return crc ^ -1;\n  }\n\n  /* much much faster to intertwine utf8 and crc */\n  function crc32_str(str) {\n    for (var crc = -1, i = 0, L = str.length, c, d; i < L;) {\n      c = str.charCodeAt(i++);\n      if (c < 0x80) {\n        crc = crc >>> 8 ^ table[(crc ^ c) & 0xFF];\n      } else if (c < 0x800) {\n        crc = crc >>> 8 ^ table[(crc ^ (192 | c >> 6 & 31)) & 0xFF];\n        crc = crc >>> 8 ^ table[(crc ^ (128 | c & 63)) & 0xFF];\n      } else if (c >= 0xD800 && c < 0xE000) {\n        c = (c & 1023) + 64;\n        d = str.charCodeAt(i++) & 1023;\n        crc = crc >>> 8 ^ table[(crc ^ (240 | c >> 8 & 7)) & 0xFF];\n        crc = crc >>> 8 ^ table[(crc ^ (128 | c >> 2 & 63)) & 0xFF];\n        crc = crc >>> 8 ^ table[(crc ^ (128 | d >> 6 & 15 | c & 3)) & 0xFF];\n        crc = crc >>> 8 ^ table[(crc ^ (128 | d & 63)) & 0xFF];\n      } else {\n        crc = crc >>> 8 ^ table[(crc ^ (224 | c >> 12 & 15)) & 0xFF];\n        crc = crc >>> 8 ^ table[(crc ^ (128 | c >> 6 & 63)) & 0xFF];\n        crc = crc >>> 8 ^ table[(crc ^ (128 | c & 63)) & 0xFF];\n      }\n    }\n    return crc ^ -1;\n  }\n  CRC32.table = table;\n  CRC32.bstr = crc32_bstr;\n  CRC32.buf = crc32_buf;\n  CRC32.str = crc32_str;\n});","map":{"version":3,"names":["CRC32","factory","DO_NOT_EXPORT_CRC","exports","define","amd","module","version","signed_crc_table","c","table","Array","n","Int32Array","use_buffer","Buffer","crc32_bstr","bstr","length","crc32_buf_8","crc","L","i","charCodeAt","crc32_buf","buf","crc32_str","str","d"],"sources":["D:/project/excalidraw-cn/node_modules/crc-32/crc32.js"],"sourcesContent":["/* crc32.js (C) 2014-2015 SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\nvar CRC32;\n(function (factory) {\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t  factory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n}(function(CRC32) {\nCRC32.version = '0.3.0';\n/* see perf/crc32table.js */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar table = signed_crc_table();\n/* charCodeAt is the best approach for binary strings */\nvar use_buffer = typeof Buffer !== 'undefined';\nfunction crc32_bstr(bstr) {\n\tif(bstr.length > 32768) if(use_buffer) return crc32_buf_8(new Buffer(bstr));\n\tvar crc = -1, L = bstr.length - 1;\n\tfor(var i = 0; i < L;) {\n\t\tcrc =  table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ (crc >>> 8);\n\t\tcrc =  table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ (crc >>> 8);\n\t}\n\tif(i === L) crc = (crc >>> 8) ^ table[(crc ^ bstr.charCodeAt(i)) & 0xFF];\n\treturn crc ^ -1;\n}\n\nfunction crc32_buf(buf) {\n\tif(buf.length > 10000) return crc32_buf_8(buf);\n\tfor(var crc = -1, i = 0, L=buf.length-3; i < L;) {\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t}\n\twhile(i < L+3) crc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\treturn crc ^ -1;\n}\n\nfunction crc32_buf_8(buf) {\n\tfor(var crc = -1, i = 0, L=buf.length-7; i < L;) {\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t}\n\twhile(i < L+7) crc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\treturn crc ^ -1;\n}\n\n/* much much faster to intertwine utf8 and crc */\nfunction crc32_str(str) {\n\tfor(var crc = -1, i = 0, L=str.length, c, d; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ c) & 0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (192|((c>>6)&31))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(c&63))) & 0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++) & 1023;\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (240|((c>>8)&7))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((c>>2)&63))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((d>>6)&15)|(c&3))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(d&63))) & 0xFF];\n\t\t} else {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (224|((c>>12)&15))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((c>>6)&63))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(c&63))) & 0xFF];\n\t\t}\n\t}\n\treturn crc ^ -1;\n}\nCRC32.table = table;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}