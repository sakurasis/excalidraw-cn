{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */function () {\n  /**\n   * @inheritDoc\n   */\n  function LinkedErrors(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    /**\n     * @inheritDoc\n     */\n    this.name = LinkedErrors.id;\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n  /**\n   * @inheritDoc\n   */\n  LinkedErrors.prototype.setupOnce = function () {\n    addGlobalEventProcessor(function (event, hint) {\n      var self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        return self._handler(event, hint);\n      }\n      return event;\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  LinkedErrors.prototype._handler = function (event, hint) {\n    if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n      return event;\n    }\n    var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n    event.exception.values = __spread(linkedErrors, event.exception.values);\n    return event;\n  };\n  /**\n   * @inheritDoc\n   */\n  LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n    if (stack === void 0) {\n      stack = [];\n    }\n    if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n      return stack;\n    }\n    var stacktrace = computeStackTrace(error[key]);\n    var exception = exceptionFromStacktrace(stacktrace);\n    return this._walkErrorTree(error[key], key, __spread([exception], stack));\n  };\n  /**\n   * @inheritDoc\n   */\n  LinkedErrors.id = 'LinkedErrors';\n  return LinkedErrors;\n}();\nexport { LinkedErrors };","map":{"version":3,"names":["addGlobalEventProcessor","getCurrentHub","isInstanceOf","exceptionFromStacktrace","computeStackTrace","DEFAULT_KEY","DEFAULT_LIMIT","LinkedErrors","options","name","id","_key","key","_limit","limit","prototype","setupOnce","event","hint","self","getIntegration","_handler","exception","values","originalException","Error","linkedErrors","_walkErrorTree","__spread","error","stack","length","stacktrace"],"sources":["D:\\project\\excalidraw-cn\\node_modules\\@sentry\\browser\\src\\integrations\\linkederrors.ts"],"sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration } from '@sentry/types';\nimport { isInstanceOf } from '@sentry/utils';\n\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        return self._handler(event, hint);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _handler(event: Event, hint?: EventHint): Event | null {\n    if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n      return event;\n    }\n    const linkedErrors = this._walkErrorTree(hint.originalException as ExtendedError, this._key);\n    event.exception.values = [...linkedErrors, ...event.exception.values];\n    return event;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _walkErrorTree(error: ExtendedError, key: string, stack: Exception[] = []): Exception[] {\n    if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n      return stack;\n    }\n    const stacktrace = computeStackTrace(error[key]);\n    const exception = exceptionFromStacktrace(stacktrace);\n    return this._walkErrorTree(error[key], key, [exception, ...stack]);\n  }\n}\n"],"mappings":";AAAA,SAASA,uBAAuB,EAAEC,aAAa,QAAQ,cAAc;AAErE,SAASC,YAAY,QAAQ,eAAe;AAE5C,SAASC,uBAAuB,QAAQ,YAAY;AACpD,SAASC,iBAAiB,QAAQ,aAAa;AAE/C,IAAMC,WAAW,GAAG,OAAO;AAC3B,IAAMC,aAAa,GAAG,CAAC;AAEvB;AACA,IAAAC,YAAA;EAqBE;;;EAGA,SAAAA,aAAmBC,OAA8C;IAA9C,IAAAA,OAAA;MAAAA,OAAA,KAA8C;IAAA;IAlBjE;;;IAGgB,KAAAC,IAAI,GAAWF,YAAY,CAACG,EAAE;IAgB5C,IAAI,CAACC,IAAI,GAAGH,OAAO,CAACI,GAAG,IAAIP,WAAW;IACtC,IAAI,CAACQ,MAAM,GAAGL,OAAO,CAACM,KAAK,IAAIR,aAAa;EAC9C;EAEA;;;EAGOC,YAAA,CAAAQ,SAAA,CAAAC,SAAS,GAAhB;IACEhB,uBAAuB,CAAC,UAACiB,KAAY,EAAEC,IAAgB;MACrD,IAAMC,IAAI,GAAGlB,aAAa,EAAE,CAACmB,cAAc,CAACb,YAAY,CAAC;MACzD,IAAIY,IAAI,EAAE;QACR,OAAOA,IAAI,CAACE,QAAQ,CAACJ,KAAK,EAAEC,IAAI,CAAC;;MAEnC,OAAOD,KAAK;IACd,CAAC,CAAC;EACJ,CAAC;EAED;;;EAGQV,YAAA,CAAAQ,SAAA,CAAAM,QAAQ,GAAhB,UAAiBJ,KAAY,EAAEC,IAAgB;IAC7C,IAAI,CAACD,KAAK,CAACK,SAAS,IAAI,CAACL,KAAK,CAACK,SAAS,CAACC,MAAM,IAAI,CAACL,IAAI,IAAI,CAAChB,YAAY,CAACgB,IAAI,CAACM,iBAAiB,EAAEC,KAAK,CAAC,EAAE;MACxG,OAAOR,KAAK;;IAEd,IAAMS,YAAY,GAAG,IAAI,CAACC,cAAc,CAACT,IAAI,CAACM,iBAAkC,EAAE,IAAI,CAACb,IAAI,CAAC;IAC5FM,KAAK,CAACK,SAAS,CAACC,MAAM,GAAAK,QAAA,CAAOF,YAAY,EAAKT,KAAK,CAACK,SAAS,CAACC,MAAM,CAAC;IACrE,OAAON,KAAK;EACd,CAAC;EAED;;;EAGQV,YAAA,CAAAQ,SAAA,CAAAY,cAAc,GAAtB,UAAuBE,KAAoB,EAAEjB,GAAW,EAAEkB,KAAuB;IAAvB,IAAAA,KAAA;MAAAA,KAAA,KAAuB;IAAA;IAC/E,IAAI,CAAC5B,YAAY,CAAC2B,KAAK,CAACjB,GAAG,CAAC,EAAEa,KAAK,CAAC,IAAIK,KAAK,CAACC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAClB,MAAM,EAAE;MACvE,OAAOiB,KAAK;;IAEd,IAAME,UAAU,GAAG5B,iBAAiB,CAACyB,KAAK,CAACjB,GAAG,CAAC,CAAC;IAChD,IAAMU,SAAS,GAAGnB,uBAAuB,CAAC6B,UAAU,CAAC;IACrD,OAAO,IAAI,CAACL,cAAc,CAACE,KAAK,CAACjB,GAAG,CAAC,EAAEA,GAAG,EAAAgB,QAAA,EAAGN,SAAS,GAAKQ,KAAK,EAAE;EACpE,CAAC;EA/DD;;;EAGcvB,YAAA,CAAAG,EAAE,GAAW,cAAc;EA6D3C,OAAAH,YAAC;CAAA,EAjED;SAAaA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}