{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\LibraryMenuHeaderContent.tsx\";\nimport { useCallback, useState } from \"react\";\nimport { t } from \"../i18n\";\nimport Trans from \"./Trans\";\nimport { jotaiScope } from \"../jotai\";\nimport { useApp, useExcalidrawSetAppState } from \"./App\";\nimport { saveLibraryAsJSON } from \"../data/json\";\nimport { libraryItemsAtom } from \"../data/library\";\nimport { DotsIcon, ExportIcon, LoadIcon, publishIcon, TrashIcon } from \"./icons\";\nimport { ToolButton } from \"./ToolButton\";\nimport { fileOpen } from \"../data/filesystem\";\nimport { muteFSAbortError } from \"../utils\";\nimport { useAtom } from \"jotai\";\nimport ConfirmDialog from \"./ConfirmDialog\";\nimport PublishLibrary from \"./PublishLibrary\";\nimport { Dialog } from \"./Dialog\";\nimport DropdownMenu from \"./dropdownMenu/DropdownMenu\";\nimport { isLibraryMenuOpenAtom } from \"./LibraryMenu\";\nimport { useUIAppState } from \"../context/ui-appState\";\nimport clsx from \"clsx\";\nimport { useLibraryCache } from \"../hooks/useLibraryItemSvg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getSelectedItems = (libraryItems, selectedItems) => libraryItems.filter(item => selectedItems.includes(item.id));\nexport const LibraryDropdownMenuButton = _ref => {\n  let {\n    setAppState,\n    selectedItems,\n    library,\n    onRemoveFromLibrary,\n    resetLibrary,\n    onSelectItems,\n    appState,\n    className\n  } = _ref;\n  const [libraryItemsData] = useAtom(libraryItemsAtom, jotaiScope);\n  const [isLibraryMenuOpen, setIsLibraryMenuOpen] = useAtom(isLibraryMenuOpenAtom, jotaiScope);\n  const renderRemoveLibAlert = () => {\n    const content = selectedItems.length ? t(\"alerts.removeItemsFromsLibrary\", {\n      count: selectedItems.length\n    }) : t(\"alerts.resetLibrary\");\n    const title = selectedItems.length ? t(\"confirmDialog.removeItemsFromLib\") : t(\"confirmDialog.resetLibrary\");\n    return /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      onConfirm: () => {\n        if (selectedItems.length) {\n          onRemoveFromLibrary();\n        } else {\n          resetLibrary();\n        }\n        setShowRemoveLibAlert(false);\n      },\n      onCancel: () => {\n        setShowRemoveLibAlert(false);\n      },\n      title: title,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  };\n  const [showRemoveLibAlert, setShowRemoveLibAlert] = useState(false);\n  const itemsSelected = !!selectedItems.length;\n  const items = itemsSelected ? libraryItemsData.libraryItems.filter(item => selectedItems.includes(item.id)) : libraryItemsData.libraryItems;\n  const resetLabel = itemsSelected ? t(\"buttons.remove\") : t(\"buttons.resetLibrary\");\n  const [showPublishLibraryDialog, setShowPublishLibraryDialog] = useState(false);\n  const [publishLibSuccess, setPublishLibSuccess] = useState(null);\n  const renderPublishSuccess = useCallback(() => {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      onCloseRequest: () => setPublishLibSuccess(null),\n      title: t(\"publishSuccessDialog.title\"),\n      className: \"publish-library-success\",\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          i18nKey: \"publishSuccessDialog.content\",\n          authorName: publishLibSuccess.authorName,\n          link: el => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: publishLibSuccess === null || publishLibSuccess === void 0 ? void 0 : publishLibSuccess.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolButton, {\n        type: \"button\",\n        title: t(\"buttons.close\"),\n        \"aria-label\": t(\"buttons.close\"),\n        label: t(\"buttons.close\"),\n        onClick: () => setPublishLibSuccess(null),\n        \"data-testid\": \"publish-library-success-close\",\n        className: \"publish-library-success-close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }, [setPublishLibSuccess, publishLibSuccess]);\n  const onPublishLibSuccess = (data, libraryItems) => {\n    setShowPublishLibraryDialog(false);\n    setPublishLibSuccess({\n      url: data.url,\n      authorName: data.authorName\n    });\n    const nextLibItems = libraryItems.slice();\n    nextLibItems.forEach(libItem => {\n      if (selectedItems.includes(libItem.id)) {\n        libItem.status = \"published\";\n      }\n    });\n    library.setLibrary(nextLibItems);\n  };\n  const onLibraryImport = async () => {\n    try {\n      await library.updateLibrary({\n        libraryItems: fileOpen({\n          description: \"Excalidraw library files\"\n          // ToDo: Be over-permissive until https://bugs.webkit.org/show_bug.cgi?id=34442\n          // gets resolved. Else, iOS users cannot open `.excalidraw` files.\n          /*\n            extensions: [\".json\", \".excalidrawlib\"],\n            */\n        }),\n\n        merge: true,\n        openLibraryMenu: true\n      });\n    } catch (error) {\n      if ((error === null || error === void 0 ? void 0 : error.name) === \"AbortError\") {\n        console.warn(error);\n        return;\n      }\n      setAppState({\n        errorMessage: t(\"errors.importLibraryError\")\n      });\n    }\n  };\n  const onLibraryExport = async () => {\n    const libraryItems = itemsSelected ? items : await library.getLatestLibrary();\n    saveLibraryAsJSON(libraryItems).catch(muteFSAbortError).catch(error => {\n      setAppState({\n        errorMessage: error.message\n      });\n    });\n  };\n  const renderLibraryMenu = () => {\n    return /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      open: isLibraryMenuOpen,\n      children: [/*#__PURE__*/_jsxDEV(DropdownMenu.Trigger, {\n        onToggle: () => setIsLibraryMenuOpen(!isLibraryMenuOpen),\n        children: DotsIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu.Content, {\n        onClickOutside: () => setIsLibraryMenuOpen(false),\n        onSelect: () => setIsLibraryMenuOpen(false),\n        className: \"library-menu\",\n        children: [!itemsSelected && /*#__PURE__*/_jsxDEV(DropdownMenu.Item, {\n          onSelect: onLibraryImport,\n          icon: LoadIcon,\n          \"data-testid\": \"lib-dropdown--load\",\n          children: t(\"buttons.load\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), !!items.length && /*#__PURE__*/_jsxDEV(DropdownMenu.Item, {\n          onSelect: onLibraryExport,\n          icon: ExportIcon,\n          \"data-testid\": \"lib-dropdown--export\",\n          children: t(\"buttons.export\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), !!items.length && /*#__PURE__*/_jsxDEV(DropdownMenu.Item, {\n          onSelect: () => setShowRemoveLibAlert(true),\n          icon: TrashIcon,\n          children: resetLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), itemsSelected && /*#__PURE__*/_jsxDEV(DropdownMenu.Item, {\n          icon: publishIcon,\n          onSelect: () => setShowPublishLibraryDialog(true),\n          \"data-testid\": \"lib-dropdown--remove\",\n          children: t(\"buttons.publishLibrary\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(\"library-menu-dropdown-container\", className),\n    children: [renderLibraryMenu(), selectedItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library-actions-counter\",\n      children: selectedItems.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this), showRemoveLibAlert && renderRemoveLibAlert(), showPublishLibraryDialog && /*#__PURE__*/_jsxDEV(PublishLibrary, {\n      onClose: () => setShowPublishLibraryDialog(false),\n      libraryItems: getSelectedItems(libraryItemsData.libraryItems, selectedItems),\n      appState: appState,\n      onSuccess: data => onPublishLibSuccess(data, libraryItemsData.libraryItems),\n      onError: error => window.alert(error),\n      updateItemsInStorage: () => library.setLibrary(libraryItemsData.libraryItems),\n      onRemove: id => onSelectItems(selectedItems.filter(_id => _id !== id))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), publishLibSuccess && renderPublishSuccess()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\nexport const LibraryDropdownMenu = _ref2 => {\n  let {\n    selectedItems,\n    onSelectItems,\n    className\n  } = _ref2;\n  const {\n    library\n  } = useApp();\n  const {\n    clearLibraryCache,\n    deleteItemsFromLibraryCache\n  } = useLibraryCache();\n  const appState = useUIAppState();\n  const setAppState = useExcalidrawSetAppState();\n  const [libraryItemsData] = useAtom(libraryItemsAtom, jotaiScope);\n  const removeFromLibrary = async libraryItems => {\n    const nextItems = libraryItems.filter(item => !selectedItems.includes(item.id));\n    library.setLibrary(nextItems).catch(() => {\n      setAppState({\n        errorMessage: t(\"alerts.errorRemovingFromLibrary\")\n      });\n    });\n    deleteItemsFromLibraryCache(selectedItems);\n    onSelectItems([]);\n  };\n  const resetLibrary = () => {\n    library.resetLibrary();\n    clearLibraryCache();\n  };\n  return /*#__PURE__*/_jsxDEV(LibraryDropdownMenuButton, {\n    appState: appState,\n    setAppState: setAppState,\n    selectedItems: selectedItems,\n    onSelectItems: onSelectItems,\n    library: library,\n    onRemoveFromLibrary: () => removeFromLibrary(libraryItemsData.libraryItems),\n    resetLibrary: resetLibrary,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["useCallback","useState","t","Trans","jotaiScope","useApp","useExcalidrawSetAppState","saveLibraryAsJSON","libraryItemsAtom","DotsIcon","ExportIcon","LoadIcon","publishIcon","TrashIcon","ToolButton","fileOpen","muteFSAbortError","useAtom","ConfirmDialog","PublishLibrary","Dialog","DropdownMenu","isLibraryMenuOpenAtom","useUIAppState","clsx","useLibraryCache","jsxDEV","_jsxDEV","getSelectedItems","libraryItems","selectedItems","filter","item","includes","id","LibraryDropdownMenuButton","_ref","setAppState","library","onRemoveFromLibrary","resetLibrary","onSelectItems","appState","className","libraryItemsData","isLibraryMenuOpen","setIsLibraryMenuOpen","renderRemoveLibAlert","content","length","count","title","onConfirm","setShowRemoveLibAlert","onCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","showRemoveLibAlert","itemsSelected","items","resetLabel","showPublishLibraryDialog","setShowPublishLibraryDialog","publishLibSuccess","setPublishLibSuccess","renderPublishSuccess","onCloseRequest","size","i18nKey","authorName","link","el","href","url","target","rel","type","label","onClick","onPublishLibSuccess","data","nextLibItems","slice","forEach","libItem","status","setLibrary","onLibraryImport","updateLibrary","description","merge","openLibraryMenu","error","name","console","warn","errorMessage","onLibraryExport","getLatestLibrary","catch","message","renderLibraryMenu","open","Trigger","onToggle","Content","onClickOutside","onSelect","Item","icon","onClose","onSuccess","onError","window","alert","updateItemsInStorage","onRemove","_id","LibraryDropdownMenu","_ref2","clearLibraryCache","deleteItemsFromLibraryCache","removeFromLibrary","nextItems"],"sources":["D:/project/excalidraw-cn/src/components/LibraryMenuHeaderContent.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { t } from \"../i18n\";\nimport Trans from \"./Trans\";\nimport { jotaiScope } from \"../jotai\";\nimport { LibraryItem, LibraryItems, UIAppState } from \"../types\";\nimport { useApp, useExcalidrawSetAppState } from \"./App\";\nimport { saveLibraryAsJSON } from \"../data/json\";\nimport Library, { libraryItemsAtom } from \"../data/library\";\nimport {\n  DotsIcon,\n  ExportIcon,\n  LoadIcon,\n  publishIcon,\n  TrashIcon,\n} from \"./icons\";\nimport { ToolButton } from \"./ToolButton\";\nimport { fileOpen } from \"../data/filesystem\";\nimport { muteFSAbortError } from \"../utils\";\nimport { useAtom } from \"jotai\";\nimport ConfirmDialog from \"./ConfirmDialog\";\nimport PublishLibrary from \"./PublishLibrary\";\nimport { Dialog } from \"./Dialog\";\nimport DropdownMenu from \"./dropdownMenu/DropdownMenu\";\nimport { isLibraryMenuOpenAtom } from \"./LibraryMenu\";\nimport { useUIAppState } from \"../context/ui-appState\";\nimport clsx from \"clsx\";\nimport { useLibraryCache } from \"../hooks/useLibraryItemSvg\";\n\nconst getSelectedItems = (\n  libraryItems: LibraryItems,\n  selectedItems: LibraryItem[\"id\"][],\n) => libraryItems.filter((item) => selectedItems.includes(item.id));\n\nexport const LibraryDropdownMenuButton: React.FC<{\n  setAppState: React.Component<any, UIAppState>[\"setState\"];\n  selectedItems: LibraryItem[\"id\"][];\n  library: Library;\n  onRemoveFromLibrary: () => void;\n  resetLibrary: () => void;\n  onSelectItems: (items: LibraryItem[\"id\"][]) => void;\n  appState: UIAppState;\n  className?: string;\n}> = ({\n  setAppState,\n  selectedItems,\n  library,\n  onRemoveFromLibrary,\n  resetLibrary,\n  onSelectItems,\n  appState,\n  className,\n}) => {\n  const [libraryItemsData] = useAtom(libraryItemsAtom, jotaiScope);\n  const [isLibraryMenuOpen, setIsLibraryMenuOpen] = useAtom(\n    isLibraryMenuOpenAtom,\n    jotaiScope,\n  );\n\n  const renderRemoveLibAlert = () => {\n    const content = selectedItems.length\n      ? t(\"alerts.removeItemsFromsLibrary\", { count: selectedItems.length })\n      : t(\"alerts.resetLibrary\");\n    const title = selectedItems.length\n      ? t(\"confirmDialog.removeItemsFromLib\")\n      : t(\"confirmDialog.resetLibrary\");\n    return (\n      <ConfirmDialog\n        onConfirm={() => {\n          if (selectedItems.length) {\n            onRemoveFromLibrary();\n          } else {\n            resetLibrary();\n          }\n          setShowRemoveLibAlert(false);\n        }}\n        onCancel={() => {\n          setShowRemoveLibAlert(false);\n        }}\n        title={title}\n      >\n        <p>{content}</p>\n      </ConfirmDialog>\n    );\n  };\n\n  const [showRemoveLibAlert, setShowRemoveLibAlert] = useState(false);\n\n  const itemsSelected = !!selectedItems.length;\n  const items = itemsSelected\n    ? libraryItemsData.libraryItems.filter((item) =>\n        selectedItems.includes(item.id),\n      )\n    : libraryItemsData.libraryItems;\n  const resetLabel = itemsSelected\n    ? t(\"buttons.remove\")\n    : t(\"buttons.resetLibrary\");\n\n  const [showPublishLibraryDialog, setShowPublishLibraryDialog] =\n    useState(false);\n  const [publishLibSuccess, setPublishLibSuccess] = useState<null | {\n    url: string;\n    authorName: string;\n  }>(null);\n  const renderPublishSuccess = useCallback(() => {\n    return (\n      <Dialog\n        onCloseRequest={() => setPublishLibSuccess(null)}\n        title={t(\"publishSuccessDialog.title\")}\n        className=\"publish-library-success\"\n        size=\"small\"\n      >\n        <p>\n          <Trans\n            i18nKey=\"publishSuccessDialog.content\"\n            authorName={publishLibSuccess!.authorName}\n            link={(el) => (\n              <a\n                href={publishLibSuccess?.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {el}\n              </a>\n            )}\n          />\n        </p>\n        <ToolButton\n          type=\"button\"\n          title={t(\"buttons.close\")}\n          aria-label={t(\"buttons.close\")}\n          label={t(\"buttons.close\")}\n          onClick={() => setPublishLibSuccess(null)}\n          data-testid=\"publish-library-success-close\"\n          className=\"publish-library-success-close\"\n        />\n      </Dialog>\n    );\n  }, [setPublishLibSuccess, publishLibSuccess]);\n\n  const onPublishLibSuccess = (\n    data: { url: string; authorName: string },\n    libraryItems: LibraryItems,\n  ) => {\n    setShowPublishLibraryDialog(false);\n    setPublishLibSuccess({ url: data.url, authorName: data.authorName });\n    const nextLibItems = libraryItems.slice();\n    nextLibItems.forEach((libItem) => {\n      if (selectedItems.includes(libItem.id)) {\n        libItem.status = \"published\";\n      }\n    });\n    library.setLibrary(nextLibItems);\n  };\n\n  const onLibraryImport = async () => {\n    try {\n      await library.updateLibrary({\n        libraryItems: fileOpen({\n          description: \"Excalidraw library files\",\n          // ToDo: Be over-permissive until https://bugs.webkit.org/show_bug.cgi?id=34442\n          // gets resolved. Else, iOS users cannot open `.excalidraw` files.\n          /*\n            extensions: [\".json\", \".excalidrawlib\"],\n            */\n        }),\n        merge: true,\n        openLibraryMenu: true,\n      });\n    } catch (error: any) {\n      if (error?.name === \"AbortError\") {\n        console.warn(error);\n        return;\n      }\n      setAppState({ errorMessage: t(\"errors.importLibraryError\") });\n    }\n  };\n\n  const onLibraryExport = async () => {\n    const libraryItems = itemsSelected\n      ? items\n      : await library.getLatestLibrary();\n    saveLibraryAsJSON(libraryItems)\n      .catch(muteFSAbortError)\n      .catch((error) => {\n        setAppState({ errorMessage: error.message });\n      });\n  };\n\n  const renderLibraryMenu = () => {\n    return (\n      <DropdownMenu open={isLibraryMenuOpen}>\n        <DropdownMenu.Trigger\n          onToggle={() => setIsLibraryMenuOpen(!isLibraryMenuOpen)}\n        >\n          {DotsIcon}\n        </DropdownMenu.Trigger>\n        <DropdownMenu.Content\n          onClickOutside={() => setIsLibraryMenuOpen(false)}\n          onSelect={() => setIsLibraryMenuOpen(false)}\n          className=\"library-menu\"\n        >\n          {!itemsSelected && (\n            <DropdownMenu.Item\n              onSelect={onLibraryImport}\n              icon={LoadIcon}\n              data-testid=\"lib-dropdown--load\"\n            >\n              {t(\"buttons.load\")}\n            </DropdownMenu.Item>\n          )}\n          {!!items.length && (\n            <DropdownMenu.Item\n              onSelect={onLibraryExport}\n              icon={ExportIcon}\n              data-testid=\"lib-dropdown--export\"\n            >\n              {t(\"buttons.export\")}\n            </DropdownMenu.Item>\n          )}\n          {!!items.length && (\n            <DropdownMenu.Item\n              onSelect={() => setShowRemoveLibAlert(true)}\n              icon={TrashIcon}\n            >\n              {resetLabel}\n            </DropdownMenu.Item>\n          )}\n          {itemsSelected && (\n            <DropdownMenu.Item\n              icon={publishIcon}\n              onSelect={() => setShowPublishLibraryDialog(true)}\n              data-testid=\"lib-dropdown--remove\"\n            >\n              {t(\"buttons.publishLibrary\")}\n            </DropdownMenu.Item>\n          )}\n        </DropdownMenu.Content>\n      </DropdownMenu>\n    );\n  };\n\n  return (\n    <div className={clsx(\"library-menu-dropdown-container\", className)}>\n      {renderLibraryMenu()}\n      {selectedItems.length > 0 && (\n        <div className=\"library-actions-counter\">{selectedItems.length}</div>\n      )}\n      {showRemoveLibAlert && renderRemoveLibAlert()}\n      {showPublishLibraryDialog && (\n        <PublishLibrary\n          onClose={() => setShowPublishLibraryDialog(false)}\n          libraryItems={getSelectedItems(\n            libraryItemsData.libraryItems,\n            selectedItems,\n          )}\n          appState={appState}\n          onSuccess={(data) =>\n            onPublishLibSuccess(data, libraryItemsData.libraryItems)\n          }\n          onError={(error) => window.alert(error)}\n          updateItemsInStorage={() =>\n            library.setLibrary(libraryItemsData.libraryItems)\n          }\n          onRemove={(id: string) =>\n            onSelectItems(selectedItems.filter((_id) => _id !== id))\n          }\n        />\n      )}\n      {publishLibSuccess && renderPublishSuccess()}\n    </div>\n  );\n};\n\nexport const LibraryDropdownMenu = ({\n  selectedItems,\n  onSelectItems,\n  className,\n}: {\n  selectedItems: LibraryItem[\"id\"][];\n  onSelectItems: (id: LibraryItem[\"id\"][]) => void;\n  className?: string;\n}) => {\n  const { library } = useApp();\n  const { clearLibraryCache, deleteItemsFromLibraryCache } = useLibraryCache();\n  const appState = useUIAppState();\n  const setAppState = useExcalidrawSetAppState();\n\n  const [libraryItemsData] = useAtom(libraryItemsAtom, jotaiScope);\n\n  const removeFromLibrary = async (libraryItems: LibraryItems) => {\n    const nextItems = libraryItems.filter(\n      (item) => !selectedItems.includes(item.id),\n    );\n    library.setLibrary(nextItems).catch(() => {\n      setAppState({ errorMessage: t(\"alerts.errorRemovingFromLibrary\") });\n    });\n\n    deleteItemsFromLibraryCache(selectedItems);\n\n    onSelectItems([]);\n  };\n\n  const resetLibrary = () => {\n    library.resetLibrary();\n    clearLibraryCache();\n  };\n\n  return (\n    <LibraryDropdownMenuButton\n      appState={appState}\n      setAppState={setAppState}\n      selectedItems={selectedItems}\n      onSelectItems={onSelectItems}\n      library={library}\n      onRemoveFromLibrary={() =>\n        removeFromLibrary(libraryItemsData.libraryItems)\n      }\n      resetLibrary={resetLibrary}\n      className={className}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}