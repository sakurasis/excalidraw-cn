{"ast":null,"code":"import _defineProperty from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{DEFAULT_ELEMENT_BACKGROUND_COLOR_PALETTE,DEFAULT_ELEMENT_BACKGROUND_PICKS,DEFAULT_ELEMENT_STROKE_COLOR_PALETTE,DEFAULT_ELEMENT_STROKE_PICKS}from\"../colors\";import{trackEvent}from\"../analytics\";import{ButtonIconSelect}from\"../components/ButtonIconSelect\";import{ColorPicker}from\"../components/ColorPicker/ColorPicker\";import{IconPicker}from\"../components/IconPicker\";// TODO barnabasmolnar/editor-redesign\n// TextAlignTopIcon, TextAlignBottomIcon,TextAlignMiddleIcon,\n// ArrowHead icons\nimport{ArrowheadArrowIcon,ArrowheadBarIcon,ArrowheadDotIcon,ArrowheadTriangleIcon,ArrowheadNoneIcon,StrokeStyleDashedIcon,StrokeStyleDottedIcon,TextAlignTopIcon,TextAlignBottomIcon,TextAlignMiddleIcon,FillHachureIcon,FillCrossHatchIcon,FillSolidIcon,SloppinessArchitectIcon,SloppinessArtistIcon,SloppinessCartoonistIcon,StrokeWidthBaseIcon,StrokeWidthBoldIcon,StrokeWidthExtraBoldIcon,FontSizeSmallIcon,FontSizeMediumIcon,FontSizeLargeIcon,FontSizeExtraLargeIcon,EdgeSharpIcon,EdgeRoundIcon,FreedrawIcon,FontFamilyNormalIcon,FontFamilyCodeIcon,TextAlignLeftIcon,TextAlignCenterIcon,TextAlignRightIcon,FillZigZagIcon}from\"../components/icons\";import{DEFAULT_FONT_FAMILY,DEFAULT_FONT_SIZE,FONT_FAMILY,ROUNDNESS,VERTICAL_ALIGN}from\"../constants\";import{getNonDeletedElements,isTextElement,redrawTextBoundingBox}from\"../element\";import{mutateElement,newElementWith}from\"../element/mutateElement\";import{getBoundTextElement,getContainerElement,getDefaultLineHeight}from\"../element/textElement\";import{isBoundToContainer,isLinearElement,isUsingAdaptiveRadius}from\"../element/typeChecks\";import{getLanguage,t}from\"../i18n\";import{KEYS}from\"../keys\";import{randomInteger}from\"../random\";import{canChangeRoundness,canHaveArrowheads,getCommonAttributeOfSelectedElements,getSelectedElements,getTargetElements,isSomeElementSelected}from\"../scene\";import{hasStrokeColor}from\"../scene/comparisons\";import{arrayToMap,getShortcutKey}from\"../utils\";import{register}from\"./register\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FONT_SIZE_RELATIVE_INCREASE_STEP=0.1;var changeProperty=function changeProperty(elements,appState,callback){var includeBoundText=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var selectedElementIds=arrayToMap(getSelectedElements(elements,appState,{includeBoundTextElement:includeBoundText}));return elements.map(function(element){var _appState$editingElem;if(selectedElementIds.get(element.id)||element.id===((_appState$editingElem=appState.editingElement)===null||_appState$editingElem===void 0?void 0:_appState$editingElem.id)){return callback(element);}return element;});};var getFormValue=function getFormValue(elements,appState,getAttribute,defaultValue){var _ref,_ref2;var editingElement=appState.editingElement;var nonDeletedElements=getNonDeletedElements(elements);return(_ref=(_ref2=editingElement&&getAttribute(editingElement))!==null&&_ref2!==void 0?_ref2:isSomeElementSelected(nonDeletedElements,appState)?getCommonAttributeOfSelectedElements(nonDeletedElements,appState,getAttribute):defaultValue)!==null&&_ref!==void 0?_ref:defaultValue;};var offsetElementAfterFontResize=function offsetElementAfterFontResize(prevElement,nextElement){if(isBoundToContainer(nextElement)){return nextElement;}return mutateElement(nextElement,{x:prevElement.textAlign===\"left\"?prevElement.x:prevElement.x+(prevElement.width-nextElement.width)/(prevElement.textAlign===\"center\"?2:1),// centering vertically is non-standard, but for Excalidraw I think\n// it makes sense\ny:prevElement.y+(prevElement.height-nextElement.height)/2},false);};var changeFontSize=function changeFontSize(elements,appState,getNewFontSize,fallbackValue){var newFontSizes=new Set();return{elements:changeProperty(elements,appState,function(oldElement){if(isTextElement(oldElement)){var newFontSize=getNewFontSize(oldElement);newFontSizes.add(newFontSize);var newElement=newElementWith(oldElement,{fontSize:newFontSize});redrawTextBoundingBox(newElement,getContainerElement(oldElement));newElement=offsetElementAfterFontResize(oldElement,newElement);return newElement;}return oldElement;},true),appState:_objectSpread(_objectSpread({},appState),{},{// update state only if we've set all select text elements to\n// the same font size\ncurrentItemFontSize:newFontSizes.size===1?_toConsumableArray(newFontSizes)[0]:fallbackValue!==null&&fallbackValue!==void 0?fallbackValue:appState.currentItemFontSize}),commitToHistory:true};};// -----------------------------------------------------------------------------\nexport var actionChangeStrokeColor=register({name:\"changeStrokeColor\",trackEvent:false,perform:function perform(elements,appState,value){return _objectSpread(_objectSpread({},value.currentItemStrokeColor&&{elements:changeProperty(elements,appState,function(el){return hasStrokeColor(el.type)?newElementWith(el,{strokeColor:value.currentItemStrokeColor}):el;},true)}),{},{appState:_objectSpread(_objectSpread({},appState),value),commitToHistory:!!value.currentItemStrokeColor});},PanelComponent:function PanelComponent(_ref3){var elements=_ref3.elements,appState=_ref3.appState,updateData=_ref3.updateData,appProps=_ref3.appProps;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{\"aria-hidden\":\"true\",children:t(\"labels.stroke\")}),/*#__PURE__*/_jsx(ColorPicker,{topPicks:DEFAULT_ELEMENT_STROKE_PICKS,palette:DEFAULT_ELEMENT_STROKE_COLOR_PALETTE,type:\"elementStroke\",label:t(\"labels.stroke\"),color:getFormValue(elements,appState,function(element){return element.strokeColor;},appState.currentItemStrokeColor),onChange:function onChange(color){return updateData({currentItemStrokeColor:color});},elements:elements,appState:appState,updateData:updateData})]});}});export var actionChangeBackgroundColor=register({name:\"changeBackgroundColor\",trackEvent:false,perform:function perform(elements,appState,value){return _objectSpread(_objectSpread({},value.currentItemBackgroundColor&&{elements:changeProperty(elements,appState,function(el){return newElementWith(el,{backgroundColor:value.currentItemBackgroundColor});})}),{},{appState:_objectSpread(_objectSpread({},appState),value),commitToHistory:!!value.currentItemBackgroundColor});},PanelComponent:function PanelComponent(_ref4){var elements=_ref4.elements,appState=_ref4.appState,updateData=_ref4.updateData,appProps=_ref4.appProps;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{\"aria-hidden\":\"true\",children:t(\"labels.background\")}),/*#__PURE__*/_jsx(ColorPicker,{topPicks:DEFAULT_ELEMENT_BACKGROUND_PICKS,palette:DEFAULT_ELEMENT_BACKGROUND_COLOR_PALETTE,type:\"elementBackground\",label:t(\"labels.background\"),color:getFormValue(elements,appState,function(element){return element.backgroundColor;},appState.currentItemBackgroundColor),onChange:function onChange(color){return updateData({currentItemBackgroundColor:color});},elements:elements,appState:appState,updateData:updateData})]});}});export var actionChangeFillStyle=register({name:\"changeFillStyle\",trackEvent:false,perform:function perform(elements,appState,value,app){trackEvent(\"element\",\"changeFillStyle\",\"\".concat(value,\" (\").concat(app.device.isMobile?\"mobile\":\"desktop\",\")\"));return{elements:changeProperty(elements,appState,function(el){return newElementWith(el,{fillStyle:value});}),appState:_objectSpread(_objectSpread({},appState),{},{currentItemFillStyle:value}),commitToHistory:true};},PanelComponent:function PanelComponent(_ref5){var elements=_ref5.elements,appState=_ref5.appState,updateData=_ref5.updateData;var selectedElements=getSelectedElements(elements,appState);var allElementsZigZag=selectedElements.length>0&&selectedElements.every(function(el){return el.fillStyle===\"zigzag\";});return/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:t(\"labels.fill\")}),/*#__PURE__*/_jsx(ButtonIconSelect,{type:\"button\",options:[{value:\"hachure\",text:\"\".concat(allElementsZigZag?t(\"labels.zigzag\"):t(\"labels.hachure\"),\" (\").concat(getShortcutKey(\"Alt-Click\"),\")\"),icon:allElementsZigZag?FillZigZagIcon:FillHachureIcon,active:allElementsZigZag?true:undefined},{value:\"cross-hatch\",text:t(\"labels.crossHatch\"),icon:FillCrossHatchIcon},{value:\"solid\",text:t(\"labels.solid\"),icon:FillSolidIcon}],value:getFormValue(elements,appState,function(element){return element.fillStyle;},appState.currentItemFillStyle),onClick:function onClick(value,event){var nextValue=event.altKey&&value===\"hachure\"&&selectedElements.every(function(el){return el.fillStyle===\"hachure\";})?\"zigzag\":value;updateData(nextValue);}})]});}});export var actionChangeStrokeWidth=register({name:\"changeStrokeWidth\",trackEvent:false,perform:function perform(elements,appState,value){return{elements:changeProperty(elements,appState,function(el){return newElementWith(el,{strokeWidth:value});}),appState:_objectSpread(_objectSpread({},appState),{},{currentItemStrokeWidth:value}),commitToHistory:true};},PanelComponent:function PanelComponent(_ref6){var elements=_ref6.elements,appState=_ref6.appState,updateData=_ref6.updateData;return/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:t(\"labels.strokeWidth\")}),/*#__PURE__*/_jsx(ButtonIconSelect,{group:\"stroke-width\",options:[{value:1,text:t(\"labels.thin\"),icon:StrokeWidthBaseIcon},{value:2,text:t(\"labels.bold\"),icon:StrokeWidthBoldIcon},{value:4,text:t(\"labels.extraBold\"),icon:StrokeWidthExtraBoldIcon}],value:getFormValue(elements,appState,function(element){return element.strokeWidth;},appState.currentItemStrokeWidth),onChange:function onChange(value){return updateData(value);}})]});}});export var actionChangeSloppiness=register({name:\"changeSloppiness\",trackEvent:false,perform:function perform(elements,appState,value){return{elements:changeProperty(elements,appState,function(el){return newElementWith(el,{seed:randomInteger(),roughness:value});}),appState:_objectSpread(_objectSpread({},appState),{},{currentItemRoughness:value}),commitToHistory:true};},PanelComponent:function PanelComponent(_ref7){var elements=_ref7.elements,appState=_ref7.appState,updateData=_ref7.updateData;return/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:t(\"labels.sloppiness\")}),/*#__PURE__*/_jsx(ButtonIconSelect,{group:\"sloppiness\",options:[{value:0,text:t(\"labels.architect\"),icon:SloppinessArchitectIcon},{value:1,text:t(\"labels.artist\"),icon:SloppinessArtistIcon},{value:2,text:t(\"labels.cartoonist\"),icon:SloppinessCartoonistIcon}],value:getFormValue(elements,appState,function(element){return element.roughness;},appState.currentItemRoughness),onChange:function onChange(value){return updateData(value);}})]});}});export var actionChangeStrokeStyle=register({name:\"changeStrokeStyle\",trackEvent:false,perform:function perform(elements,appState,value){return{elements:changeProperty(elements,appState,function(el){return newElementWith(el,{strokeStyle:value});}),appState:_objectSpread(_objectSpread({},appState),{},{currentItemStrokeStyle:value}),commitToHistory:true};},PanelComponent:function PanelComponent(_ref8){var elements=_ref8.elements,appState=_ref8.appState,updateData=_ref8.updateData;return/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:t(\"labels.strokeStyle\")}),/*#__PURE__*/_jsx(ButtonIconSelect,{group:\"strokeStyle\",options:[{value:\"solid\",text:t(\"labels.strokeStyle_solid\"),icon:StrokeWidthBaseIcon},{value:\"dashed\",text:t(\"labels.strokeStyle_dashed\"),icon:StrokeStyleDashedIcon},{value:\"dotted\",text:t(\"labels.strokeStyle_dotted\"),icon:StrokeStyleDottedIcon}],value:getFormValue(elements,appState,function(element){return element.strokeStyle;},appState.currentItemStrokeStyle),onChange:function onChange(value){return updateData(value);}})]});}});export var actionChangeOpacity=register({name:\"changeOpacity\",trackEvent:false,perform:function perform(elements,appState,value){return{elements:changeProperty(elements,appState,function(el){return newElementWith(el,{opacity:value});},true),appState:_objectSpread(_objectSpread({},appState),{},{currentItemOpacity:value}),commitToHistory:true};},PanelComponent:function PanelComponent(_ref9){var _getFormValue;var elements=_ref9.elements,appState=_ref9.appState,updateData=_ref9.updateData;return/*#__PURE__*/_jsxs(\"label\",{className:\"control-label\",children:[t(\"labels.opacity\"),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"100\",step:\"10\",onChange:function onChange(event){return updateData(+event.target.value);},value:(_getFormValue=getFormValue(elements,appState,function(element){return element.opacity;},appState.currentItemOpacity))!==null&&_getFormValue!==void 0?_getFormValue:undefined})]});}});export var actionChangeFontSize=register({name:\"changeFontSize\",trackEvent:false,perform:function perform(elements,appState,value){return changeFontSize(elements,appState,function(){return value;},value);},PanelComponent:function PanelComponent(_ref10){var elements=_ref10.elements,appState=_ref10.appState,updateData=_ref10.updateData;return/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:t(\"labels.fontSize\")}),/*#__PURE__*/_jsx(ButtonIconSelect,{group:\"font-size\",options:[{value:16,text:t(\"labels.small\"),icon:FontSizeSmallIcon,testId:\"fontSize-small\"},{value:20,text:t(\"labels.medium\"),icon:FontSizeMediumIcon,testId:\"fontSize-medium\"},{value:28,text:t(\"labels.large\"),icon:FontSizeLargeIcon,testId:\"fontSize-large\"},{value:36,text:t(\"labels.veryLarge\"),icon:FontSizeExtraLargeIcon,testId:\"fontSize-veryLarge\"}],value:getFormValue(elements,appState,function(element){if(isTextElement(element)){return element.fontSize;}var boundTextElement=getBoundTextElement(element);if(boundTextElement){return boundTextElement.fontSize;}return null;},appState.currentItemFontSize||DEFAULT_FONT_SIZE),onChange:function onChange(value){return updateData(value);}})]});}});export var actionDecreaseFontSize=register({name:\"decreaseFontSize\",trackEvent:false,perform:function perform(elements,appState,value){return changeFontSize(elements,appState,function(element){return Math.round(// get previous value before relative increase (doesn't work fully\n// due to rounding and float precision issues)\n1/(1+FONT_SIZE_RELATIVE_INCREASE_STEP)*element.fontSize);});},keyTest:function keyTest(event){return event[KEYS.CTRL_OR_CMD]&&event.shiftKey&&(// KEYS.COMMA needed for MacOS\nevent.key===KEYS.CHEVRON_LEFT||event.key===KEYS.COMMA);}});export var actionIncreaseFontSize=register({name:\"increaseFontSize\",trackEvent:false,perform:function perform(elements,appState,value){return changeFontSize(elements,appState,function(element){return Math.round(element.fontSize*(1+FONT_SIZE_RELATIVE_INCREASE_STEP));});},keyTest:function keyTest(event){return event[KEYS.CTRL_OR_CMD]&&event.shiftKey&&(// KEYS.PERIOD needed for MacOS\nevent.key===KEYS.CHEVRON_RIGHT||event.key===KEYS.PERIOD);}});export var actionChangeFontFamily=register({name:\"changeFontFamily\",trackEvent:false,perform:function perform(elements,appState,value){return{elements:changeProperty(elements,appState,function(oldElement){if(isTextElement(oldElement)){var newElement=newElementWith(oldElement,{fontFamily:value,lineHeight:getDefaultLineHeight(value)});redrawTextBoundingBox(newElement,getContainerElement(oldElement));return newElement;}return oldElement;},true),appState:_objectSpread(_objectSpread({},appState),{},{currentItemFontFamily:value}),commitToHistory:true};},PanelComponent:function PanelComponent(_ref11){var elements=_ref11.elements,appState=_ref11.appState,updateData=_ref11.updateData;var options=[{value:FONT_FAMILY.Handlefront,text:t(\"labels.handDrawn\"),icon:FreedrawIcon},{value:FONT_FAMILY.Helvetica,text:t(\"labels.normal\"),icon:FontFamilyNormalIcon},{value:FONT_FAMILY.Cascadia,text:t(\"labels.code\"),icon:FontFamilyCodeIcon}];return/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:t(\"labels.fontFamily\")}),/*#__PURE__*/_jsx(ButtonIconSelect,{group:\"font-family\",options:options,value:getFormValue(elements,appState,function(element){if(isTextElement(element)){return element.fontFamily;}var boundTextElement=getBoundTextElement(element);if(boundTextElement){return boundTextElement.fontFamily;}return null;},appState.currentItemFontFamily||DEFAULT_FONT_FAMILY),onChange:function onChange(value){return updateData(value);}})]});}});export var actionChangeTextAlign=register({name:\"changeTextAlign\",trackEvent:false,perform:function perform(elements,appState,value){return{elements:changeProperty(elements,appState,function(oldElement){if(isTextElement(oldElement)){var newElement=newElementWith(oldElement,{textAlign:value});redrawTextBoundingBox(newElement,getContainerElement(oldElement));return newElement;}return oldElement;},true),appState:_objectSpread(_objectSpread({},appState),{},{currentItemTextAlign:value}),commitToHistory:true};},PanelComponent:function PanelComponent(_ref12){var elements=_ref12.elements,appState=_ref12.appState,updateData=_ref12.updateData;return/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:t(\"labels.textAlign\")}),/*#__PURE__*/_jsx(ButtonIconSelect,{group:\"text-align\",options:[{value:\"left\",text:t(\"labels.left\"),icon:TextAlignLeftIcon,testId:\"align-left\"},{value:\"center\",text:t(\"labels.center\"),icon:TextAlignCenterIcon,testId:\"align-horizontal-center\"},{value:\"right\",text:t(\"labels.right\"),icon:TextAlignRightIcon,testId:\"align-right\"}],value:getFormValue(elements,appState,function(element){if(isTextElement(element)){return element.textAlign;}var boundTextElement=getBoundTextElement(element);if(boundTextElement){return boundTextElement.textAlign;}return null;},appState.currentItemTextAlign),onChange:function onChange(value){return updateData(value);}})]});}});export var actionChangeVerticalAlign=register({name:\"changeVerticalAlign\",trackEvent:{category:\"element\"},perform:function perform(elements,appState,value){return{elements:changeProperty(elements,appState,function(oldElement){if(isTextElement(oldElement)){var newElement=newElementWith(oldElement,{verticalAlign:value});redrawTextBoundingBox(newElement,getContainerElement(oldElement));return newElement;}return oldElement;},true),appState:_objectSpread({},appState),commitToHistory:true};},PanelComponent:function PanelComponent(_ref13){var elements=_ref13.elements,appState=_ref13.appState,updateData=_ref13.updateData;return/*#__PURE__*/_jsx(\"fieldset\",{children:/*#__PURE__*/_jsx(ButtonIconSelect,{group:\"text-align\",options:[{value:VERTICAL_ALIGN.TOP,text:t(\"labels.alignTop\"),icon:/*#__PURE__*/_jsx(TextAlignTopIcon,{theme:appState.theme}),testId:\"align-top\"},{value:VERTICAL_ALIGN.MIDDLE,text:t(\"labels.centerVertically\"),icon:/*#__PURE__*/_jsx(TextAlignMiddleIcon,{theme:appState.theme}),testId:\"align-middle\"},{value:VERTICAL_ALIGN.BOTTOM,text:t(\"labels.alignBottom\"),icon:/*#__PURE__*/_jsx(TextAlignBottomIcon,{theme:appState.theme}),testId:\"align-bottom\"}],value:getFormValue(elements,appState,function(element){if(isTextElement(element)&&element.containerId){return element.verticalAlign;}var boundTextElement=getBoundTextElement(element);if(boundTextElement){return boundTextElement.verticalAlign;}return null;},VERTICAL_ALIGN.MIDDLE),onChange:function onChange(value){return updateData(value);}})});}});export var actionChangeRoundness=register({name:\"changeRoundness\",trackEvent:false,perform:function perform(elements,appState,value){return{elements:changeProperty(elements,appState,function(el){return newElementWith(el,{roundness:value===\"round\"?{type:isUsingAdaptiveRadius(el.type)?ROUNDNESS.ADAPTIVE_RADIUS:ROUNDNESS.PROPORTIONAL_RADIUS}:null});}),appState:_objectSpread(_objectSpread({},appState),{},{currentItemRoundness:value}),commitToHistory:true};},PanelComponent:function PanelComponent(_ref14){var elements=_ref14.elements,appState=_ref14.appState,updateData=_ref14.updateData;var targetElements=getTargetElements(getNonDeletedElements(elements),appState);var hasLegacyRoundness=targetElements.some(function(el){var _el$roundness;return((_el$roundness=el.roundness)===null||_el$roundness===void 0?void 0:_el$roundness.type)===ROUNDNESS.LEGACY;});return/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:t(\"labels.edges\")}),/*#__PURE__*/_jsx(ButtonIconSelect,{group:\"edges\",options:[{value:\"sharp\",text:t(\"labels.sharp\"),icon:EdgeSharpIcon},{value:\"round\",text:t(\"labels.round\"),icon:EdgeRoundIcon}],value:getFormValue(elements,appState,function(element){return hasLegacyRoundness?null:element.roundness?\"round\":\"sharp\";},canChangeRoundness(appState.activeTool.type)&&appState.currentItemRoundness||null),onChange:function onChange(value){return updateData(value);}})]});}});export var actionChangeArrowhead=register({name:\"changeArrowhead\",trackEvent:false,perform:function perform(elements,appState,value){return{elements:changeProperty(elements,appState,function(el){if(isLinearElement(el)){var position=value.position,type=value.type;if(position===\"start\"){var _element=newElementWith(el,{startArrowhead:type});return _element;}else if(position===\"end\"){var _element2=newElementWith(el,{endArrowhead:type});return _element2;}}return el;}),appState:_objectSpread(_objectSpread({},appState),{},_defineProperty({},value.position===\"start\"?\"currentItemStartArrowhead\":\"currentItemEndArrowhead\",value.type)),commitToHistory:true};},PanelComponent:function PanelComponent(_ref15){var elements=_ref15.elements,appState=_ref15.appState,updateData=_ref15.updateData;var isRTL=getLanguage().rtl;return/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:t(\"labels.arrowheads\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"iconSelectList buttonList\",children:[/*#__PURE__*/_jsx(IconPicker,{label:\"arrowhead_start\",options:[{value:null,text:t(\"labels.arrowhead_none\"),icon:ArrowheadNoneIcon,keyBinding:\"q\"},{value:\"arrow\",text:t(\"labels.arrowhead_arrow\"),icon:/*#__PURE__*/_jsx(ArrowheadArrowIcon,{flip:!isRTL}),keyBinding:\"w\"},{value:\"bar\",text:t(\"labels.arrowhead_bar\"),icon:/*#__PURE__*/_jsx(ArrowheadBarIcon,{flip:!isRTL}),keyBinding:\"e\"},{value:\"dot\",text:t(\"labels.arrowhead_dot\"),icon:/*#__PURE__*/_jsx(ArrowheadDotIcon,{flip:!isRTL}),keyBinding:\"r\"},{value:\"triangle\",text:t(\"labels.arrowhead_triangle\"),icon:/*#__PURE__*/_jsx(ArrowheadTriangleIcon,{flip:!isRTL}),keyBinding:\"t\"}],value:getFormValue(elements,appState,function(element){return isLinearElement(element)&&canHaveArrowheads(element.type)?element.startArrowhead:appState.currentItemStartArrowhead;},appState.currentItemStartArrowhead),onChange:function onChange(value){return updateData({position:\"start\",type:value});}}),/*#__PURE__*/_jsx(IconPicker,{label:\"arrowhead_end\",group:\"arrowheads\",options:[{value:null,text:t(\"labels.arrowhead_none\"),keyBinding:\"q\",icon:ArrowheadNoneIcon},{value:\"arrow\",text:t(\"labels.arrowhead_arrow\"),keyBinding:\"w\",icon:/*#__PURE__*/_jsx(ArrowheadArrowIcon,{flip:isRTL})},{value:\"bar\",text:t(\"labels.arrowhead_bar\"),keyBinding:\"e\",icon:/*#__PURE__*/_jsx(ArrowheadBarIcon,{flip:isRTL})},{value:\"dot\",text:t(\"labels.arrowhead_dot\"),keyBinding:\"r\",icon:/*#__PURE__*/_jsx(ArrowheadDotIcon,{flip:isRTL})},{value:\"triangle\",text:t(\"labels.arrowhead_triangle\"),icon:/*#__PURE__*/_jsx(ArrowheadTriangleIcon,{flip:isRTL}),keyBinding:\"t\"}],value:getFormValue(elements,appState,function(element){return isLinearElement(element)&&canHaveArrowheads(element.type)?element.endArrowhead:appState.currentItemEndArrowhead;},appState.currentItemEndArrowhead),onChange:function onChange(value){return updateData({position:\"end\",type:value});}})]})]});}});","map":{"version":3,"names":["DEFAULT_ELEMENT_BACKGROUND_COLOR_PALETTE","DEFAULT_ELEMENT_BACKGROUND_PICKS","DEFAULT_ELEMENT_STROKE_COLOR_PALETTE","DEFAULT_ELEMENT_STROKE_PICKS","trackEvent","ButtonIconSelect","ColorPicker","IconPicker","ArrowheadArrowIcon","ArrowheadBarIcon","ArrowheadDotIcon","ArrowheadTriangleIcon","ArrowheadNoneIcon","StrokeStyleDashedIcon","StrokeStyleDottedIcon","TextAlignTopIcon","TextAlignBottomIcon","TextAlignMiddleIcon","FillHachureIcon","FillCrossHatchIcon","FillSolidIcon","SloppinessArchitectIcon","SloppinessArtistIcon","SloppinessCartoonistIcon","StrokeWidthBaseIcon","StrokeWidthBoldIcon","StrokeWidthExtraBoldIcon","FontSizeSmallIcon","FontSizeMediumIcon","FontSizeLargeIcon","FontSizeExtraLargeIcon","EdgeSharpIcon","EdgeRoundIcon","FreedrawIcon","FontFamilyNormalIcon","FontFamilyCodeIcon","TextAlignLeftIcon","TextAlignCenterIcon","TextAlignRightIcon","FillZigZagIcon","DEFAULT_FONT_FAMILY","DEFAULT_FONT_SIZE","FONT_FAMILY","ROUNDNESS","VERTICAL_ALIGN","getNonDeletedElements","isTextElement","redrawTextBoundingBox","mutateElement","newElementWith","getBoundTextElement","getContainerElement","getDefaultLineHeight","isBoundToContainer","isLinearElement","isUsingAdaptiveRadius","getLanguage","t","KEYS","randomInteger","canChangeRoundness","canHaveArrowheads","getCommonAttributeOfSelectedElements","getSelectedElements","getTargetElements","isSomeElementSelected","hasStrokeColor","arrayToMap","getShortcutKey","register","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FONT_SIZE_RELATIVE_INCREASE_STEP","changeProperty","elements","appState","callback","includeBoundText","arguments","length","undefined","selectedElementIds","includeBoundTextElement","map","element","_appState$editingElem","get","id","editingElement","getFormValue","getAttribute","defaultValue","_ref","_ref2","nonDeletedElements","offsetElementAfterFontResize","prevElement","nextElement","x","textAlign","width","y","height","changeFontSize","getNewFontSize","fallbackValue","newFontSizes","Set","oldElement","newFontSize","add","newElement","fontSize","_objectSpread","currentItemFontSize","size","_toConsumableArray","commitToHistory","actionChangeStrokeColor","name","perform","value","currentItemStrokeColor","el","type","strokeColor","PanelComponent","_ref3","updateData","appProps","children","topPicks","palette","label","color","onChange","actionChangeBackgroundColor","currentItemBackgroundColor","backgroundColor","_ref4","actionChangeFillStyle","app","concat","device","isMobile","fillStyle","currentItemFillStyle","_ref5","selectedElements","allElementsZigZag","every","options","text","icon","active","onClick","event","nextValue","altKey","actionChangeStrokeWidth","strokeWidth","currentItemStrokeWidth","_ref6","group","actionChangeSloppiness","seed","roughness","currentItemRoughness","_ref7","actionChangeStrokeStyle","strokeStyle","currentItemStrokeStyle","_ref8","actionChangeOpacity","opacity","currentItemOpacity","_ref9","_getFormValue","className","min","max","step","target","actionChangeFontSize","_ref10","testId","boundTextElement","actionDecreaseFontSize","Math","round","keyTest","CTRL_OR_CMD","shiftKey","key","CHEVRON_LEFT","COMMA","actionIncreaseFontSize","CHEVRON_RIGHT","PERIOD","actionChangeFontFamily","fontFamily","lineHeight","currentItemFontFamily","_ref11","Handlefront","Helvetica","Cascadia","actionChangeTextAlign","currentItemTextAlign","_ref12","actionChangeVerticalAlign","category","verticalAlign","_ref13","TOP","theme","MIDDLE","BOTTOM","containerId","actionChangeRoundness","roundness","ADAPTIVE_RADIUS","PROPORTIONAL_RADIUS","currentItemRoundness","_ref14","targetElements","hasLegacyRoundness","some","_el$roundness","LEGACY","activeTool","actionChangeArrowhead","position","startArrowhead","endArrowhead","_defineProperty","_ref15","isRTL","rtl","keyBinding","flip","currentItemStartArrowhead","currentItemEndArrowhead"],"sources":["D:/project/excalidraw-cn/src/actions/actionProperties.tsx"],"sourcesContent":["import { AppState } from \"../../src/types\";\nimport {\n  DEFAULT_ELEMENT_BACKGROUND_COLOR_PALETTE,\n  DEFAULT_ELEMENT_BACKGROUND_PICKS,\n  DEFAULT_ELEMENT_STROKE_COLOR_PALETTE,\n  DEFAULT_ELEMENT_STROKE_PICKS,\n} from \"../colors\";\nimport { trackEvent } from \"../analytics\";\nimport { ButtonIconSelect } from \"../components/ButtonIconSelect\";\nimport { ColorPicker } from \"../components/ColorPicker/ColorPicker\";\nimport { IconPicker } from \"../components/IconPicker\";\n// TODO barnabasmolnar/editor-redesign\n// TextAlignTopIcon, TextAlignBottomIcon,TextAlignMiddleIcon,\n// ArrowHead icons\nimport {\n  ArrowheadArrowIcon,\n  ArrowheadBarIcon,\n  ArrowheadDotIcon,\n  ArrowheadTriangleIcon,\n  ArrowheadNoneIcon,\n  StrokeStyleDashedIcon,\n  StrokeStyleDottedIcon,\n  TextAlignTopIcon,\n  TextAlignBottomIcon,\n  TextAlignMiddleIcon,\n  FillHachureIcon,\n  FillCrossHatchIcon,\n  FillSolidIcon,\n  SloppinessArchitectIcon,\n  SloppinessArtistIcon,\n  SloppinessCartoonistIcon,\n  StrokeWidthBaseIcon,\n  StrokeWidthBoldIcon,\n  StrokeWidthExtraBoldIcon,\n  FontSizeSmallIcon,\n  FontSizeMediumIcon,\n  FontSizeLargeIcon,\n  FontSizeExtraLargeIcon,\n  EdgeSharpIcon,\n  EdgeRoundIcon,\n  FreedrawIcon,\n  FontFamilyNormalIcon,\n  FontFamilyCodeIcon,\n  TextAlignLeftIcon,\n  TextAlignCenterIcon,\n  TextAlignRightIcon,\n  FillZigZagIcon,\n} from \"../components/icons\";\nimport {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_SIZE,\n  FONT_FAMILY,\n  ROUNDNESS,\n  VERTICAL_ALIGN,\n} from \"../constants\";\nimport {\n  getNonDeletedElements,\n  isTextElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport {\n  getBoundTextElement,\n  getContainerElement,\n  getDefaultLineHeight,\n} from \"../element/textElement\";\nimport {\n  isBoundToContainer,\n  isLinearElement,\n  isUsingAdaptiveRadius,\n} from \"../element/typeChecks\";\nimport {\n  Arrowhead,\n  ExcalidrawElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  FontFamilyValues,\n  TextAlign,\n  VerticalAlign,\n} from \"../element/types\";\nimport { getLanguage, t } from \"../i18n\";\nimport { KEYS } from \"../keys\";\nimport { randomInteger } from \"../random\";\nimport {\n  canChangeRoundness,\n  canHaveArrowheads,\n  getCommonAttributeOfSelectedElements,\n  getSelectedElements,\n  getTargetElements,\n  isSomeElementSelected,\n} from \"../scene\";\nimport { hasStrokeColor } from \"../scene/comparisons\";\nimport { arrayToMap, getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\n\nconst FONT_SIZE_RELATIVE_INCREASE_STEP = 0.1;\n\nconst changeProperty = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  callback: (element: ExcalidrawElement) => ExcalidrawElement,\n  includeBoundText = false,\n) => {\n  const selectedElementIds = arrayToMap(\n    getSelectedElements(elements, appState, {\n      includeBoundTextElement: includeBoundText,\n    }),\n  );\n\n  return elements.map((element) => {\n    if (\n      selectedElementIds.get(element.id) ||\n      element.id === appState.editingElement?.id\n    ) {\n      return callback(element);\n    }\n    return element;\n  });\n};\n\nconst getFormValue = function <T>(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n  defaultValue: T,\n): T {\n  const editingElement = appState.editingElement;\n  const nonDeletedElements = getNonDeletedElements(elements);\n  return (\n    (editingElement && getAttribute(editingElement)) ??\n    (isSomeElementSelected(nonDeletedElements, appState)\n      ? getCommonAttributeOfSelectedElements(\n          nonDeletedElements,\n          appState,\n          getAttribute,\n        )\n      : defaultValue) ??\n    defaultValue\n  );\n};\n\nconst offsetElementAfterFontResize = (\n  prevElement: ExcalidrawTextElement,\n  nextElement: ExcalidrawTextElement,\n) => {\n  if (isBoundToContainer(nextElement)) {\n    return nextElement;\n  }\n  return mutateElement(\n    nextElement,\n    {\n      x:\n        prevElement.textAlign === \"left\"\n          ? prevElement.x\n          : prevElement.x +\n            (prevElement.width - nextElement.width) /\n              (prevElement.textAlign === \"center\" ? 2 : 1),\n      // centering vertically is non-standard, but for Excalidraw I think\n      // it makes sense\n      y: prevElement.y + (prevElement.height - nextElement.height) / 2,\n    },\n    false,\n  );\n};\n\nconst changeFontSize = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  getNewFontSize: (element: ExcalidrawTextElement) => number,\n  fallbackValue?: ExcalidrawTextElement[\"fontSize\"],\n) => {\n  const newFontSizes = new Set<number>();\n\n  return {\n    elements: changeProperty(\n      elements,\n      appState,\n      (oldElement) => {\n        if (isTextElement(oldElement)) {\n          const newFontSize = getNewFontSize(oldElement);\n          newFontSizes.add(newFontSize);\n\n          let newElement: ExcalidrawTextElement = newElementWith(oldElement, {\n            fontSize: newFontSize,\n          });\n          redrawTextBoundingBox(newElement, getContainerElement(oldElement));\n\n          newElement = offsetElementAfterFontResize(oldElement, newElement);\n\n          return newElement;\n        }\n\n        return oldElement;\n      },\n      true,\n    ),\n    appState: {\n      ...appState,\n      // update state only if we've set all select text elements to\n      // the same font size\n      currentItemFontSize:\n        newFontSizes.size === 1\n          ? [...newFontSizes][0]\n          : fallbackValue ?? appState.currentItemFontSize,\n    },\n    commitToHistory: true,\n  };\n};\n\n// -----------------------------------------------------------------------------\n\nexport const actionChangeStrokeColor = register({\n  name: \"changeStrokeColor\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      ...(value.currentItemStrokeColor && {\n        elements: changeProperty(\n          elements,\n          appState,\n          (el) => {\n            return hasStrokeColor(el.type)\n              ? newElementWith(el, {\n                  strokeColor: value.currentItemStrokeColor,\n                })\n              : el;\n          },\n          true,\n        ),\n      }),\n      appState: {\n        ...appState,\n        ...value,\n      },\n      commitToHistory: !!value.currentItemStrokeColor,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData, appProps }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.stroke\")}</h3>\n      <ColorPicker\n        topPicks={DEFAULT_ELEMENT_STROKE_PICKS}\n        palette={DEFAULT_ELEMENT_STROKE_COLOR_PALETTE}\n        type=\"elementStroke\"\n        label={t(\"labels.stroke\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeColor,\n          appState.currentItemStrokeColor,\n        )}\n        onChange={(color) => updateData({ currentItemStrokeColor: color })}\n        elements={elements}\n        appState={appState}\n        updateData={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeBackgroundColor = register({\n  name: \"changeBackgroundColor\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      ...(value.currentItemBackgroundColor && {\n        elements: changeProperty(elements, appState, (el) =>\n          newElementWith(el, {\n            backgroundColor: value.currentItemBackgroundColor,\n          }),\n        ),\n      }),\n      appState: {\n        ...appState,\n        ...value,\n      },\n      commitToHistory: !!value.currentItemBackgroundColor,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData, appProps }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.background\")}</h3>\n      <ColorPicker\n        topPicks={DEFAULT_ELEMENT_BACKGROUND_PICKS}\n        palette={DEFAULT_ELEMENT_BACKGROUND_COLOR_PALETTE}\n        type=\"elementBackground\"\n        label={t(\"labels.background\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.backgroundColor,\n          appState.currentItemBackgroundColor,\n        )}\n        onChange={(color) => updateData({ currentItemBackgroundColor: color })}\n        elements={elements}\n        appState={appState}\n        updateData={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeFillStyle = register({\n  name: \"changeFillStyle\",\n  trackEvent: false,\n  perform: (elements, appState, value, app) => {\n    trackEvent(\n      \"element\",\n      \"changeFillStyle\",\n      `${value} (${app.device.isMobile ? \"mobile\" : \"desktop\"})`,\n    );\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          fillStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemFillStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const selectedElements = getSelectedElements(elements, appState);\n    const allElementsZigZag =\n      selectedElements.length > 0 &&\n      selectedElements.every((el) => el.fillStyle === \"zigzag\");\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.fill\")}</legend>\n        <ButtonIconSelect\n          type=\"button\"\n          options={[\n            {\n              value: \"hachure\",\n              text: `${\n                allElementsZigZag ? t(\"labels.zigzag\") : t(\"labels.hachure\")\n              } (${getShortcutKey(\"Alt-Click\")})`,\n              icon: allElementsZigZag ? FillZigZagIcon : FillHachureIcon,\n              active: allElementsZigZag ? true : undefined,\n            },\n            {\n              value: \"cross-hatch\",\n              text: t(\"labels.crossHatch\"),\n              icon: FillCrossHatchIcon,\n            },\n            {\n              value: \"solid\",\n              text: t(\"labels.solid\"),\n              icon: FillSolidIcon,\n            },\n          ]}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => element.fillStyle,\n            appState.currentItemFillStyle,\n          )}\n          onClick={(value, event) => {\n            const nextValue =\n              event.altKey &&\n              value === \"hachure\" &&\n              selectedElements.every((el) => el.fillStyle === \"hachure\")\n                ? \"zigzag\"\n                : value;\n\n            updateData(nextValue);\n          }}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeStrokeWidth = register({\n  name: \"changeStrokeWidth\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeWidth: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeWidth: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeWidth\")}</legend>\n      <ButtonIconSelect\n        group=\"stroke-width\"\n        options={[\n          {\n            value: 1,\n            text: t(\"labels.thin\"),\n            icon: StrokeWidthBaseIcon,\n          },\n          {\n            value: 2,\n            text: t(\"labels.bold\"),\n            icon: StrokeWidthBoldIcon,\n          },\n          {\n            value: 4,\n            text: t(\"labels.extraBold\"),\n            icon: StrokeWidthExtraBoldIcon,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeWidth,\n          appState.currentItemStrokeWidth,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeSloppiness = register({\n  name: \"changeSloppiness\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          seed: randomInteger(),\n          roughness: value,\n        }),\n      ),\n      appState: { ...appState, currentItemRoughness: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.sloppiness\")}</legend>\n      <ButtonIconSelect\n        group=\"sloppiness\"\n        options={[\n          {\n            value: 0,\n            text: t(\"labels.architect\"),\n            icon: SloppinessArchitectIcon,\n          },\n          {\n            value: 1,\n            text: t(\"labels.artist\"),\n            icon: SloppinessArtistIcon,\n          },\n          {\n            value: 2,\n            text: t(\"labels.cartoonist\"),\n            icon: SloppinessCartoonistIcon,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.roughness,\n          appState.currentItemRoughness,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeStyle = register({\n  name: \"changeStrokeStyle\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeStyle\")}</legend>\n      <ButtonIconSelect\n        group=\"strokeStyle\"\n        options={[\n          {\n            value: \"solid\",\n            text: t(\"labels.strokeStyle_solid\"),\n            icon: StrokeWidthBaseIcon,\n          },\n          {\n            value: \"dashed\",\n            text: t(\"labels.strokeStyle_dashed\"),\n            icon: StrokeStyleDashedIcon,\n          },\n          {\n            value: \"dotted\",\n            text: t(\"labels.strokeStyle_dotted\"),\n            icon: StrokeStyleDottedIcon,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeStyle,\n          appState.currentItemStrokeStyle,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeOpacity = register({\n  name: \"changeOpacity\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(\n        elements,\n        appState,\n        (el) =>\n          newElementWith(el, {\n            opacity: value,\n          }),\n        true,\n      ),\n      appState: { ...appState, currentItemOpacity: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <label className=\"control-label\">\n      {t(\"labels.opacity\")}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step=\"10\"\n        onChange={(event) => updateData(+event.target.value)}\n        value={\n          getFormValue(\n            elements,\n            appState,\n            (element) => element.opacity,\n            appState.currentItemOpacity,\n          ) ?? undefined\n        }\n      />\n    </label>\n  ),\n});\n\nexport const actionChangeFontSize = register({\n  name: \"changeFontSize\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return changeFontSize(elements, appState, () => value, value);\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fontSize\")}</legend>\n      <ButtonIconSelect\n        group=\"font-size\"\n        options={[\n          {\n            value: 16,\n            text: t(\"labels.small\"),\n            icon: FontSizeSmallIcon,\n            testId: \"fontSize-small\",\n          },\n          {\n            value: 20,\n            text: t(\"labels.medium\"),\n            icon: FontSizeMediumIcon,\n            testId: \"fontSize-medium\",\n          },\n          {\n            value: 28,\n            text: t(\"labels.large\"),\n            icon: FontSizeLargeIcon,\n            testId: \"fontSize-large\",\n          },\n          {\n            value: 36,\n            text: t(\"labels.veryLarge\"),\n            icon: FontSizeExtraLargeIcon,\n            testId: \"fontSize-veryLarge\",\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => {\n            if (isTextElement(element)) {\n              return element.fontSize;\n            }\n            const boundTextElement = getBoundTextElement(element);\n            if (boundTextElement) {\n              return boundTextElement.fontSize;\n            }\n            return null;\n          },\n          appState.currentItemFontSize || DEFAULT_FONT_SIZE,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionDecreaseFontSize = register({\n  name: \"decreaseFontSize\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return changeFontSize(elements, appState, (element) =>\n      Math.round(\n        // get previous value before relative increase (doesn't work fully\n        // due to rounding and float precision issues)\n        (1 / (1 + FONT_SIZE_RELATIVE_INCREASE_STEP)) * element.fontSize,\n      ),\n    );\n  },\n  keyTest: (event) => {\n    return (\n      event[KEYS.CTRL_OR_CMD] &&\n      event.shiftKey &&\n      // KEYS.COMMA needed for MacOS\n      (event.key === KEYS.CHEVRON_LEFT || event.key === KEYS.COMMA)\n    );\n  },\n});\n\nexport const actionIncreaseFontSize = register({\n  name: \"increaseFontSize\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return changeFontSize(elements, appState, (element) =>\n      Math.round(element.fontSize * (1 + FONT_SIZE_RELATIVE_INCREASE_STEP)),\n    );\n  },\n  keyTest: (event) => {\n    return (\n      event[KEYS.CTRL_OR_CMD] &&\n      event.shiftKey &&\n      // KEYS.PERIOD needed for MacOS\n      (event.key === KEYS.CHEVRON_RIGHT || event.key === KEYS.PERIOD)\n    );\n  },\n});\n\nexport const actionChangeFontFamily = register({\n  name: \"changeFontFamily\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(\n        elements,\n        appState,\n        (oldElement) => {\n          if (isTextElement(oldElement)) {\n            const newElement: ExcalidrawTextElement = newElementWith(\n              oldElement,\n              {\n                fontFamily: value,\n                lineHeight: getDefaultLineHeight(value),\n              },\n            );\n            redrawTextBoundingBox(newElement, getContainerElement(oldElement));\n            return newElement;\n          }\n\n          return oldElement;\n        },\n        true,\n      ),\n      appState: {\n        ...appState,\n        currentItemFontFamily: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const options: {\n      value: FontFamilyValues;\n      text: string;\n      icon: JSX.Element;\n    }[] = [\n      {\n        value: FONT_FAMILY.Handlefront,\n        text: t(\"labels.handDrawn\"),\n        icon: FreedrawIcon,\n      },\n      {\n        value: FONT_FAMILY.Helvetica,\n        text: t(\"labels.normal\"),\n        icon: FontFamilyNormalIcon,\n      },\n      {\n        value: FONT_FAMILY.Cascadia,\n        text: t(\"labels.code\"),\n        icon: FontFamilyCodeIcon,\n      },\n    ];\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.fontFamily\")}</legend>\n        <ButtonIconSelect<FontFamilyValues | false>\n          group=\"font-family\"\n          options={options}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => {\n              if (isTextElement(element)) {\n                return element.fontFamily;\n              }\n              const boundTextElement = getBoundTextElement(element);\n              if (boundTextElement) {\n                return boundTextElement.fontFamily;\n              }\n              return null;\n            },\n            appState.currentItemFontFamily || DEFAULT_FONT_FAMILY,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeTextAlign = register({\n  name: \"changeTextAlign\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(\n        elements,\n        appState,\n        (oldElement) => {\n          if (isTextElement(oldElement)) {\n            const newElement: ExcalidrawTextElement = newElementWith(\n              oldElement,\n              { textAlign: value },\n            );\n            redrawTextBoundingBox(newElement, getContainerElement(oldElement));\n            return newElement;\n          }\n\n          return oldElement;\n        },\n        true,\n      ),\n      appState: {\n        ...appState,\n        currentItemTextAlign: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    return (\n      <fieldset>\n        <legend>{t(\"labels.textAlign\")}</legend>\n        <ButtonIconSelect<TextAlign | false>\n          group=\"text-align\"\n          options={[\n            {\n              value: \"left\",\n              text: t(\"labels.left\"),\n              icon: TextAlignLeftIcon,\n              testId: \"align-left\",\n            },\n            {\n              value: \"center\",\n              text: t(\"labels.center\"),\n              icon: TextAlignCenterIcon,\n              testId: \"align-horizontal-center\",\n            },\n            {\n              value: \"right\",\n              text: t(\"labels.right\"),\n              icon: TextAlignRightIcon,\n              testId: \"align-right\",\n            },\n          ]}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => {\n              if (isTextElement(element)) {\n                return element.textAlign;\n              }\n              const boundTextElement = getBoundTextElement(element);\n              if (boundTextElement) {\n                return boundTextElement.textAlign;\n              }\n              return null;\n            },\n            appState.currentItemTextAlign,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeVerticalAlign = register({\n  name: \"changeVerticalAlign\",\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(\n        elements,\n        appState,\n        (oldElement) => {\n          if (isTextElement(oldElement)) {\n            const newElement: ExcalidrawTextElement = newElementWith(\n              oldElement,\n              { verticalAlign: value },\n            );\n\n            redrawTextBoundingBox(newElement, getContainerElement(oldElement));\n            return newElement;\n          }\n\n          return oldElement;\n        },\n        true,\n      ),\n      appState: {\n        ...appState,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    return (\n      <fieldset>\n        <ButtonIconSelect<VerticalAlign | false>\n          group=\"text-align\"\n          options={[\n            {\n              value: VERTICAL_ALIGN.TOP,\n              text: t(\"labels.alignTop\"),\n              icon: <TextAlignTopIcon theme={appState.theme} />,\n              testId: \"align-top\",\n            },\n            {\n              value: VERTICAL_ALIGN.MIDDLE,\n              text: t(\"labels.centerVertically\"),\n              icon: <TextAlignMiddleIcon theme={appState.theme} />,\n              testId: \"align-middle\",\n            },\n            {\n              value: VERTICAL_ALIGN.BOTTOM,\n              text: t(\"labels.alignBottom\"),\n              icon: <TextAlignBottomIcon theme={appState.theme} />,\n              testId: \"align-bottom\",\n            },\n          ]}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => {\n              if (isTextElement(element) && element.containerId) {\n                return element.verticalAlign;\n              }\n              const boundTextElement = getBoundTextElement(element);\n              if (boundTextElement) {\n                return boundTextElement.verticalAlign;\n              }\n              return null;\n            },\n            VERTICAL_ALIGN.MIDDLE,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeRoundness = register({\n  name: \"changeRoundness\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          roundness:\n            value === \"round\"\n              ? {\n                  type: isUsingAdaptiveRadius(el.type)\n                    ? ROUNDNESS.ADAPTIVE_RADIUS\n                    : ROUNDNESS.PROPORTIONAL_RADIUS,\n                }\n              : null,\n        }),\n      ),\n      appState: {\n        ...appState,\n        currentItemRoundness: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const targetElements = getTargetElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n\n    const hasLegacyRoundness = targetElements.some(\n      (el) => el.roundness?.type === ROUNDNESS.LEGACY,\n    );\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.edges\")}</legend>\n        <ButtonIconSelect\n          group=\"edges\"\n          options={[\n            {\n              value: \"sharp\",\n              text: t(\"labels.sharp\"),\n              icon: EdgeSharpIcon,\n            },\n            {\n              value: \"round\",\n              text: t(\"labels.round\"),\n              icon: EdgeRoundIcon,\n            },\n          ]}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) =>\n              hasLegacyRoundness ? null : element.roundness ? \"round\" : \"sharp\",\n            (canChangeRoundness(appState.activeTool.type) &&\n              appState.currentItemRoundness) ||\n              null,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeArrowhead = register({\n  name: \"changeArrowhead\",\n  trackEvent: false,\n  perform: (\n    elements,\n    appState,\n    value: { position: \"start\" | \"end\"; type: Arrowhead },\n  ) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isLinearElement(el)) {\n          const { position, type } = value;\n\n          if (position === \"start\") {\n            const element: ExcalidrawLinearElement = newElementWith(el, {\n              startArrowhead: type,\n            });\n            return element;\n          } else if (position === \"end\") {\n            const element: ExcalidrawLinearElement = newElementWith(el, {\n              endArrowhead: type,\n            });\n            return element;\n          }\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        [value.position === \"start\"\n          ? \"currentItemStartArrowhead\"\n          : \"currentItemEndArrowhead\"]: value.type,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const isRTL = getLanguage().rtl;\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.arrowheads\")}</legend>\n        <div className=\"iconSelectList buttonList\">\n          <IconPicker\n            label=\"arrowhead_start\"\n            options={[\n              {\n                value: null,\n                text: t(\"labels.arrowhead_none\"),\n                icon: ArrowheadNoneIcon,\n                keyBinding: \"q\",\n              },\n              {\n                value: \"arrow\",\n                text: t(\"labels.arrowhead_arrow\"),\n                icon: <ArrowheadArrowIcon flip={!isRTL} />,\n                keyBinding: \"w\",\n              },\n              {\n                value: \"bar\",\n                text: t(\"labels.arrowhead_bar\"),\n                icon: <ArrowheadBarIcon flip={!isRTL} />,\n                keyBinding: \"e\",\n              },\n              {\n                value: \"dot\",\n                text: t(\"labels.arrowhead_dot\"),\n                icon: <ArrowheadDotIcon flip={!isRTL} />,\n                keyBinding: \"r\",\n              },\n              {\n                value: \"triangle\",\n                text: t(\"labels.arrowhead_triangle\"),\n                icon: <ArrowheadTriangleIcon flip={!isRTL} />,\n                keyBinding: \"t\",\n              },\n            ]}\n            value={getFormValue<Arrowhead | null>(\n              elements,\n              appState,\n              (element) =>\n                isLinearElement(element) && canHaveArrowheads(element.type)\n                  ? element.startArrowhead\n                  : appState.currentItemStartArrowhead,\n              appState.currentItemStartArrowhead,\n            )}\n            onChange={(value) => updateData({ position: \"start\", type: value })}\n          />\n          <IconPicker\n            label=\"arrowhead_end\"\n            group=\"arrowheads\"\n            options={[\n              {\n                value: null,\n                text: t(\"labels.arrowhead_none\"),\n                keyBinding: \"q\",\n                icon: ArrowheadNoneIcon,\n              },\n              {\n                value: \"arrow\",\n                text: t(\"labels.arrowhead_arrow\"),\n                keyBinding: \"w\",\n                icon: <ArrowheadArrowIcon flip={isRTL} />,\n              },\n              {\n                value: \"bar\",\n                text: t(\"labels.arrowhead_bar\"),\n                keyBinding: \"e\",\n                icon: <ArrowheadBarIcon flip={isRTL} />,\n              },\n              {\n                value: \"dot\",\n                text: t(\"labels.arrowhead_dot\"),\n                keyBinding: \"r\",\n                icon: <ArrowheadDotIcon flip={isRTL} />,\n              },\n              {\n                value: \"triangle\",\n                text: t(\"labels.arrowhead_triangle\"),\n                icon: <ArrowheadTriangleIcon flip={isRTL} />,\n                keyBinding: \"t\",\n              },\n            ]}\n            value={getFormValue<Arrowhead | null>(\n              elements,\n              appState,\n              (element) =>\n                isLinearElement(element) && canHaveArrowheads(element.type)\n                  ? element.endArrowhead\n                  : appState.currentItemEndArrowhead,\n              appState.currentItemEndArrowhead,\n            )}\n            onChange={(value) => updateData({ position: \"end\", type: value })}\n          />\n        </div>\n      </fieldset>\n    );\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}