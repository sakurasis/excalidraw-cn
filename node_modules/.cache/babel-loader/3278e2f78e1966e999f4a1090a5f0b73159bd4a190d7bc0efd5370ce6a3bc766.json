{"ast":null,"code":"export function rotatePoints(points, center, degrees) {\n  if (points && points.length) {\n    const [cx, cy] = center;\n    const angle = Math.PI / 180 * degrees;\n    const cos = Math.cos(angle);\n    const sin = Math.sin(angle);\n    points.forEach(p => {\n      const [x, y] = p;\n      p[0] = (x - cx) * cos - (y - cy) * sin + cx;\n      p[1] = (x - cx) * sin + (y - cy) * cos + cy;\n    });\n  }\n}\nexport function rotateLines(lines, center, degrees) {\n  const points = [];\n  lines.forEach(line => points.push(...line));\n  rotatePoints(points, center, degrees);\n}\nexport function lineLength(line) {\n  const p1 = line[0];\n  const p2 = line[1];\n  return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n}","map":{"version":3,"names":["rotatePoints","points","center","degrees","length","cx","cy","angle","Math","PI","cos","sin","forEach","p","x","y","rotateLines","lines","line","push","lineLength","p1","p2","sqrt","pow"],"sources":["D:/project/excalidraw-cn/node_modules/roughjs/bin/geometry.js"],"sourcesContent":["export function rotatePoints(points, center, degrees) {\n    if (points && points.length) {\n        const [cx, cy] = center;\n        const angle = (Math.PI / 180) * degrees;\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        points.forEach((p) => {\n            const [x, y] = p;\n            p[0] = ((x - cx) * cos) - ((y - cy) * sin) + cx;\n            p[1] = ((x - cx) * sin) + ((y - cy) * cos) + cy;\n        });\n    }\n}\nexport function rotateLines(lines, center, degrees) {\n    const points = [];\n    lines.forEach((line) => points.push(...line));\n    rotatePoints(points, center, degrees);\n}\nexport function lineLength(line) {\n    const p1 = line[0];\n    const p2 = line[1];\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n}\n"],"mappings":"AAAA,OAAO,SAASA,YAAYA,CAACC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAE;EAClD,IAAIF,MAAM,IAAIA,MAAM,CAACG,MAAM,EAAE;IACzB,MAAM,CAACC,EAAE,EAAEC,EAAE,CAAC,GAAGJ,MAAM;IACvB,MAAMK,KAAK,GAAIC,IAAI,CAACC,EAAE,GAAG,GAAG,GAAIN,OAAO;IACvC,MAAMO,GAAG,GAAGF,IAAI,CAACE,GAAG,CAACH,KAAK,CAAC;IAC3B,MAAMI,GAAG,GAAGH,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC;IAC3BN,MAAM,CAACW,OAAO,CAAEC,CAAC,IAAK;MAClB,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGF,CAAC;MAChBA,CAAC,CAAC,CAAC,CAAC,GAAI,CAACC,CAAC,GAAGT,EAAE,IAAIK,GAAG,GAAK,CAACK,CAAC,GAAGT,EAAE,IAAIK,GAAI,GAAGN,EAAE;MAC/CQ,CAAC,CAAC,CAAC,CAAC,GAAI,CAACC,CAAC,GAAGT,EAAE,IAAIM,GAAG,GAAK,CAACI,CAAC,GAAGT,EAAE,IAAII,GAAI,GAAGJ,EAAE;IACnD,CAAC,CAAC;EACN;AACJ;AACA,OAAO,SAASU,WAAWA,CAACC,KAAK,EAAEf,MAAM,EAAEC,OAAO,EAAE;EAChD,MAAMF,MAAM,GAAG,EAAE;EACjBgB,KAAK,CAACL,OAAO,CAAEM,IAAI,IAAKjB,MAAM,CAACkB,IAAI,CAAC,GAAGD,IAAI,CAAC,CAAC;EAC7ClB,YAAY,CAACC,MAAM,EAAEC,MAAM,EAAEC,OAAO,CAAC;AACzC;AACA,OAAO,SAASiB,UAAUA,CAACF,IAAI,EAAE;EAC7B,MAAMG,EAAE,GAAGH,IAAI,CAAC,CAAC,CAAC;EAClB,MAAMI,EAAE,GAAGJ,IAAI,CAAC,CAAC,CAAC;EAClB,OAAOV,IAAI,CAACe,IAAI,CAACf,IAAI,CAACgB,GAAG,CAACH,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGd,IAAI,CAACgB,GAAG,CAACH,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7E"},"metadata":{},"sourceType":"module","externalDependencies":[]}