{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\actions\\\\actionAlign.tsx\";\nimport { alignElements } from \"../align\";\nimport { AlignBottomIcon, AlignLeftIcon, AlignRightIcon, AlignTopIcon, CenterHorizontallyIcon, CenterVerticallyIcon } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { getNonDeletedElements } from \"../element\";\nimport { updateFrameMembershipOfSelectedElements } from \"../frame\";\nimport { t } from \"../i18n\";\nimport { KEYS } from \"../keys\";\nimport { isSomeElementSelected } from \"../scene\";\nimport { arrayToMap, getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alignActionsPredicate = (elements, appState, _, app) => {\n  const selectedElements = app.scene.getSelectedElements(appState);\n  return selectedElements.length > 1 &&\n  // TODO enable aligning frames when implemented properly\n  !selectedElements.some(el => el.type === \"frame\");\n};\nconst alignSelectedElements = (elements, appState, app, alignment) => {\n  const selectedElements = app.scene.getSelectedElements(appState);\n  const updatedElements = alignElements(selectedElements, alignment);\n  const updatedElementsMap = arrayToMap(updatedElements);\n  return updateFrameMembershipOfSelectedElements(elements.map(element => updatedElementsMap.get(element.id) || element), appState, app);\n};\nexport const actionAlignTop = register({\n  name: \"alignTop\",\n  trackEvent: {\n    category: \"element\"\n  },\n  predicate: alignActionsPredicate,\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"start\",\n        axis: \"y\"\n      }),\n      commitToHistory: true\n    };\n  },\n  keyTest: event => event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_UP,\n  PanelComponent: _ref => {\n    let {\n      elements,\n      appState,\n      updateData,\n      app\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(ToolButton, {\n      hidden: !alignActionsPredicate(elements, appState, null, app),\n      type: \"button\",\n      icon: AlignTopIcon,\n      onClick: () => updateData(null),\n      title: `${t(\"labels.alignTop\")} — ${getShortcutKey(\"CtrlOrCmd+Shift+Up\")}`,\n      \"aria-label\": t(\"labels.alignTop\"),\n      visible: isSomeElementSelected(getNonDeletedElements(elements), appState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this);\n  }\n});\nexport const actionAlignBottom = register({\n  name: \"alignBottom\",\n  trackEvent: {\n    category: \"element\"\n  },\n  predicate: alignActionsPredicate,\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"end\",\n        axis: \"y\"\n      }),\n      commitToHistory: true\n    };\n  },\n  keyTest: event => event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_DOWN,\n  PanelComponent: _ref2 => {\n    let {\n      elements,\n      appState,\n      updateData,\n      app\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(ToolButton, {\n      hidden: !alignActionsPredicate(elements, appState, null, app),\n      type: \"button\",\n      icon: AlignBottomIcon,\n      onClick: () => updateData(null),\n      title: `${t(\"labels.alignBottom\")} — ${getShortcutKey(\"CtrlOrCmd+Shift+Down\")}`,\n      \"aria-label\": t(\"labels.alignBottom\"),\n      visible: isSomeElementSelected(getNonDeletedElements(elements), appState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this);\n  }\n});\nexport const actionAlignLeft = register({\n  name: \"alignLeft\",\n  trackEvent: {\n    category: \"element\"\n  },\n  predicate: alignActionsPredicate,\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"start\",\n        axis: \"x\"\n      }),\n      commitToHistory: true\n    };\n  },\n  keyTest: event => event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_LEFT,\n  PanelComponent: _ref3 => {\n    let {\n      elements,\n      appState,\n      updateData,\n      app\n    } = _ref3;\n    return /*#__PURE__*/_jsxDEV(ToolButton, {\n      hidden: !alignActionsPredicate(elements, appState, null, app),\n      type: \"button\",\n      icon: AlignLeftIcon,\n      onClick: () => updateData(null),\n      title: `${t(\"labels.alignLeft\")} — ${getShortcutKey(\"CtrlOrCmd+Shift+Left\")}`,\n      \"aria-label\": t(\"labels.alignLeft\"),\n      visible: isSomeElementSelected(getNonDeletedElements(elements), appState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }, this);\n  }\n});\nexport const actionAlignRight = register({\n  name: \"alignRight\",\n  trackEvent: {\n    category: \"element\"\n  },\n  predicate: alignActionsPredicate,\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"end\",\n        axis: \"x\"\n      }),\n      commitToHistory: true\n    };\n  },\n  keyTest: event => event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_RIGHT,\n  PanelComponent: _ref4 => {\n    let {\n      elements,\n      appState,\n      updateData,\n      app\n    } = _ref4;\n    return /*#__PURE__*/_jsxDEV(ToolButton, {\n      hidden: !alignActionsPredicate(elements, appState, null, app),\n      type: \"button\",\n      icon: AlignRightIcon,\n      onClick: () => updateData(null),\n      title: `${t(\"labels.alignRight\")} — ${getShortcutKey(\"CtrlOrCmd+Shift+Right\")}`,\n      \"aria-label\": t(\"labels.alignRight\"),\n      visible: isSomeElementSelected(getNonDeletedElements(elements), appState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }, this);\n  }\n});\nexport const actionAlignVerticallyCentered = register({\n  name: \"alignVerticallyCentered\",\n  trackEvent: {\n    category: \"element\"\n  },\n  predicate: alignActionsPredicate,\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"center\",\n        axis: \"y\"\n      }),\n      commitToHistory: true\n    };\n  },\n  PanelComponent: _ref5 => {\n    let {\n      elements,\n      appState,\n      updateData,\n      app\n    } = _ref5;\n    return /*#__PURE__*/_jsxDEV(ToolButton, {\n      hidden: !alignActionsPredicate(elements, appState, null, app),\n      type: \"button\",\n      icon: CenterVerticallyIcon,\n      onClick: () => updateData(null),\n      title: t(\"labels.centerVertically\"),\n      \"aria-label\": t(\"labels.centerVertically\"),\n      visible: isSomeElementSelected(getNonDeletedElements(elements), appState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }, this);\n  }\n});\nexport const actionAlignHorizontallyCentered = register({\n  name: \"alignHorizontallyCentered\",\n  trackEvent: {\n    category: \"element\"\n  },\n  predicate: alignActionsPredicate,\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"center\",\n        axis: \"x\"\n      }),\n      commitToHistory: true\n    };\n  },\n  PanelComponent: _ref6 => {\n    let {\n      elements,\n      appState,\n      updateData,\n      app\n    } = _ref6;\n    return /*#__PURE__*/_jsxDEV(ToolButton, {\n      hidden: !alignActionsPredicate(elements, appState, null, app),\n      type: \"button\",\n      icon: CenterHorizontallyIcon,\n      onClick: () => updateData(null),\n      title: t(\"labels.centerHorizontally\"),\n      \"aria-label\": t(\"labels.centerHorizontally\"),\n      visible: isSomeElementSelected(getNonDeletedElements(elements), appState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }, this);\n  }\n});","map":{"version":3,"names":["alignElements","AlignBottomIcon","AlignLeftIcon","AlignRightIcon","AlignTopIcon","CenterHorizontallyIcon","CenterVerticallyIcon","ToolButton","getNonDeletedElements","updateFrameMembershipOfSelectedElements","t","KEYS","isSomeElementSelected","arrayToMap","getShortcutKey","register","jsxDEV","_jsxDEV","alignActionsPredicate","elements","appState","_","app","selectedElements","scene","getSelectedElements","length","some","el","type","alignSelectedElements","alignment","updatedElements","updatedElementsMap","map","element","get","id","actionAlignTop","name","trackEvent","category","predicate","perform","position","axis","commitToHistory","keyTest","event","CTRL_OR_CMD","shiftKey","key","ARROW_UP","PanelComponent","_ref","updateData","hidden","icon","onClick","title","visible","fileName","_jsxFileName","lineNumber","columnNumber","actionAlignBottom","ARROW_DOWN","_ref2","actionAlignLeft","ARROW_LEFT","_ref3","actionAlignRight","ARROW_RIGHT","_ref4","actionAlignVerticallyCentered","_ref5","actionAlignHorizontallyCentered","_ref6"],"sources":["D:/project/excalidraw-cn/src/actions/actionAlign.tsx"],"sourcesContent":["import { alignElements, Alignment } from \"../align\";\nimport {\n  AlignBottomIcon,\n  AlignLeftIcon,\n  AlignRightIcon,\n  AlignTopIcon,\n  CenterHorizontallyIcon,\n  CenterVerticallyIcon,\n} from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { updateFrameMembershipOfSelectedElements } from \"../frame\";\nimport { t } from \"../i18n\";\nimport { KEYS } from \"../keys\";\nimport { isSomeElementSelected } from \"../scene\";\nimport { AppClassProperties, AppState } from \"../types\";\nimport { arrayToMap, getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\n\nconst alignActionsPredicate = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  _: unknown,\n  app: AppClassProperties,\n) => {\n  const selectedElements = app.scene.getSelectedElements(appState);\n  return (\n    selectedElements.length > 1 &&\n    // TODO enable aligning frames when implemented properly\n    !selectedElements.some((el) => el.type === \"frame\")\n  );\n};\n\nconst alignSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: Readonly<AppState>,\n  app: AppClassProperties,\n  alignment: Alignment,\n) => {\n  const selectedElements = app.scene.getSelectedElements(appState);\n\n  const updatedElements = alignElements(selectedElements, alignment);\n\n  const updatedElementsMap = arrayToMap(updatedElements);\n\n  return updateFrameMembershipOfSelectedElements(\n    elements.map((element) => updatedElementsMap.get(element.id) || element),\n    appState,\n    app,\n  );\n};\n\nexport const actionAlignTop = register({\n  name: \"alignTop\",\n  trackEvent: { category: \"element\" },\n  predicate: alignActionsPredicate,\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"start\",\n        axis: \"y\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_UP,\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!alignActionsPredicate(elements, appState, null, app)}\n      type=\"button\"\n      icon={AlignTopIcon}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignTop\")} — ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Up\",\n      )}`}\n      aria-label={t(\"labels.alignTop\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignBottom = register({\n  name: \"alignBottom\",\n  trackEvent: { category: \"element\" },\n  predicate: alignActionsPredicate,\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"end\",\n        axis: \"y\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_DOWN,\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!alignActionsPredicate(elements, appState, null, app)}\n      type=\"button\"\n      icon={AlignBottomIcon}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignBottom\")} — ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Down\",\n      )}`}\n      aria-label={t(\"labels.alignBottom\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignLeft = register({\n  name: \"alignLeft\",\n  trackEvent: { category: \"element\" },\n  predicate: alignActionsPredicate,\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"start\",\n        axis: \"x\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_LEFT,\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!alignActionsPredicate(elements, appState, null, app)}\n      type=\"button\"\n      icon={AlignLeftIcon}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignLeft\")} — ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Left\",\n      )}`}\n      aria-label={t(\"labels.alignLeft\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignRight = register({\n  name: \"alignRight\",\n  trackEvent: { category: \"element\" },\n  predicate: alignActionsPredicate,\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"end\",\n        axis: \"x\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_RIGHT,\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!alignActionsPredicate(elements, appState, null, app)}\n      type=\"button\"\n      icon={AlignRightIcon}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignRight\")} — ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Right\",\n      )}`}\n      aria-label={t(\"labels.alignRight\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignVerticallyCentered = register({\n  name: \"alignVerticallyCentered\",\n  trackEvent: { category: \"element\" },\n  predicate: alignActionsPredicate,\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"center\",\n        axis: \"y\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!alignActionsPredicate(elements, appState, null, app)}\n      type=\"button\"\n      icon={CenterVerticallyIcon}\n      onClick={() => updateData(null)}\n      title={t(\"labels.centerVertically\")}\n      aria-label={t(\"labels.centerVertically\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignHorizontallyCentered = register({\n  name: \"alignHorizontallyCentered\",\n  trackEvent: { category: \"element\" },\n  predicate: alignActionsPredicate,\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"center\",\n        axis: \"x\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!alignActionsPredicate(elements, appState, null, app)}\n      type=\"button\"\n      icon={CenterHorizontallyIcon}\n      onClick={() => updateData(null)}\n      title={t(\"labels.centerHorizontally\")}\n      aria-label={t(\"labels.centerHorizontally\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}