{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\IconPicker.tsx\";\nimport React from \"react\";\nimport { Popover } from \"./Popover\";\nimport \"./IconPicker.scss\";\nimport { isArrowKey, KEYS } from \"../keys\";\nimport { getLanguage } from \"../i18n\";\nimport clsx from \"clsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Picker(_ref) {\n  let {\n    options,\n    value,\n    label,\n    onChange,\n    onClose\n  } = _ref;\n  const rFirstItem = React.useRef();\n  const rActiveItem = React.useRef();\n  const rGallery = React.useRef(null);\n  React.useEffect(() => {\n    // After the component is first mounted focus on first input\n    if (rActiveItem.current) {\n      rActiveItem.current.focus();\n    } else if (rGallery.current) {\n      rGallery.current.focus();\n    }\n  }, []);\n  const handleKeyDown = event => {\n    const pressedOption = options.find(option => option.keyBinding === event.key.toLowerCase());\n    if (!(event.metaKey || event.altKey || event.ctrlKey) && pressedOption) {\n      // Keybinding navigation\n      const index = options.indexOf(pressedOption);\n      rGallery.current.children[index].focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.TAB) {\n      // Tab navigation cycle through options. If the user tabs\n      // away from the picker, close the picker. We need to use\n      // a timeout here to let the stack clear before checking.\n      setTimeout(() => {\n        const active = rActiveItem.current;\n        const docActive = document.activeElement;\n        if (active !== docActive) {\n          onClose();\n        }\n      }, 0);\n    } else if (isArrowKey(event.key)) {\n      // Arrow navigation\n      const {\n        activeElement\n      } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(rGallery.current.children, activeElement);\n      if (index !== -1) {\n        const length = options.length;\n        let nextIndex = index;\n        switch (event.key) {\n          // Select the next option\n          case isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT:\n          case KEYS.ARROW_DOWN:\n            {\n              nextIndex = (index + 1) % length;\n              break;\n            }\n          // Select the previous option\n          case isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT:\n          case KEYS.ARROW_UP:\n            {\n              nextIndex = (length + index - 1) % length;\n              break;\n            }\n        }\n        rGallery.current.children[nextIndex].focus();\n      }\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      // Close on escape or enter\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n    event.stopPropagation();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `picker`,\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-label\": label,\n    onKeyDown: handleKeyDown,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"picker-content\",\n      ref: rGallery,\n      children: options.map((option, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: clsx(\"picker-option\", {\n          active: value === option.value\n        }),\n        onClick: event => {\n          event.currentTarget.focus();\n          onChange(option.value);\n        },\n        title: `${option.text} â€” ${option.keyBinding.toUpperCase()}`,\n        \"aria-label\": option.text || \"none\",\n        \"aria-keyshortcuts\": option.keyBinding,\n        ref: el => {\n          if (el && i === 0) {\n            rFirstItem.current = el;\n          }\n          if (el && option.value === value) {\n            rActiveItem.current = el;\n          }\n        },\n        onFocus: () => {\n          onChange(option.value);\n        },\n        children: [option.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"picker-keybinding\",\n          children: option.keyBinding\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, option.text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\nexport function IconPicker(_ref2) {\n  var _options$find;\n  let {\n    value,\n    label,\n    options,\n    onChange,\n    group = \"\"\n  } = _ref2;\n  const [isActive, setActive] = React.useState(false);\n  const rPickerButton = React.useRef(null);\n  const isRTL = getLanguage().rtl;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      name: group,\n      className: isActive ? \"active\" : \"\",\n      \"aria-label\": label,\n      onClick: () => setActive(!isActive),\n      ref: rPickerButton,\n      children: (_options$find = options.find(option => option.value === value)) === null || _options$find === void 0 ? void 0 : _options$find.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(React.Suspense, {\n      fallback: \"\",\n      children: isActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Popover, {\n          onCloseRequest: event => event.target !== rPickerButton.current && setActive(false),\n          ...(isRTL ? {\n            right: 5.5\n          } : {\n            left: -5.5\n          }),\n          children: /*#__PURE__*/_jsxDEV(Picker, {\n            options: options,\n            value: value,\n            label: label,\n            onChange: onChange,\n            onClose: () => {\n              var _rPickerButton$curren;\n              setActive(false);\n              (_rPickerButton$curren = rPickerButton.current) === null || _rPickerButton$curren === void 0 ? void 0 : _rPickerButton$curren.focus();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"picker-triangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","Popover","isArrowKey","KEYS","getLanguage","clsx","jsxDEV","_jsxDEV","Fragment","_Fragment","Picker","_ref","options","value","label","onChange","onClose","rFirstItem","useRef","rActiveItem","rGallery","useEffect","current","focus","handleKeyDown","event","pressedOption","find","option","keyBinding","key","toLowerCase","metaKey","altKey","ctrlKey","index","indexOf","children","preventDefault","TAB","setTimeout","active","docActive","document","activeElement","isRTL","rtl","Array","prototype","call","length","nextIndex","ARROW_LEFT","ARROW_RIGHT","ARROW_DOWN","ARROW_UP","ESCAPE","ENTER","nativeEvent","stopImmediatePropagation","stopPropagation","className","role","onKeyDown","ref","map","i","onClick","currentTarget","title","text","toUpperCase","el","onFocus","icon","fileName","_jsxFileName","lineNumber","columnNumber","IconPicker","_ref2","_options$find","group","isActive","setActive","useState","rPickerButton","name","Suspense","fallback","onCloseRequest","target","right","left","_rPickerButton$curren"],"sources":["D:/project/excalidraw-cn/src/components/IconPicker.tsx"],"sourcesContent":["import React from \"react\";\nimport { Popover } from \"./Popover\";\n\nimport \"./IconPicker.scss\";\nimport { isArrowKey, KEYS } from \"../keys\";\nimport { getLanguage } from \"../i18n\";\nimport clsx from \"clsx\";\n\nfunction Picker<T>({\n  options,\n  value,\n  label,\n  onChange,\n  onClose,\n}: {\n  label: string;\n  value: T;\n  options: { value: T; text: string; icon: JSX.Element; keyBinding: string }[];\n  onChange: (value: T) => void;\n  onClose: () => void;\n}) {\n  const rFirstItem = React.useRef<HTMLButtonElement>();\n  const rActiveItem = React.useRef<HTMLButtonElement>();\n  const rGallery = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    // After the component is first mounted focus on first input\n    if (rActiveItem.current) {\n      rActiveItem.current.focus();\n    } else if (rGallery.current) {\n      rGallery.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    const pressedOption = options.find(\n      (option) => option.keyBinding === event.key.toLowerCase(),\n    )!;\n\n    if (!(event.metaKey || event.altKey || event.ctrlKey) && pressedOption) {\n      // Keybinding navigation\n      const index = options.indexOf(pressedOption);\n      (rGallery!.current!.children![index] as any).focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.TAB) {\n      // Tab navigation cycle through options. If the user tabs\n      // away from the picker, close the picker. We need to use\n      // a timeout here to let the stack clear before checking.\n      setTimeout(() => {\n        const active = rActiveItem.current;\n        const docActive = document.activeElement;\n        if (active !== docActive) {\n          onClose();\n        }\n      }, 0);\n    } else if (isArrowKey(event.key)) {\n      // Arrow navigation\n      const { activeElement } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(\n        rGallery!.current!.children,\n        activeElement,\n      );\n      if (index !== -1) {\n        const length = options.length;\n        let nextIndex = index;\n\n        switch (event.key) {\n          // Select the next option\n          case isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT:\n          case KEYS.ARROW_DOWN: {\n            nextIndex = (index + 1) % length;\n            break;\n          }\n          // Select the previous option\n          case isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT:\n          case KEYS.ARROW_UP: {\n            nextIndex = (length + index - 1) % length;\n            break;\n          }\n        }\n\n        (rGallery.current!.children![nextIndex] as any).focus();\n      }\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      // Close on escape or enter\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n    event.stopPropagation();\n  };\n\n  return (\n    <div\n      className={`picker`}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={label}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"picker-content\" ref={rGallery}>\n        {options.map((option, i) => (\n          <button\n            className={clsx(\"picker-option\", {\n              active: value === option.value,\n            })}\n            onClick={(event) => {\n              (event.currentTarget as HTMLButtonElement).focus();\n              onChange(option.value);\n            }}\n            title={`${option.text} â€” ${option.keyBinding.toUpperCase()}`}\n            aria-label={option.text || \"none\"}\n            aria-keyshortcuts={option.keyBinding}\n            key={option.text}\n            ref={(el) => {\n              if (el && i === 0) {\n                rFirstItem.current = el;\n              }\n              if (el && option.value === value) {\n                rActiveItem.current = el;\n              }\n            }}\n            onFocus={() => {\n              onChange(option.value);\n            }}\n          >\n            {option.icon}\n            <span className=\"picker-keybinding\">{option.keyBinding}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function IconPicker<T>({\n  value,\n  label,\n  options,\n  onChange,\n  group = \"\",\n}: {\n  label: string;\n  value: T;\n  options: { value: T; text: string; icon: JSX.Element; keyBinding: string }[];\n  onChange: (value: T) => void;\n  group?: string;\n}) {\n  const [isActive, setActive] = React.useState(false);\n  const rPickerButton = React.useRef<any>(null);\n  const isRTL = getLanguage().rtl;\n\n  return (\n    <div>\n      <button\n        name={group}\n        className={isActive ? \"active\" : \"\"}\n        aria-label={label}\n        onClick={() => setActive(!isActive)}\n        ref={rPickerButton}\n      >\n        {options.find((option) => option.value === value)?.icon}\n      </button>\n      <React.Suspense fallback=\"\">\n        {isActive ? (\n          <>\n            <Popover\n              onCloseRequest={(event) =>\n                event.target !== rPickerButton.current && setActive(false)\n              }\n              {...(isRTL ? { right: 5.5 } : { left: -5.5 })}\n            >\n              <Picker\n                options={options}\n                value={value}\n                label={label}\n                onChange={onChange}\n                onClose={() => {\n                  setActive(false);\n                  rPickerButton.current?.focus();\n                }}\n              />\n            </Popover>\n            <div className=\"picker-triangle\" />\n          </>\n        ) : null}\n      </React.Suspense>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}