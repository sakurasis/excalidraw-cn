{"ast":null,"code":"import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch() {\n  if (!('fetch' in getGlobalObject())) {\n    return false;\n  }\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n  var global = getGlobalObject();\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  var result = false;\n  var doc = global.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof doc.createElement === \"function\") {\n    try {\n      var sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n  return result;\n}\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver() {\n  return 'ReportingObserver' in getGlobalObject();\n}\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n  // https://caniuse.com/#feat=referrer-policy\n  // It doesn't. And it throw exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n  if (!supportsFetch()) {\n    return false;\n  }\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin'\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  var global = getGlobalObject();\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var chrome = global.chrome;\n  var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n  return !isChromePackagedApp && hasHistoryApi;\n}","map":{"version":3,"names":["logger","getGlobalObject","supportsErrorEvent","ErrorEvent","e","supportsDOMError","DOMError","supportsDOMException","DOMException","supportsFetch","Headers","Request","Response","isNativeFetch","func","test","toString","supportsNativeFetch","global","fetch","result","doc","document","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","err","warn","supportsReportingObserver","supportsReferrerPolicy","referrerPolicy","supportsHistory","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState"],"sources":["D:\\project\\excalidraw-cn\\node_modules\\@sentry\\utils\\src\\supports.ts"],"sourcesContent":["import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const global = getGlobalObject<Window>();\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = global.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === `function`) {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n  // https://caniuse.com/#feat=referrer-policy\n  // It doesn't. And it throw exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (global as any).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}