{"ast":null,"code":"import{ROUNDNESS}from\"../constants\";export var isGenericElement=function isGenericElement(element){return element!=null&&(element.type===\"selection\"||element.type===\"rectangle\"||element.type===\"diamond\"||element.type===\"ellipse\");};export var isInitializedImageElement=function isInitializedImageElement(element){return!!element&&element.type===\"image\"&&!!element.fileId;};export var isImageElement=function isImageElement(element){return!!element&&element.type===\"image\";};export var isTextElement=function isTextElement(element){return element!=null&&element.type===\"text\";};export var isFrameElement=function isFrameElement(element){return element!=null&&element.type===\"frame\";};export var isFreeDrawElement=function isFreeDrawElement(element){return element!=null&&isFreeDrawElementType(element.type);};export var isFreeDrawElementType=function isFreeDrawElementType(elementType){return elementType===\"freedraw\";};export var isLinearElement=function isLinearElement(element){return element!=null&&isLinearElementType(element.type);};export var isArrowElement=function isArrowElement(element){return element!=null&&element.type===\"arrow\";};export var isLinearElementType=function isLinearElementType(elementType){return elementType===\"arrow\"||elementType===\"line\"// || elementType === \"freedraw\"\n;};export var isBindingElement=function isBindingElement(element){var includeLocked=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return element!=null&&(!element.locked||includeLocked===true)&&isBindingElementType(element.type);};export var isBindingElementType=function isBindingElementType(elementType){return elementType===\"arrow\";};export var isBindableElement=function isBindableElement(element){var includeLocked=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return element!=null&&(!element.locked||includeLocked===true)&&(element.type===\"rectangle\"||element.type===\"diamond\"||element.type===\"ellipse\"||element.type===\"image\"||element.type===\"text\"&&!element.containerId);};export var isTextBindableContainer=function isTextBindableContainer(element){var includeLocked=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return element!=null&&(!element.locked||includeLocked===true)&&(element.type===\"rectangle\"||element.type===\"diamond\"||element.type===\"ellipse\"||isArrowElement(element));};export var isExcalidrawElement=function isExcalidrawElement(element){return(element===null||element===void 0?void 0:element.type)===\"text\"||(element===null||element===void 0?void 0:element.type)===\"diamond\"||(element===null||element===void 0?void 0:element.type)===\"rectangle\"||(element===null||element===void 0?void 0:element.type)===\"ellipse\"||(element===null||element===void 0?void 0:element.type)===\"arrow\"||(element===null||element===void 0?void 0:element.type)===\"freedraw\"||(element===null||element===void 0?void 0:element.type)===\"line\";};export var hasBoundTextElement=function hasBoundTextElement(element){var _element$boundElement;return isTextBindableContainer(element)&&!!((_element$boundElement=element.boundElements)!==null&&_element$boundElement!==void 0&&_element$boundElement.some(function(_ref){var type=_ref.type;return type===\"text\";}));};export var isBoundToContainer=function isBoundToContainer(element){return element!==null&&\"containerId\"in element&&element.containerId!==null&&isTextElement(element);};export var isUsingAdaptiveRadius=function isUsingAdaptiveRadius(type){return type===\"rectangle\";};export var isUsingProportionalRadius=function isUsingProportionalRadius(type){return type===\"line\"||type===\"arrow\"||type===\"diamond\";};export var canApplyRoundnessTypeToElement=function canApplyRoundnessTypeToElement(roundnessType,element){if((roundnessType===ROUNDNESS.ADAPTIVE_RADIUS||// if legacy roundness, it can be applied to elements that currently\n// use adaptive radius\nroundnessType===ROUNDNESS.LEGACY)&&isUsingAdaptiveRadius(element.type)){return true;}if(roundnessType===ROUNDNESS.PROPORTIONAL_RADIUS&&isUsingProportionalRadius(element.type)){return true;}return false;};export var getDefaultRoundnessTypeForElement=function getDefaultRoundnessTypeForElement(element){if(element.type===\"arrow\"||element.type===\"line\"||element.type===\"diamond\"){return{type:ROUNDNESS.PROPORTIONAL_RADIUS};}if(element.type===\"rectangle\"){return{type:ROUNDNESS.ADAPTIVE_RADIUS};}return null;};","map":{"version":3,"names":["ROUNDNESS","isGenericElement","element","type","isInitializedImageElement","fileId","isImageElement","isTextElement","isFrameElement","isFreeDrawElement","isFreeDrawElementType","elementType","isLinearElement","isLinearElementType","isArrowElement","isBindingElement","includeLocked","arguments","length","undefined","locked","isBindingElementType","isBindableElement","containerId","isTextBindableContainer","isExcalidrawElement","hasBoundTextElement","_element$boundElement","boundElements","some","_ref","isBoundToContainer","isUsingAdaptiveRadius","isUsingProportionalRadius","canApplyRoundnessTypeToElement","roundnessType","ADAPTIVE_RADIUS","LEGACY","PROPORTIONAL_RADIUS","getDefaultRoundnessTypeForElement"],"sources":["D:/project/excalidraw-cn/src/element/typeChecks.ts"],"sourcesContent":["import { ROUNDNESS } from \"../constants\";\nimport { AppState } from \"../types\";\nimport { MarkNonNullable } from \"../utility-types\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n  ExcalidrawBindableElement,\n  ExcalidrawGenericElement,\n  ExcalidrawFreeDrawElement,\n  InitializedExcalidrawImageElement,\n  ExcalidrawImageElement,\n  ExcalidrawTextElementWithContainer,\n  ExcalidrawTextContainer,\n  ExcalidrawFrameElement,\n  RoundnessType,\n} from \"./types\";\n\nexport const isGenericElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawGenericElement => {\n  return (\n    element != null &&\n    (element.type === \"selection\" ||\n      element.type === \"rectangle\" ||\n      element.type === \"diamond\" ||\n      element.type === \"ellipse\")\n  );\n};\n\nexport const isInitializedImageElement = (\n  element: ExcalidrawElement | null,\n): element is InitializedExcalidrawImageElement => {\n  return !!element && element.type === \"image\" && !!element.fileId;\n};\n\nexport const isImageElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawImageElement => {\n  return !!element && element.type === \"image\";\n};\n\nexport const isTextElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawTextElement => {\n  return element != null && element.type === \"text\";\n};\n\nexport const isFrameElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawFrameElement => {\n  return element != null && element.type === \"frame\";\n};\n\nexport const isFreeDrawElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawFreeDrawElement => {\n  return element != null && isFreeDrawElementType(element.type);\n};\n\nexport const isFreeDrawElementType = (\n  elementType: ExcalidrawElement[\"type\"],\n): boolean => {\n  return elementType === \"freedraw\";\n};\n\nexport const isLinearElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawLinearElement => {\n  return element != null && isLinearElementType(element.type);\n};\n\nexport const isArrowElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawLinearElement => {\n  return element != null && element.type === \"arrow\";\n};\n\nexport const isLinearElementType = (\n  elementType: AppState[\"activeTool\"][\"type\"],\n): boolean => {\n  return (\n    elementType === \"arrow\" || elementType === \"line\" // || elementType === \"freedraw\"\n  );\n};\n\nexport const isBindingElement = (\n  element?: ExcalidrawElement | null,\n  includeLocked = true,\n): element is ExcalidrawLinearElement => {\n  return (\n    element != null &&\n    (!element.locked || includeLocked === true) &&\n    isBindingElementType(element.type)\n  );\n};\n\nexport const isBindingElementType = (\n  elementType: AppState[\"activeTool\"][\"type\"],\n): boolean => {\n  return elementType === \"arrow\";\n};\n\nexport const isBindableElement = (\n  element: ExcalidrawElement | null,\n  includeLocked = true,\n): element is ExcalidrawBindableElement => {\n  return (\n    element != null &&\n    (!element.locked || includeLocked === true) &&\n    (element.type === \"rectangle\" ||\n      element.type === \"diamond\" ||\n      element.type === \"ellipse\" ||\n      element.type === \"image\" ||\n      (element.type === \"text\" && !element.containerId))\n  );\n};\n\nexport const isTextBindableContainer = (\n  element: ExcalidrawElement | null,\n  includeLocked = true,\n): element is ExcalidrawTextContainer => {\n  return (\n    element != null &&\n    (!element.locked || includeLocked === true) &&\n    (element.type === \"rectangle\" ||\n      element.type === \"diamond\" ||\n      element.type === \"ellipse\" ||\n      isArrowElement(element))\n  );\n};\n\nexport const isExcalidrawElement = (element: any): boolean => {\n  return (\n    element?.type === \"text\" ||\n    element?.type === \"diamond\" ||\n    element?.type === \"rectangle\" ||\n    element?.type === \"ellipse\" ||\n    element?.type === \"arrow\" ||\n    element?.type === \"freedraw\" ||\n    element?.type === \"line\"\n  );\n};\n\nexport const hasBoundTextElement = (\n  element: ExcalidrawElement | null,\n): element is MarkNonNullable<ExcalidrawBindableElement, \"boundElements\"> => {\n  return (\n    isTextBindableContainer(element) &&\n    !!element.boundElements?.some(({ type }) => type === \"text\")\n  );\n};\n\nexport const isBoundToContainer = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawTextElementWithContainer => {\n  return (\n    element !== null &&\n    \"containerId\" in element &&\n    element.containerId !== null &&\n    isTextElement(element)\n  );\n};\n\nexport const isUsingAdaptiveRadius = (type: string) => type === \"rectangle\";\n\nexport const isUsingProportionalRadius = (type: string) =>\n  type === \"line\" || type === \"arrow\" || type === \"diamond\";\n\nexport const canApplyRoundnessTypeToElement = (\n  roundnessType: RoundnessType,\n  element: ExcalidrawElement,\n) => {\n  if (\n    (roundnessType === ROUNDNESS.ADAPTIVE_RADIUS ||\n      // if legacy roundness, it can be applied to elements that currently\n      // use adaptive radius\n      roundnessType === ROUNDNESS.LEGACY) &&\n    isUsingAdaptiveRadius(element.type)\n  ) {\n    return true;\n  }\n  if (\n    roundnessType === ROUNDNESS.PROPORTIONAL_RADIUS &&\n    isUsingProportionalRadius(element.type)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const getDefaultRoundnessTypeForElement = (\n  element: ExcalidrawElement,\n) => {\n  if (\n    element.type === \"arrow\" ||\n    element.type === \"line\" ||\n    element.type === \"diamond\"\n  ) {\n    return {\n      type: ROUNDNESS.PROPORTIONAL_RADIUS,\n    };\n  }\n\n  if (element.type === \"rectangle\") {\n    return {\n      type: ROUNDNESS.ADAPTIVE_RADIUS,\n    };\n  }\n\n  return null;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}