{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\ColorPicker\\\\Picker.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { t } from \"../../i18n\";\nimport { ShadeList } from \"./ShadeList\";\nimport PickerColorList from \"./PickerColorList\";\nimport { useAtom } from \"jotai\";\nimport { CustomColorList } from \"./CustomColorList\";\nimport { colorPickerKeyNavHandler } from \"./keyboardNavHandlers\";\nimport PickerHeading from \"./PickerHeading\";\nimport { activeColorPickerSectionAtom, getColorNameAndShadeFromColor, getMostUsedCustomColors, isCustomColor } from \"./colorPickerUtils\";\nimport { DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX, DEFAULT_ELEMENT_STROKE_COLOR_INDEX } from \"../../colors\";\nimport { KEYS } from \"../../keys\";\nimport { EVENT } from \"../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Picker = _ref => {\n  var _colorObj$shade;\n  let {\n    color,\n    onChange,\n    label,\n    type,\n    elements,\n    palette,\n    updateData,\n    children,\n    onEyeDropperToggle,\n    onEscape\n  } = _ref;\n  const [customColors] = React.useState(() => {\n    if (type === \"canvasBackground\") {\n      return [];\n    }\n    return getMostUsedCustomColors(elements, type, palette);\n  });\n  const [activeColorPickerSection, setActiveColorPickerSection] = useAtom(activeColorPickerSectionAtom);\n  const colorObj = getColorNameAndShadeFromColor({\n    color,\n    palette\n  });\n  useEffect(() => {\n    if (!activeColorPickerSection) {\n      const isCustom = isCustomColor({\n        color,\n        palette\n      });\n      const isCustomButNotInList = isCustom && !customColors.includes(color);\n      setActiveColorPickerSection(isCustomButNotInList ? \"hex\" : isCustom ? \"custom\" : (colorObj === null || colorObj === void 0 ? void 0 : colorObj.shade) != null ? \"shades\" : \"baseColors\");\n    }\n  }, [activeColorPickerSection, color, palette, setActiveColorPickerSection, colorObj, customColors]);\n  const [activeShade, setActiveShade] = useState((_colorObj$shade = colorObj === null || colorObj === void 0 ? void 0 : colorObj.shade) !== null && _colorObj$shade !== void 0 ? _colorObj$shade : type === \"elementBackground\" ? DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX : DEFAULT_ELEMENT_STROKE_COLOR_INDEX);\n  useEffect(() => {\n    if ((colorObj === null || colorObj === void 0 ? void 0 : colorObj.shade) != null) {\n      setActiveShade(colorObj.shade);\n    }\n    const keyup = event => {\n      if (event.key === KEYS.ALT) {\n        onEyeDropperToggle(false);\n      }\n    };\n    document.addEventListener(EVENT.KEYUP, keyup, {\n      capture: true\n    });\n    return () => {\n      document.removeEventListener(EVENT.KEYUP, keyup, {\n        capture: true\n      });\n    };\n  }, [colorObj, onEyeDropperToggle]);\n  const pickerRef = React.useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-label\": t(\"labels.colorPicker\"),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: pickerRef,\n      onKeyDown: event => {\n        const handled = colorPickerKeyNavHandler({\n          event,\n          activeColorPickerSection,\n          palette,\n          color,\n          onChange,\n          onEyeDropperToggle,\n          customColors,\n          setActiveColorPickerSection,\n          updateData,\n          activeShade,\n          onEscape\n        });\n        if (handled) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      },\n      className: \"color-picker-content\"\n      // to allow focusing by clicking but not by tabbing\n      ,\n      tabIndex: -1,\n      children: [!!customColors.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(PickerHeading, {\n          children: t(\"colorPicker.mostUsedCustomColors\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomColorList, {\n          colors: customColors,\n          color: color,\n          label: t(\"colorPicker.mostUsedCustomColors\"),\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(PickerHeading, {\n          children: t(\"colorPicker.colors\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PickerColorList, {\n          color: color,\n          label: label,\n          palette: palette,\n          onChange: onChange,\n          activeShade: activeShade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(PickerHeading, {\n          children: t(\"colorPicker.shades\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShadeList, {\n          hex: color,\n          onChange: onChange,\n          palette: palette\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["React","useEffect","useState","t","ShadeList","PickerColorList","useAtom","CustomColorList","colorPickerKeyNavHandler","PickerHeading","activeColorPickerSectionAtom","getColorNameAndShadeFromColor","getMostUsedCustomColors","isCustomColor","DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX","DEFAULT_ELEMENT_STROKE_COLOR_INDEX","KEYS","EVENT","jsxDEV","_jsxDEV","Picker","_ref","_colorObj$shade","color","onChange","label","type","elements","palette","updateData","children","onEyeDropperToggle","onEscape","customColors","activeColorPickerSection","setActiveColorPickerSection","colorObj","isCustom","isCustomButNotInList","includes","shade","activeShade","setActiveShade","keyup","event","key","ALT","document","addEventListener","KEYUP","capture","removeEventListener","pickerRef","useRef","role","ref","onKeyDown","handled","preventDefault","stopPropagation","className","tabIndex","length","fileName","_jsxFileName","lineNumber","columnNumber","colors","hex"],"sources":["D:/project/excalidraw-cn/src/components/ColorPicker/Picker.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { t } from \"../../i18n\";\n\nimport { ExcalidrawElement } from \"../../element/types\";\nimport { ShadeList } from \"./ShadeList\";\n\nimport PickerColorList from \"./PickerColorList\";\nimport { useAtom } from \"jotai\";\nimport { CustomColorList } from \"./CustomColorList\";\nimport { colorPickerKeyNavHandler } from \"./keyboardNavHandlers\";\nimport PickerHeading from \"./PickerHeading\";\nimport {\n  ColorPickerType,\n  activeColorPickerSectionAtom,\n  getColorNameAndShadeFromColor,\n  getMostUsedCustomColors,\n  isCustomColor,\n} from \"./colorPickerUtils\";\nimport {\n  ColorPaletteCustom,\n  DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX,\n  DEFAULT_ELEMENT_STROKE_COLOR_INDEX,\n} from \"../../colors\";\nimport { KEYS } from \"../../keys\";\nimport { EVENT } from \"../../constants\";\n\ninterface PickerProps {\n  color: string;\n  onChange: (color: string) => void;\n  label: string;\n  type: ColorPickerType;\n  elements: readonly ExcalidrawElement[];\n  palette: ColorPaletteCustom;\n  updateData: (formData?: any) => void;\n  children?: React.ReactNode;\n  onEyeDropperToggle: (force?: boolean) => void;\n  onEscape: (event: React.KeyboardEvent | KeyboardEvent) => void;\n}\n\nexport const Picker = ({\n  color,\n  onChange,\n  label,\n  type,\n  elements,\n  palette,\n  updateData,\n  children,\n  onEyeDropperToggle,\n  onEscape,\n}: PickerProps) => {\n  const [customColors] = React.useState(() => {\n    if (type === \"canvasBackground\") {\n      return [];\n    }\n    return getMostUsedCustomColors(elements, type, palette);\n  });\n\n  const [activeColorPickerSection, setActiveColorPickerSection] = useAtom(\n    activeColorPickerSectionAtom,\n  );\n\n  const colorObj = getColorNameAndShadeFromColor({\n    color,\n    palette,\n  });\n\n  useEffect(() => {\n    if (!activeColorPickerSection) {\n      const isCustom = isCustomColor({ color, palette });\n      const isCustomButNotInList = isCustom && !customColors.includes(color);\n\n      setActiveColorPickerSection(\n        isCustomButNotInList\n          ? \"hex\"\n          : isCustom\n          ? \"custom\"\n          : colorObj?.shade != null\n          ? \"shades\"\n          : \"baseColors\",\n      );\n    }\n  }, [\n    activeColorPickerSection,\n    color,\n    palette,\n    setActiveColorPickerSection,\n    colorObj,\n    customColors,\n  ]);\n\n  const [activeShade, setActiveShade] = useState(\n    colorObj?.shade ??\n      (type === \"elementBackground\"\n        ? DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX\n        : DEFAULT_ELEMENT_STROKE_COLOR_INDEX),\n  );\n\n  useEffect(() => {\n    if (colorObj?.shade != null) {\n      setActiveShade(colorObj.shade);\n    }\n\n    const keyup = (event: KeyboardEvent) => {\n      if (event.key === KEYS.ALT) {\n        onEyeDropperToggle(false);\n      }\n    };\n    document.addEventListener(EVENT.KEYUP, keyup, { capture: true });\n    return () => {\n      document.removeEventListener(EVENT.KEYUP, keyup, { capture: true });\n    };\n  }, [colorObj, onEyeDropperToggle]);\n\n  const pickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <div role=\"dialog\" aria-modal=\"true\" aria-label={t(\"labels.colorPicker\")}>\n      <div\n        ref={pickerRef}\n        onKeyDown={(event) => {\n          const handled = colorPickerKeyNavHandler({\n            event,\n            activeColorPickerSection,\n            palette,\n            color,\n            onChange,\n            onEyeDropperToggle,\n            customColors,\n            setActiveColorPickerSection,\n            updateData,\n            activeShade,\n            onEscape,\n          });\n\n          if (handled) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }}\n        className=\"color-picker-content\"\n        // to allow focusing by clicking but not by tabbing\n        tabIndex={-1}\n      >\n        {!!customColors.length && (\n          <div>\n            <PickerHeading>\n              {t(\"colorPicker.mostUsedCustomColors\")}\n            </PickerHeading>\n            <CustomColorList\n              colors={customColors}\n              color={color}\n              label={t(\"colorPicker.mostUsedCustomColors\")}\n              onChange={onChange}\n            />\n          </div>\n        )}\n\n        <div>\n          <PickerHeading>{t(\"colorPicker.colors\")}</PickerHeading>\n          <PickerColorList\n            color={color}\n            label={label}\n            palette={palette}\n            onChange={onChange}\n            activeShade={activeShade}\n          />\n        </div>\n\n        <div>\n          <PickerHeading>{t(\"colorPicker.shades\")}</PickerHeading>\n          <ShadeList hex={color} onChange={onChange} palette={palette} />\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}