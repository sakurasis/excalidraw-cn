{"ast":null,"code":"import { isDarwin } from \"../constants\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nconst shortcutMap = {\n  toggleTheme: [getShortcutKey(\"Shift+Alt+D\")],\n  saveScene: [getShortcutKey(\"CtrlOrCmd+S\")],\n  loadScene: [getShortcutKey(\"CtrlOrCmd+O\")],\n  clearCanvas: [getShortcutKey(\"CtrlOrCmd+Delete\")],\n  imageExport: [getShortcutKey(\"CtrlOrCmd+Shift+E\")],\n  cut: [getShortcutKey(\"CtrlOrCmd+X\")],\n  copy: [getShortcutKey(\"CtrlOrCmd+C\")],\n  paste: [getShortcutKey(\"CtrlOrCmd+V\")],\n  copyStyles: [getShortcutKey(\"CtrlOrCmd+Alt+C\")],\n  pasteStyles: [getShortcutKey(\"CtrlOrCmd+Alt+V\")],\n  selectAll: [getShortcutKey(\"CtrlOrCmd+A\")],\n  deleteSelectedElements: [getShortcutKey(\"Delete\")],\n  duplicateSelection: [getShortcutKey(\"CtrlOrCmd+D\"), getShortcutKey(`Alt+${t(\"helpDialog.drag\")}`)],\n  sendBackward: [getShortcutKey(\"CtrlOrCmd+[\")],\n  bringForward: [getShortcutKey(\"CtrlOrCmd+]\")],\n  sendToBack: [isDarwin ? getShortcutKey(\"CtrlOrCmd+Alt+[\") : getShortcutKey(\"CtrlOrCmd+Shift+[\")],\n  bringToFront: [isDarwin ? getShortcutKey(\"CtrlOrCmd+Alt+]\") : getShortcutKey(\"CtrlOrCmd+Shift+]\")],\n  copyAsPng: [getShortcutKey(\"Shift+Alt+C\")],\n  copyAsSvg: [],\n  group: [getShortcutKey(\"CtrlOrCmd+G\")],\n  ungroup: [getShortcutKey(\"CtrlOrCmd+Shift+G\")],\n  gridMode: [getShortcutKey(\"CtrlOrCmd+'\")],\n  zenMode: [getShortcutKey(\"Alt+Z\")],\n  stats: [getShortcutKey(\"Alt+/\")],\n  addToLibrary: [],\n  flipHorizontal: [getShortcutKey(\"Shift+H\")],\n  flipVertical: [getShortcutKey(\"Shift+V\")],\n  viewMode: [getShortcutKey(\"Alt+R\")],\n  hyperlink: [getShortcutKey(\"CtrlOrCmd+K\")],\n  toggleElementLock: [getShortcutKey(\"CtrlOrCmd+Shift+L\")]\n};\nexport const getShortcutFromShortcutName = name => {\n  const shortcuts = shortcutMap[name];\n  // if multiple shortcuts available, take the first one\n  return shortcuts && shortcuts.length > 0 ? shortcuts[0] : \"\";\n};","map":{"version":3,"names":["isDarwin","t","getShortcutKey","shortcutMap","toggleTheme","saveScene","loadScene","clearCanvas","imageExport","cut","copy","paste","copyStyles","pasteStyles","selectAll","deleteSelectedElements","duplicateSelection","sendBackward","bringForward","sendToBack","bringToFront","copyAsPng","copyAsSvg","group","ungroup","gridMode","zenMode","stats","addToLibrary","flipHorizontal","flipVertical","viewMode","hyperlink","toggleElementLock","getShortcutFromShortcutName","name","shortcuts","length"],"sources":["D:/project/excalidraw-cn/src/actions/shortcuts.ts"],"sourcesContent":["import { isDarwin } from \"../constants\";\nimport { t } from \"../i18n\";\nimport { SubtypeOf } from \"../utility-types\";\nimport { getShortcutKey } from \"../utils\";\nimport { ActionName } from \"./types\";\n\nexport type ShortcutName =\n  | SubtypeOf<\n      ActionName,\n      | \"toggleTheme\"\n      | \"loadScene\"\n      | \"clearCanvas\"\n      | \"cut\"\n      | \"copy\"\n      | \"paste\"\n      | \"copyStyles\"\n      | \"pasteStyles\"\n      | \"selectAll\"\n      | \"deleteSelectedElements\"\n      | \"duplicateSelection\"\n      | \"sendBackward\"\n      | \"bringForward\"\n      | \"sendToBack\"\n      | \"bringToFront\"\n      | \"copyAsPng\"\n      | \"copyAsSvg\"\n      | \"group\"\n      | \"ungroup\"\n      | \"gridMode\"\n      | \"zenMode\"\n      | \"stats\"\n      | \"addToLibrary\"\n      | \"viewMode\"\n      | \"flipHorizontal\"\n      | \"flipVertical\"\n      | \"hyperlink\"\n      | \"toggleElementLock\"\n    >\n  | \"saveScene\"\n  | \"imageExport\";\n\nconst shortcutMap: Record<ShortcutName, string[]> = {\n  toggleTheme: [getShortcutKey(\"Shift+Alt+D\")],\n  saveScene: [getShortcutKey(\"CtrlOrCmd+S\")],\n  loadScene: [getShortcutKey(\"CtrlOrCmd+O\")],\n  clearCanvas: [getShortcutKey(\"CtrlOrCmd+Delete\")],\n  imageExport: [getShortcutKey(\"CtrlOrCmd+Shift+E\")],\n  cut: [getShortcutKey(\"CtrlOrCmd+X\")],\n  copy: [getShortcutKey(\"CtrlOrCmd+C\")],\n  paste: [getShortcutKey(\"CtrlOrCmd+V\")],\n  copyStyles: [getShortcutKey(\"CtrlOrCmd+Alt+C\")],\n  pasteStyles: [getShortcutKey(\"CtrlOrCmd+Alt+V\")],\n  selectAll: [getShortcutKey(\"CtrlOrCmd+A\")],\n  deleteSelectedElements: [getShortcutKey(\"Delete\")],\n  duplicateSelection: [\n    getShortcutKey(\"CtrlOrCmd+D\"),\n    getShortcutKey(`Alt+${t(\"helpDialog.drag\")}`),\n  ],\n  sendBackward: [getShortcutKey(\"CtrlOrCmd+[\")],\n  bringForward: [getShortcutKey(\"CtrlOrCmd+]\")],\n  sendToBack: [\n    isDarwin\n      ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n      : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n  ],\n  bringToFront: [\n    isDarwin\n      ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n      : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n  ],\n  copyAsPng: [getShortcutKey(\"Shift+Alt+C\")],\n  copyAsSvg: [],\n  group: [getShortcutKey(\"CtrlOrCmd+G\")],\n  ungroup: [getShortcutKey(\"CtrlOrCmd+Shift+G\")],\n  gridMode: [getShortcutKey(\"CtrlOrCmd+'\")],\n  zenMode: [getShortcutKey(\"Alt+Z\")],\n  stats: [getShortcutKey(\"Alt+/\")],\n  addToLibrary: [],\n  flipHorizontal: [getShortcutKey(\"Shift+H\")],\n  flipVertical: [getShortcutKey(\"Shift+V\")],\n  viewMode: [getShortcutKey(\"Alt+R\")],\n  hyperlink: [getShortcutKey(\"CtrlOrCmd+K\")],\n  toggleElementLock: [getShortcutKey(\"CtrlOrCmd+Shift+L\")],\n};\n\nexport const getShortcutFromShortcutName = (name: ShortcutName) => {\n  const shortcuts = shortcutMap[name];\n  // if multiple shortcuts available, take the first one\n  return shortcuts && shortcuts.length > 0 ? shortcuts[0] : \"\";\n};\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,cAAc;AACvC,SAASC,CAAC,QAAQ,SAAS;AAE3B,SAASC,cAAc,QAAQ,UAAU;AAsCzC,MAAMC,WAA2C,GAAG;EAClDC,WAAW,EAAE,CAACF,cAAc,CAAC,aAAa,CAAC,CAAC;EAC5CG,SAAS,EAAE,CAACH,cAAc,CAAC,aAAa,CAAC,CAAC;EAC1CI,SAAS,EAAE,CAACJ,cAAc,CAAC,aAAa,CAAC,CAAC;EAC1CK,WAAW,EAAE,CAACL,cAAc,CAAC,kBAAkB,CAAC,CAAC;EACjDM,WAAW,EAAE,CAACN,cAAc,CAAC,mBAAmB,CAAC,CAAC;EAClDO,GAAG,EAAE,CAACP,cAAc,CAAC,aAAa,CAAC,CAAC;EACpCQ,IAAI,EAAE,CAACR,cAAc,CAAC,aAAa,CAAC,CAAC;EACrCS,KAAK,EAAE,CAACT,cAAc,CAAC,aAAa,CAAC,CAAC;EACtCU,UAAU,EAAE,CAACV,cAAc,CAAC,iBAAiB,CAAC,CAAC;EAC/CW,WAAW,EAAE,CAACX,cAAc,CAAC,iBAAiB,CAAC,CAAC;EAChDY,SAAS,EAAE,CAACZ,cAAc,CAAC,aAAa,CAAC,CAAC;EAC1Ca,sBAAsB,EAAE,CAACb,cAAc,CAAC,QAAQ,CAAC,CAAC;EAClDc,kBAAkB,EAAE,CAClBd,cAAc,CAAC,aAAa,CAAC,EAC7BA,cAAc,CAAE,OAAMD,CAAC,CAAC,iBAAiB,CAAE,EAAC,CAAC,CAC9C;EACDgB,YAAY,EAAE,CAACf,cAAc,CAAC,aAAa,CAAC,CAAC;EAC7CgB,YAAY,EAAE,CAAChB,cAAc,CAAC,aAAa,CAAC,CAAC;EAC7CiB,UAAU,EAAE,CACVnB,QAAQ,GACJE,cAAc,CAAC,iBAAiB,CAAC,GACjCA,cAAc,CAAC,mBAAmB,CAAC,CACxC;EACDkB,YAAY,EAAE,CACZpB,QAAQ,GACJE,cAAc,CAAC,iBAAiB,CAAC,GACjCA,cAAc,CAAC,mBAAmB,CAAC,CACxC;EACDmB,SAAS,EAAE,CAACnB,cAAc,CAAC,aAAa,CAAC,CAAC;EAC1CoB,SAAS,EAAE,EAAE;EACbC,KAAK,EAAE,CAACrB,cAAc,CAAC,aAAa,CAAC,CAAC;EACtCsB,OAAO,EAAE,CAACtB,cAAc,CAAC,mBAAmB,CAAC,CAAC;EAC9CuB,QAAQ,EAAE,CAACvB,cAAc,CAAC,aAAa,CAAC,CAAC;EACzCwB,OAAO,EAAE,CAACxB,cAAc,CAAC,OAAO,CAAC,CAAC;EAClCyB,KAAK,EAAE,CAACzB,cAAc,CAAC,OAAO,CAAC,CAAC;EAChC0B,YAAY,EAAE,EAAE;EAChBC,cAAc,EAAE,CAAC3B,cAAc,CAAC,SAAS,CAAC,CAAC;EAC3C4B,YAAY,EAAE,CAAC5B,cAAc,CAAC,SAAS,CAAC,CAAC;EACzC6B,QAAQ,EAAE,CAAC7B,cAAc,CAAC,OAAO,CAAC,CAAC;EACnC8B,SAAS,EAAE,CAAC9B,cAAc,CAAC,aAAa,CAAC,CAAC;EAC1C+B,iBAAiB,EAAE,CAAC/B,cAAc,CAAC,mBAAmB,CAAC;AACzD,CAAC;AAED,OAAO,MAAMgC,2BAA2B,GAAIC,IAAkB,IAAK;EACjE,MAAMC,SAAS,GAAGjC,WAAW,CAACgC,IAAI,CAAC;EACnC;EACA,OAAOC,SAAS,IAAIA,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;AAC9D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}