{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import{PRECEDING_ELEMENT_KEY}from\"../../constants\";import{arrayToMapWithIndex}from\"../../utils\";var shouldDiscardRemoteElement=function shouldDiscardRemoteElement(localAppState,local,remote){var _localAppState$editin,_localAppState$resizi,_localAppState$draggi;if(local&&(// local element is being edited\nlocal.id===((_localAppState$editin=localAppState.editingElement)===null||_localAppState$editin===void 0?void 0:_localAppState$editin.id)||local.id===((_localAppState$resizi=localAppState.resizingElement)===null||_localAppState$resizi===void 0?void 0:_localAppState$resizi.id)||local.id===((_localAppState$draggi=localAppState.draggingElement)===null||_localAppState$draggi===void 0?void 0:_localAppState$draggi.id)||// local element is newer\nlocal.version>remote.version||// resolve conflicting edits deterministically by taking the one with\n// the lowest versionNonce\nlocal.version===remote.version&&local.versionNonce<remote.versionNonce)){return true;}return false;};export var reconcileElements=function reconcileElements(localElements,remoteElements,localAppState){var localElementsData=arrayToMapWithIndex(localElements);var reconciledElements=localElements.slice();var duplicates=new WeakMap();var cursor=0;var offset=0;var remoteElementIdx=-1;var _iterator=_createForOfIteratorHelper(remoteElements),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _remoteElements;var remoteElement=_step.value;remoteElementIdx++;var local=localElementsData.get(remoteElement.id);if(shouldDiscardRemoteElement(localAppState,local===null||local===void 0?void 0:local[0],remoteElement)){if(remoteElement[PRECEDING_ELEMENT_KEY]){delete remoteElement[PRECEDING_ELEMENT_KEY];}continue;}// Mark duplicate for removal as it'll be replaced with the remote element\nif(local){// Unless the remote and local elements are the same element in which case\n// we need to keep it as we'd otherwise discard it from the resulting\n// array.\nif(local[0]===remoteElement){continue;}duplicates.set(local[0],true);}// parent may not be defined in case the remote client is running an older\n// excalidraw version\nvar parent=remoteElement[PRECEDING_ELEMENT_KEY]||((_remoteElements=remoteElements[remoteElementIdx-1])===null||_remoteElements===void 0?void 0:_remoteElements.id)||null;if(parent!=null){delete remoteElement[PRECEDING_ELEMENT_KEY];// ^ indicates the element is the first in elements array\nif(parent===\"^\"){offset++;if(cursor===0){reconciledElements.unshift(remoteElement);localElementsData.set(remoteElement.id,[remoteElement,cursor-offset]);}else{reconciledElements.splice(cursor+1,0,remoteElement);localElementsData.set(remoteElement.id,[remoteElement,cursor+1-offset]);cursor++;}}else{var idx=localElementsData.has(parent)?localElementsData.get(parent)[1]:null;if(idx!=null){idx+=offset;}if(idx!=null&&idx>=cursor){reconciledElements.splice(idx+1,0,remoteElement);offset++;localElementsData.set(remoteElement.id,[remoteElement,idx+1-offset]);cursor=idx+1;}else if(idx!=null){reconciledElements.splice(cursor+1,0,remoteElement);offset++;localElementsData.set(remoteElement.id,[remoteElement,cursor+1-offset]);cursor++;}else{reconciledElements.push(remoteElement);localElementsData.set(remoteElement.id,[remoteElement,reconciledElements.length-1-offset]);}}// no parent z-index information, local element exists → replace in place\n}else if(local){reconciledElements[local[1]]=remoteElement;localElementsData.set(remoteElement.id,[remoteElement,local[1]]);// otherwise push to the end\n}else{reconciledElements.push(remoteElement);localElementsData.set(remoteElement.id,[remoteElement,reconciledElements.length-1-offset]);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}var ret=reconciledElements.filter(function(element){return!duplicates.has(element);});return ret;};","map":{"version":3,"names":["PRECEDING_ELEMENT_KEY","arrayToMapWithIndex","shouldDiscardRemoteElement","localAppState","local","remote","_localAppState$editin","_localAppState$resizi","_localAppState$draggi","id","editingElement","resizingElement","draggingElement","version","versionNonce","reconcileElements","localElements","remoteElements","localElementsData","reconciledElements","slice","duplicates","WeakMap","cursor","offset","remoteElementIdx","_iterator","_createForOfIteratorHelper","_step","s","n","done","_remoteElements","remoteElement","value","get","set","parent","unshift","splice","idx","has","push","length","err","e","f","ret","filter","element"],"sources":["D:/project/excalidraw-cn/src/excalidraw-app/collab/reconciliation.ts"],"sourcesContent":["import { PRECEDING_ELEMENT_KEY } from \"../../constants\";\nimport { ExcalidrawElement } from \"../../element/types\";\nimport { AppState } from \"../../types\";\nimport { arrayToMapWithIndex } from \"../../utils\";\n\nexport type ReconciledElements = readonly ExcalidrawElement[] & {\n  _brand: \"reconciledElements\";\n};\n\nexport type BroadcastedExcalidrawElement = ExcalidrawElement & {\n  [PRECEDING_ELEMENT_KEY]?: string;\n};\n\nconst shouldDiscardRemoteElement = (\n  localAppState: AppState,\n  local: ExcalidrawElement | undefined,\n  remote: BroadcastedExcalidrawElement,\n): boolean => {\n  if (\n    local &&\n    // local element is being edited\n    (local.id === localAppState.editingElement?.id ||\n      local.id === localAppState.resizingElement?.id ||\n      local.id === localAppState.draggingElement?.id ||\n      // local element is newer\n      local.version > remote.version ||\n      // resolve conflicting edits deterministically by taking the one with\n      // the lowest versionNonce\n      (local.version === remote.version &&\n        local.versionNonce < remote.versionNonce))\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const reconcileElements = (\n  localElements: readonly ExcalidrawElement[],\n  remoteElements: readonly BroadcastedExcalidrawElement[],\n  localAppState: AppState,\n): ReconciledElements => {\n  const localElementsData =\n    arrayToMapWithIndex<ExcalidrawElement>(localElements);\n\n  const reconciledElements: ExcalidrawElement[] = localElements.slice();\n\n  const duplicates = new WeakMap<ExcalidrawElement, true>();\n\n  let cursor = 0;\n  let offset = 0;\n\n  let remoteElementIdx = -1;\n  for (const remoteElement of remoteElements) {\n    remoteElementIdx++;\n\n    const local = localElementsData.get(remoteElement.id);\n\n    if (shouldDiscardRemoteElement(localAppState, local?.[0], remoteElement)) {\n      if (remoteElement[PRECEDING_ELEMENT_KEY]) {\n        delete remoteElement[PRECEDING_ELEMENT_KEY];\n      }\n\n      continue;\n    }\n\n    // Mark duplicate for removal as it'll be replaced with the remote element\n    if (local) {\n      // Unless the remote and local elements are the same element in which case\n      // we need to keep it as we'd otherwise discard it from the resulting\n      // array.\n      if (local[0] === remoteElement) {\n        continue;\n      }\n      duplicates.set(local[0], true);\n    }\n\n    // parent may not be defined in case the remote client is running an older\n    // excalidraw version\n    const parent =\n      remoteElement[PRECEDING_ELEMENT_KEY] ||\n      remoteElements[remoteElementIdx - 1]?.id ||\n      null;\n\n    if (parent != null) {\n      delete remoteElement[PRECEDING_ELEMENT_KEY];\n\n      // ^ indicates the element is the first in elements array\n      if (parent === \"^\") {\n        offset++;\n        if (cursor === 0) {\n          reconciledElements.unshift(remoteElement);\n          localElementsData.set(remoteElement.id, [\n            remoteElement,\n            cursor - offset,\n          ]);\n        } else {\n          reconciledElements.splice(cursor + 1, 0, remoteElement);\n          localElementsData.set(remoteElement.id, [\n            remoteElement,\n            cursor + 1 - offset,\n          ]);\n          cursor++;\n        }\n      } else {\n        let idx = localElementsData.has(parent)\n          ? localElementsData.get(parent)![1]\n          : null;\n        if (idx != null) {\n          idx += offset;\n        }\n        if (idx != null && idx >= cursor) {\n          reconciledElements.splice(idx + 1, 0, remoteElement);\n          offset++;\n          localElementsData.set(remoteElement.id, [\n            remoteElement,\n            idx + 1 - offset,\n          ]);\n          cursor = idx + 1;\n        } else if (idx != null) {\n          reconciledElements.splice(cursor + 1, 0, remoteElement);\n          offset++;\n          localElementsData.set(remoteElement.id, [\n            remoteElement,\n            cursor + 1 - offset,\n          ]);\n          cursor++;\n        } else {\n          reconciledElements.push(remoteElement);\n          localElementsData.set(remoteElement.id, [\n            remoteElement,\n            reconciledElements.length - 1 - offset,\n          ]);\n        }\n      }\n      // no parent z-index information, local element exists → replace in place\n    } else if (local) {\n      reconciledElements[local[1]] = remoteElement;\n      localElementsData.set(remoteElement.id, [remoteElement, local[1]]);\n      // otherwise push to the end\n    } else {\n      reconciledElements.push(remoteElement);\n      localElementsData.set(remoteElement.id, [\n        remoteElement,\n        reconciledElements.length - 1 - offset,\n      ]);\n    }\n  }\n\n  const ret: readonly ExcalidrawElement[] = reconciledElements.filter(\n    (element) => !duplicates.has(element),\n  );\n\n  return ret as ReconciledElements;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}