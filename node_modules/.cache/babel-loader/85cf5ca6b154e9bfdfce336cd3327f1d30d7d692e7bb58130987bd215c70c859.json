{"ast":null,"code":"import { __assign } from \"tslib\";\n/** This function adds duration since Sentry was initialized till the time event was sent */\nvar SessionTiming = /** @class */function () {\n  function SessionTiming() {\n    /**\n     * @inheritDoc\n     */\n    this.name = SessionTiming.id;\n    /** Exact time Client was initialized expressed in milliseconds since Unix Epoch. */\n    this._startTime = Date.now();\n  }\n  /**\n   * @inheritDoc\n   */\n  SessionTiming.prototype.setupOnce = function (addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor(function (event) {\n      var self = getCurrentHub().getIntegration(SessionTiming);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  SessionTiming.prototype.process = function (event) {\n    var _a;\n    var now = Date.now();\n    return __assign(__assign({}, event), {\n      extra: __assign(__assign({}, event.extra), (_a = {}, _a['session:start'] = this._startTime, _a['session:duration'] = now - this._startTime, _a['session:end'] = now, _a))\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  SessionTiming.id = 'SessionTiming';\n  return SessionTiming;\n}();\nexport { SessionTiming };","map":{"version":3,"names":["SessionTiming","name","id","_startTime","Date","now","prototype","setupOnce","addGlobalEventProcessor","getCurrentHub","event","self","getIntegration","process","__assign","extra","_a"],"sources":["D:\\project\\excalidraw-cn\\node_modules\\@sentry\\integrations\\src\\sessiontiming.ts"],"sourcesContent":["import { Event, EventProcessor, Hub, Integration } from '@sentry/types';\n\n/** This function adds duration since Sentry was initialized till the time event was sent */\nexport class SessionTiming implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'SessionTiming';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = SessionTiming.id;\n\n  /** Exact time Client was initialized expressed in milliseconds since Unix Epoch. */\n  protected readonly _startTime: number = Date.now();\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(SessionTiming);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public process(event: Event): Event {\n    const now = Date.now();\n\n    return {\n      ...event,\n      extra: {\n        ...event.extra,\n        ['session:start']: this._startTime,\n        ['session:duration']: now - this._startTime,\n        ['session:end']: now,\n      },\n    };\n  }\n}\n"],"mappings":";AAEA;AACA,IAAAA,aAAA;EAAA,SAAAA,cAAA;IAME;;;IAGO,KAAAC,IAAI,GAAWD,aAAa,CAACE,EAAE;IAEtC;IACmB,KAAAC,UAAU,GAAWC,IAAI,CAACC,GAAG,EAAE;EA+BpD;EA7BE;;;EAGOL,aAAA,CAAAM,SAAA,CAAAC,SAAS,GAAhB,UAAiBC,uBAA2D,EAAEC,aAAwB;IACpGD,uBAAuB,CAAC,UAAAE,KAAK;MAC3B,IAAMC,IAAI,GAAGF,aAAa,EAAE,CAACG,cAAc,CAACZ,aAAa,CAAC;MAC1D,IAAIW,IAAI,EAAE;QACR,OAAOA,IAAI,CAACE,OAAO,CAACH,KAAK,CAAC;;MAE5B,OAAOA,KAAK;IACd,CAAC,CAAC;EACJ,CAAC;EAED;;;EAGOV,aAAA,CAAAM,SAAA,CAAAO,OAAO,GAAd,UAAeH,KAAY;;IACzB,IAAML,GAAG,GAAGD,IAAI,CAACC,GAAG,EAAE;IAEtB,OAAAS,QAAA,CAAAA,QAAA,KACKJ,KAAK;MACRK,KAAK,EAAAD,QAAA,CAAAA,QAAA,KACAJ,KAAK,CAACK,KAAK,IAAAC,EAAA,OAAAA,EAAA,CACb,eAAe,IAAG,IAAI,CAACb,UAAU,EAAAa,EAAA,CACjC,kBAAkB,IAAGX,GAAG,GAAG,IAAI,CAACF,UAAU,EAAAa,EAAA,CAC1C,aAAa,IAAGX,GAAG,EAAAW,EAAA;IAAA;EAG1B,CAAC;EAzCD;;;EAGchB,aAAA,CAAAE,EAAE,GAAW,eAAe;EAuC5C,OAAAF,aAAC;CAAA,EA3CD;SAAaA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}