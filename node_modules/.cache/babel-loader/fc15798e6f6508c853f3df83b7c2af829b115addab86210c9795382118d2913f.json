{"ast":null,"code":"import{MIN_ZOOM}from\"../constants\";export var getNormalizedZoom=function getNormalizedZoom(zoom){return Math.max(MIN_ZOOM,Math.min(zoom,30));};export var getStateForZoom=function getStateForZoom(_ref,appState){var viewportX=_ref.viewportX,viewportY=_ref.viewportY,nextZoom=_ref.nextZoom;var appLayerX=viewportX-appState.offsetLeft;var appLayerY=viewportY-appState.offsetTop;var currentZoom=appState.zoom.value;// get original scroll position without zoom\nvar baseScrollX=appState.scrollX+(appLayerX-appLayerX/currentZoom);var baseScrollY=appState.scrollY+(appLayerY-appLayerY/currentZoom);// get scroll offsets for target zoom level\nvar zoomOffsetScrollX=-(appLayerX-appLayerX/nextZoom);var zoomOffsetScrollY=-(appLayerY-appLayerY/nextZoom);return{scrollX:baseScrollX+zoomOffsetScrollX,scrollY:baseScrollY+zoomOffsetScrollY,zoom:{value:nextZoom}};};","map":{"version":3,"names":["MIN_ZOOM","getNormalizedZoom","zoom","Math","max","min","getStateForZoom","_ref","appState","viewportX","viewportY","nextZoom","appLayerX","offsetLeft","appLayerY","offsetTop","currentZoom","value","baseScrollX","scrollX","baseScrollY","scrollY","zoomOffsetScrollX","zoomOffsetScrollY"],"sources":["D:/project/excalidraw-cn/src/scene/zoom.ts"],"sourcesContent":["import { MIN_ZOOM } from \"../constants\";\nimport { AppState, NormalizedZoomValue } from \"../types\";\n\nexport const getNormalizedZoom = (zoom: number): NormalizedZoomValue => {\n  return Math.max(MIN_ZOOM, Math.min(zoom, 30)) as NormalizedZoomValue;\n};\n\nexport const getStateForZoom = (\n  {\n    viewportX,\n    viewportY,\n    nextZoom,\n  }: {\n    viewportX: number;\n    viewportY: number;\n    nextZoom: NormalizedZoomValue;\n  },\n  appState: AppState,\n) => {\n  const appLayerX = viewportX - appState.offsetLeft;\n  const appLayerY = viewportY - appState.offsetTop;\n\n  const currentZoom = appState.zoom.value;\n\n  // get original scroll position without zoom\n  const baseScrollX = appState.scrollX + (appLayerX - appLayerX / currentZoom);\n  const baseScrollY = appState.scrollY + (appLayerY - appLayerY / currentZoom);\n\n  // get scroll offsets for target zoom level\n  const zoomOffsetScrollX = -(appLayerX - appLayerX / nextZoom);\n  const zoomOffsetScrollY = -(appLayerY - appLayerY / nextZoom);\n\n  return {\n    scrollX: baseScrollX + zoomOffsetScrollX,\n    scrollY: baseScrollY + zoomOffsetScrollY,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,cAAc,CAGvC,MAAO,IAAM,CAAAC,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,IAAY,CAA0B,CACtE,MAAO,CAAAC,IAAI,CAACC,GAAG,CAACJ,QAAQ,CAAEG,IAAI,CAACE,GAAG,CAACH,IAAI,CAAE,EAAE,CAAC,CAAC,CAC/C,CAAC,CAED,MAAO,IAAM,CAAAI,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAAC,IAAA,CAU1BC,QAAkB,CACf,IATD,CAAAC,SAAS,CAAAF,IAAA,CAATE,SAAS,CACTC,SAAS,CAAAH,IAAA,CAATG,SAAS,CACTC,QAAQ,CAAAJ,IAAA,CAARI,QAAQ,CAQV,GAAM,CAAAC,SAAS,CAAGH,SAAS,CAAGD,QAAQ,CAACK,UAAU,CACjD,GAAM,CAAAC,SAAS,CAAGJ,SAAS,CAAGF,QAAQ,CAACO,SAAS,CAEhD,GAAM,CAAAC,WAAW,CAAGR,QAAQ,CAACN,IAAI,CAACe,KAAK,CAEvC;AACA,GAAM,CAAAC,WAAW,CAAGV,QAAQ,CAACW,OAAO,EAAIP,SAAS,CAAGA,SAAS,CAAGI,WAAW,CAAC,CAC5E,GAAM,CAAAI,WAAW,CAAGZ,QAAQ,CAACa,OAAO,EAAIP,SAAS,CAAGA,SAAS,CAAGE,WAAW,CAAC,CAE5E;AACA,GAAM,CAAAM,iBAAiB,CAAG,EAAEV,SAAS,CAAGA,SAAS,CAAGD,QAAQ,CAAC,CAC7D,GAAM,CAAAY,iBAAiB,CAAG,EAAET,SAAS,CAAGA,SAAS,CAAGH,QAAQ,CAAC,CAE7D,MAAO,CACLQ,OAAO,CAAED,WAAW,CAAGI,iBAAiB,CACxCD,OAAO,CAAED,WAAW,CAAGG,iBAAiB,CACxCrB,IAAI,CAAE,CACJe,KAAK,CAAEN,QACT,CACF,CAAC,CACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}