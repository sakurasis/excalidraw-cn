{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{newElementWith}from\"./element/mutateElement\";import{getMaximumGroups}from\"./groups\";import{getCommonBoundingBox}from\"./element/bounds\";export var distributeElements=function distributeElements(selectedElements,distribution){var _ref=distribution.axis===\"x\"?[\"minX\",\"midX\",\"maxX\",\"width\"]:[\"minY\",\"midY\",\"maxY\",\"height\"],_ref2=_slicedToArray(_ref,4),start=_ref2[0],mid=_ref2[1],end=_ref2[2],extent=_ref2[3];var bounds=getCommonBoundingBox(selectedElements);var groups=getMaximumGroups(selectedElements).map(function(group){return[group,getCommonBoundingBox(group)];}).sort(function(a,b){return a[1][mid]-b[1][mid];});var span=0;var _iterator=_createForOfIteratorHelper(groups),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var group=_step.value;span+=group[1][extent];}}catch(err){_iterator.e(err);}finally{_iterator.f();}var step=(bounds[extent]-span)/(groups.length-1);if(step<0){// If we have a negative step, we'll need to distribute from centers\n// rather than from gaps. Buckle up, this is a weird one.\n// Get indices of boxes that define start and end of our bounding box\nvar index0=groups.findIndex(function(g){return g[1][start]===bounds[start];});var index1=groups.findIndex(function(g){return g[1][end]===bounds[end];});// Get our step, based on the distance between the center points of our\n// start and end boxes\nvar _step2=(groups[index1][1][mid]-groups[index0][1][mid])/(groups.length-1);var _pos=groups[index0][1][mid];return groups.flatMap(function(_ref3,index){var _ref4=_slicedToArray(_ref3,2),group=_ref4[0],box=_ref4[1];var translation={x:0,y:0};// Don't move our start and end boxes\nif(index!==index0&&index!==index1){_pos+=_step2;translation[distribution.axis]=_pos-box[mid];}return group.map(function(element){return newElementWith(element,{x:element.x+translation.x,y:element.y+translation.y});});});}// Distribute from gaps\nvar pos=bounds[start];return groups.flatMap(function(_ref5){var _ref6=_slicedToArray(_ref5,2),group=_ref6[0],box=_ref6[1];var translation={x:0,y:0};translation[distribution.axis]=pos-box[start];pos+=step;pos+=box[extent];return group.map(function(element){return newElementWith(element,{x:element.x+translation.x,y:element.y+translation.y});});});};","map":{"version":3,"names":["newElementWith","getMaximumGroups","getCommonBoundingBox","distributeElements","selectedElements","distribution","_ref","axis","_ref2","_slicedToArray","start","mid","end","extent","bounds","groups","map","group","sort","a","b","span","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","err","e","f","step","length","index0","findIndex","g","index1","pos","flatMap","_ref3","index","_ref4","box","translation","x","y","element","_ref5","_ref6"],"sources":["D:/project/excalidraw-cn/src/distribute.ts"],"sourcesContent":["import { ExcalidrawElement } from \"./element/types\";\nimport { newElementWith } from \"./element/mutateElement\";\nimport { getMaximumGroups } from \"./groups\";\nimport { getCommonBoundingBox } from \"./element/bounds\";\n\nexport interface Distribution {\n  space: \"between\";\n  axis: \"x\" | \"y\";\n}\n\nexport const distributeElements = (\n  selectedElements: ExcalidrawElement[],\n  distribution: Distribution,\n): ExcalidrawElement[] => {\n  const [start, mid, end, extent] =\n    distribution.axis === \"x\"\n      ? ([\"minX\", \"midX\", \"maxX\", \"width\"] as const)\n      : ([\"minY\", \"midY\", \"maxY\", \"height\"] as const);\n\n  const bounds = getCommonBoundingBox(selectedElements);\n  const groups = getMaximumGroups(selectedElements)\n    .map((group) => [group, getCommonBoundingBox(group)] as const)\n    .sort((a, b) => a[1][mid] - b[1][mid]);\n\n  let span = 0;\n  for (const group of groups) {\n    span += group[1][extent];\n  }\n\n  const step = (bounds[extent] - span) / (groups.length - 1);\n\n  if (step < 0) {\n    // If we have a negative step, we'll need to distribute from centers\n    // rather than from gaps. Buckle up, this is a weird one.\n\n    // Get indices of boxes that define start and end of our bounding box\n    const index0 = groups.findIndex((g) => g[1][start] === bounds[start]);\n    const index1 = groups.findIndex((g) => g[1][end] === bounds[end]);\n\n    // Get our step, based on the distance between the center points of our\n    // start and end boxes\n    const step =\n      (groups[index1][1][mid] - groups[index0][1][mid]) / (groups.length - 1);\n\n    let pos = groups[index0][1][mid];\n\n    return groups.flatMap(([group, box], index) => {\n      const translation = {\n        x: 0,\n        y: 0,\n      };\n\n      // Don't move our start and end boxes\n      if (index !== index0 && index !== index1) {\n        pos += step;\n        translation[distribution.axis] = pos - box[mid];\n      }\n\n      return group.map((element) =>\n        newElementWith(element, {\n          x: element.x + translation.x,\n          y: element.y + translation.y,\n        }),\n      );\n    });\n  }\n\n  // Distribute from gaps\n\n  let pos = bounds[start];\n\n  return groups.flatMap(([group, box]) => {\n    const translation = {\n      x: 0,\n      y: 0,\n    };\n\n    translation[distribution.axis] = pos - box[start];\n\n    pos += step;\n    pos += box[extent];\n\n    return group.map((element) =>\n      newElementWith(element, {\n        x: element.x + translation.x,\n        y: element.y + translation.y,\n      }),\n    );\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}