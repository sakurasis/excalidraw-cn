{"ast":null,"code":"import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{t}from\"../i18n\";import{Dialog}from\"./Dialog\";import{useExcalidrawContainer}from\"./App\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var ErrorDialog=function ErrorDialog(_ref){var children=_ref.children,onClose=_ref.onClose;var _useState=useState(!!children),_useState2=_slicedToArray(_useState,2),modalIsShown=_useState2[0],setModalIsShown=_useState2[1];var _useExcalidrawContain=useExcalidrawContainer(),excalidrawContainer=_useExcalidrawContain.container;var handleClose=React.useCallback(function(){setModalIsShown(false);if(onClose){onClose();}// TODO: Fix the A11y issues so this is never needed since we should always focus on last active element\nexcalidrawContainer===null||excalidrawContainer===void 0?void 0:excalidrawContainer.focus();},[onClose,excalidrawContainer]);return/*#__PURE__*/_jsx(_Fragment,{children:modalIsShown&&/*#__PURE__*/_jsx(Dialog,{size:\"small\",onCloseRequest:handleClose,title:t(\"errorDialog.title\"),children:/*#__PURE__*/_jsx(\"div\",{style:{whiteSpace:\"pre-wrap\"},children:children})})});};","map":{"version":3,"names":["React","useState","t","Dialog","useExcalidrawContainer","jsx","_jsx","Fragment","_Fragment","ErrorDialog","_ref","children","onClose","_useState","_useState2","_slicedToArray","modalIsShown","setModalIsShown","_useExcalidrawContain","excalidrawContainer","container","handleClose","useCallback","focus","size","onCloseRequest","title","style","whiteSpace"],"sources":["D:/project/excalidraw-cn/src/components/ErrorDialog.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { t } from \"../i18n\";\n\nimport { Dialog } from \"./Dialog\";\nimport { useExcalidrawContainer } from \"./App\";\n\nexport const ErrorDialog = ({\n  children,\n  onClose,\n}: {\n  children?: React.ReactNode;\n  onClose?: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(!!children);\n  const { container: excalidrawContainer } = useExcalidrawContainer();\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n    // TODO: Fix the A11y issues so this is never needed since we should always focus on last active element\n    excalidrawContainer?.focus();\n  }, [onClose, excalidrawContainer]);\n\n  return (\n    <>\n      {modalIsShown && (\n        <Dialog\n          size=\"small\"\n          onCloseRequest={handleClose}\n          title={t(\"errorDialog.title\")}\n        >\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{children}</div>\n        </Dialog>\n      )}\n    </>\n  );\n};\n"],"mappings":"8GAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,CAAC,KAAQ,SAAS,CAE3B,OAASC,MAAM,KAAQ,UAAU,CACjC,OAASC,sBAAsB,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE/C,MAAO,IAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAAC,IAAA,CAMlB,IALJ,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CACRC,OAAO,CAAAF,IAAA,CAAPE,OAAO,CAKP,IAAAC,SAAA,CAAwCZ,QAAQ,CAAC,CAAC,CAACU,QAAQ,CAAC,CAAAG,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArDG,YAAY,CAAAF,UAAA,IAAEG,eAAe,CAAAH,UAAA,IACpC,IAAAI,qBAAA,CAA2Cd,sBAAsB,EAAE,CAAhDe,mBAAmB,CAAAD,qBAAA,CAA9BE,SAAS,CAEjB,GAAM,CAAAC,WAAW,CAAGrB,KAAK,CAACsB,WAAW,CAAC,UAAM,CAC1CL,eAAe,CAAC,KAAK,CAAC,CAEtB,GAAIL,OAAO,CAAE,CACXA,OAAO,EAAE,CACX,CACA;AACAO,mBAAmB,SAAnBA,mBAAmB,iBAAnBA,mBAAmB,CAAEI,KAAK,EAAE,CAC9B,CAAC,CAAE,CAACX,OAAO,CAAEO,mBAAmB,CAAC,CAAC,CAElC,mBACEb,IAAA,CAAAE,SAAA,EAAAG,QAAA,CACGK,YAAY,eACXV,IAAA,CAACH,MAAM,EACLqB,IAAI,CAAC,OAAO,CACZC,cAAc,CAAEJ,WAAY,CAC5BK,KAAK,CAAExB,CAAC,CAAC,mBAAmB,CAAE,CAAAS,QAAA,cAE9BL,IAAA,QAAKqB,KAAK,CAAE,CAAEC,UAAU,CAAE,UAAW,CAAE,CAAAjB,QAAA,CAAEA,QAAQ,EAAO,EAE3D,EACA,CAEP,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}