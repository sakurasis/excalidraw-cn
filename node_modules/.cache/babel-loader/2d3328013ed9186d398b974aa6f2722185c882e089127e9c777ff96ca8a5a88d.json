{"ast":null,"code":"import { __assign } from \"tslib\";\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, addInstrumentationHandler, getLocationHref, isErrorEvent, isPrimitive, isString, logger } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n/** Global handlers */\nvar GlobalHandlers = /** @class */function () {\n  /** JSDoc */\n  function GlobalHandlers(options) {\n    /**\n     * @inheritDoc\n     */\n    this.name = GlobalHandlers.id;\n    /** JSDoc */\n    this._onErrorHandlerInstalled = false;\n    /** JSDoc */\n    this._onUnhandledRejectionHandlerInstalled = false;\n    this._options = __assign({\n      onerror: true,\n      onunhandledrejection: true\n    }, options);\n  }\n  /**\n   * @inheritDoc\n   */\n  GlobalHandlers.prototype.setupOnce = function () {\n    Error.stackTraceLimit = 50;\n    if (this._options.onerror) {\n      logger.log('Global Handler attached: onerror');\n      this._installGlobalOnErrorHandler();\n    }\n    if (this._options.onunhandledrejection) {\n      logger.log('Global Handler attached: onunhandledrejection');\n      this._installGlobalOnUnhandledRejectionHandler();\n    }\n  };\n  /** JSDoc */\n  GlobalHandlers.prototype._installGlobalOnErrorHandler = function () {\n    var _this = this;\n    if (this._onErrorHandlerInstalled) {\n      return;\n    }\n    addInstrumentationHandler({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: function (data) {\n        var error = data.error;\n        var currentHub = getCurrentHub();\n        var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n        var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n        if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n          return;\n        }\n        var client = currentHub.getClient();\n        var event = isPrimitive(error) ? _this._eventFromIncompleteOnError(data.msg, data.url, data.line, data.column) : _this._enhanceEventWithInitialFrame(eventFromUnknownInput(error, undefined, {\n          attachStacktrace: client && client.getOptions().attachStacktrace,\n          rejection: false\n        }), data.url, data.line, data.column);\n        addExceptionMechanism(event, {\n          handled: false,\n          type: 'onerror'\n        });\n        currentHub.captureEvent(event, {\n          originalException: error\n        });\n      },\n      type: 'error'\n    });\n    this._onErrorHandlerInstalled = true;\n  };\n  /** JSDoc */\n  GlobalHandlers.prototype._installGlobalOnUnhandledRejectionHandler = function () {\n    var _this = this;\n    if (this._onUnhandledRejectionHandlerInstalled) {\n      return;\n    }\n    addInstrumentationHandler({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: function (e) {\n        var error = e;\n        // dig the object of the rejection out of known event types\n        try {\n          // PromiseRejectionEvents store the object of the rejection under 'reason'\n          // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n          if ('reason' in e) {\n            error = e.reason;\n          }\n          // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n          // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n          // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n          // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n          // https://github.com/getsentry/sentry-javascript/issues/2380\n          else if ('detail' in e && 'reason' in e.detail) {\n            error = e.detail.reason;\n          }\n        } catch (_oO) {\n          // no-empty\n        }\n        var currentHub = getCurrentHub();\n        var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n        var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n        if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n          return true;\n        }\n        var client = currentHub.getClient();\n        var event = isPrimitive(error) ? _this._eventFromRejectionWithPrimitive(error) : eventFromUnknownInput(error, undefined, {\n          attachStacktrace: client && client.getOptions().attachStacktrace,\n          rejection: true\n        });\n        event.level = Severity.Error;\n        addExceptionMechanism(event, {\n          handled: false,\n          type: 'onunhandledrejection'\n        });\n        currentHub.captureEvent(event, {\n          originalException: error\n        });\n        return;\n      },\n      type: 'unhandledrejection'\n    });\n    this._onUnhandledRejectionHandlerInstalled = true;\n  };\n  /**\n   * This function creates a stack from an old, error-less onerror handler.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  GlobalHandlers.prototype._eventFromIncompleteOnError = function (msg, url, line, column) {\n    var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n    // If 'message' is ErrorEvent, get real message from inside\n    var message = isErrorEvent(msg) ? msg.message : msg;\n    var name;\n    if (isString(message)) {\n      var groups = message.match(ERROR_TYPES_RE);\n      if (groups) {\n        name = groups[1];\n        message = groups[2];\n      }\n    }\n    var event = {\n      exception: {\n        values: [{\n          type: name || 'Error',\n          value: message\n        }]\n      }\n    };\n    return this._enhanceEventWithInitialFrame(event, url, line, column);\n  };\n  /**\n   * Create an event from a promise rejection where the `reason` is a primitive.\n   *\n   * @param reason: The `reason` property of the promise rejection\n   * @returns An Event object with an appropriate `exception` value\n   */\n  GlobalHandlers.prototype._eventFromRejectionWithPrimitive = function (reason) {\n    return {\n      exception: {\n        values: [{\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: \"Non-Error promise rejection captured with value: \" + String(reason)\n        }]\n      }\n    };\n  };\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  GlobalHandlers.prototype._enhanceEventWithInitialFrame = function (event, url, line, column) {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n    event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n    var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n    var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n    var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n    if (event.exception.values[0].stacktrace.frames.length === 0) {\n      event.exception.values[0].stacktrace.frames.push({\n        colno: colno,\n        filename: filename,\n        function: '?',\n        in_app: true,\n        lineno: lineno\n      });\n    }\n    return event;\n  };\n  /**\n   * @inheritDoc\n   */\n  GlobalHandlers.id = 'GlobalHandlers';\n  return GlobalHandlers;\n}();\nexport { GlobalHandlers };","map":{"version":3,"names":["getCurrentHub","Severity","addExceptionMechanism","addInstrumentationHandler","getLocationHref","isErrorEvent","isPrimitive","isString","logger","eventFromUnknownInput","shouldIgnoreOnError","GlobalHandlers","options","name","id","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","_options","__assign","onerror","onunhandledrejection","prototype","setupOnce","Error","stackTraceLimit","log","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","_this","callback","data","error","currentHub","hasIntegration","getIntegration","isFailedOwnDelivery","__sentry_own_request__","client","getClient","event","_eventFromIncompleteOnError","msg","url","line","column","_enhanceEventWithInitialFrame","undefined","attachStacktrace","getOptions","rejection","handled","type","captureEvent","originalException","e","reason","detail","_oO","_eventFromRejectionWithPrimitive","level","ERROR_TYPES_RE","message","groups","match","exception","values","value","String","stacktrace","frames","colno","isNaN","parseInt","lineno","filename","length","push","function","in_app"],"sources":["D:\\project\\excalidraw-cn\\node_modules\\@sentry\\browser\\src\\integrations\\globalhandlers.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Primitive, Severity } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\n/** JSDoc */\ninterface GlobalHandlersIntegrations {\n  onerror: boolean;\n  onunhandledrejection: boolean;\n}\n\n/** Global handlers */\nexport class GlobalHandlers implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GlobalHandlers';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = GlobalHandlers.id;\n\n  /** JSDoc */\n  private readonly _options: GlobalHandlersIntegrations;\n\n  /** JSDoc */\n  private _onErrorHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  private _onUnhandledRejectionHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  public constructor(options?: GlobalHandlersIntegrations) {\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    Error.stackTraceLimit = 50;\n\n    if (this._options.onerror) {\n      logger.log('Global Handler attached: onerror');\n      this._installGlobalOnErrorHandler();\n    }\n\n    if (this._options.onunhandledrejection) {\n      logger.log('Global Handler attached: onunhandledrejection');\n      this._installGlobalOnUnhandledRejectionHandler();\n    }\n  }\n\n  /** JSDoc */\n  private _installGlobalOnErrorHandler(): void {\n    if (this._onErrorHandlerInstalled) {\n      return;\n    }\n\n    addInstrumentationHandler({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: (data: { msg: any; url: any; line: any; column: any; error: any }) => {\n        const error = data.error;\n        const currentHub = getCurrentHub();\n        const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n        const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n        if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n          return;\n        }\n\n        const client = currentHub.getClient();\n        const event = isPrimitive(error)\n          ? this._eventFromIncompleteOnError(data.msg, data.url, data.line, data.column)\n          : this._enhanceEventWithInitialFrame(\n              eventFromUnknownInput(error, undefined, {\n                attachStacktrace: client && client.getOptions().attachStacktrace,\n                rejection: false,\n              }),\n              data.url,\n              data.line,\n              data.column,\n            );\n\n        addExceptionMechanism(event, {\n          handled: false,\n          type: 'onerror',\n        });\n\n        currentHub.captureEvent(event, {\n          originalException: error,\n        });\n      },\n      type: 'error',\n    });\n\n    this._onErrorHandlerInstalled = true;\n  }\n\n  /** JSDoc */\n  private _installGlobalOnUnhandledRejectionHandler(): void {\n    if (this._onUnhandledRejectionHandlerInstalled) {\n      return;\n    }\n\n    addInstrumentationHandler({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: (e: any) => {\n        let error = e;\n\n        // dig the object of the rejection out of known event types\n        try {\n          // PromiseRejectionEvents store the object of the rejection under 'reason'\n          // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n          if ('reason' in e) {\n            error = e.reason;\n          }\n          // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n          // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n          // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n          // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n          // https://github.com/getsentry/sentry-javascript/issues/2380\n          else if ('detail' in e && 'reason' in e.detail) {\n            error = e.detail.reason;\n          }\n        } catch (_oO) {\n          // no-empty\n        }\n\n        const currentHub = getCurrentHub();\n        const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n        const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n        if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n          return true;\n        }\n\n        const client = currentHub.getClient();\n        const event = isPrimitive(error)\n          ? this._eventFromRejectionWithPrimitive(error)\n          : eventFromUnknownInput(error, undefined, {\n              attachStacktrace: client && client.getOptions().attachStacktrace,\n              rejection: true,\n            });\n\n        event.level = Severity.Error;\n\n        addExceptionMechanism(event, {\n          handled: false,\n          type: 'onunhandledrejection',\n        });\n\n        currentHub.captureEvent(event, {\n          originalException: error,\n        });\n\n        return;\n      },\n      type: 'unhandledrejection',\n    });\n\n    this._onUnhandledRejectionHandlerInstalled = true;\n  }\n\n  /**\n   * This function creates a stack from an old, error-less onerror handler.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n    const ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n    // If 'message' is ErrorEvent, get real message from inside\n    let message = isErrorEvent(msg) ? msg.message : msg;\n    let name;\n\n    if (isString(message)) {\n      const groups = message.match(ERROR_TYPES_RE);\n      if (groups) {\n        name = groups[1];\n        message = groups[2];\n      }\n    }\n\n    const event = {\n      exception: {\n        values: [\n          {\n            type: name || 'Error',\n            value: message,\n          },\n        ],\n      },\n    };\n\n    return this._enhanceEventWithInitialFrame(event, url, line, column);\n  }\n\n  /**\n   * Create an event from a promise rejection where the `reason` is a primitive.\n   *\n   * @param reason: The `reason` property of the promise rejection\n   * @returns An Event object with an appropriate `exception` value\n   */\n  private _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n    return {\n      exception: {\n        values: [\n          {\n            type: 'UnhandledRejection',\n            // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n            value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n          },\n        ],\n      },\n    };\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n    event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n\n    const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n    const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n    const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n    if (event.exception.values[0].stacktrace.frames.length === 0) {\n      event.exception.values[0].stacktrace.frames.push({\n        colno,\n        filename,\n        function: '?',\n        in_app: true,\n        lineno,\n      });\n    }\n\n    return event;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}