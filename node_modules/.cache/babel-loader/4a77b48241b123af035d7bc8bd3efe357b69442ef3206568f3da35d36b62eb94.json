{"ast":null,"code":"import _defineProperty from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{getNonDeletedElements}from\"../element\";import{removeAllElementsFromFrame}from\"../frame\";import{getFrameElements}from\"../frame\";import{KEYS}from\"../keys\";import{setCursorForShape,updateActiveTool}from\"../utils\";import{register}from\"./register\";var isSingleFrameSelected=function isSingleFrameSelected(appState,app){var selectedElements=app.scene.getSelectedElements(appState);return selectedElements.length===1&&selectedElements[0].type===\"frame\";};export var actionSelectAllElementsInFrame=register({name:\"selectAllElementsInFrame\",trackEvent:{category:\"canvas\"},perform:function perform(elements,appState,_,app){var selectedFrame=app.scene.getSelectedElements(appState)[0];if(selectedFrame&&selectedFrame.type===\"frame\"){var elementsInFrame=getFrameElements(getNonDeletedElements(elements),selectedFrame.id).filter(function(element){return!(element.type===\"text\"&&element.containerId);});return{elements:elements,appState:_objectSpread(_objectSpread({},appState),{},{selectedElementIds:elementsInFrame.reduce(function(acc,element){acc[element.id]=true;return acc;},{})}),commitToHistory:false};}return{elements:elements,appState:appState,commitToHistory:false};},contextItemLabel:\"labels.selectAllElementsInFrame\",predicate:function predicate(elements,appState,_,app){return isSingleFrameSelected(appState,app);}});export var actionRemoveAllElementsFromFrame=register({name:\"removeAllElementsFromFrame\",trackEvent:{category:\"history\"},perform:function perform(elements,appState,_,app){var selectedFrame=app.scene.getSelectedElements(appState)[0];if(selectedFrame&&selectedFrame.type===\"frame\"){return{elements:removeAllElementsFromFrame(elements,selectedFrame,appState),appState:_objectSpread(_objectSpread({},appState),{},{selectedElementIds:_defineProperty({},selectedFrame.id,true)}),commitToHistory:true};}return{elements:elements,appState:appState,commitToHistory:false};},contextItemLabel:\"labels.removeAllElementsFromFrame\",predicate:function predicate(elements,appState,_,app){return isSingleFrameSelected(appState,app);}});export var actionupdateFrameRendering=register({name:\"updateFrameRendering\",viewMode:true,trackEvent:{category:\"canvas\"},perform:function perform(elements,appState){return{elements:elements,appState:_objectSpread(_objectSpread({},appState),{},{frameRendering:_objectSpread(_objectSpread({},appState.frameRendering),{},{enabled:!appState.frameRendering.enabled})}),commitToHistory:false};},contextItemLabel:\"labels.updateFrameRendering\",checked:function checked(appState){return appState.frameRendering.enabled;}});export var actionSetFrameAsActiveTool=register({name:\"setFrameAsActiveTool\",trackEvent:{category:\"toolbar\"},perform:function perform(elements,appState,_,app){var nextActiveTool=updateActiveTool(appState,{type:\"frame\"});setCursorForShape(app.canvas,_objectSpread(_objectSpread({},appState),{},{activeTool:nextActiveTool}));return{elements:elements,appState:_objectSpread(_objectSpread({},appState),{},{activeTool:updateActiveTool(appState,{type:\"frame\"})}),commitToHistory:false};},keyTest:function keyTest(event){return!event[KEYS.CTRL_OR_CMD]&&!event.shiftKey&&!event.altKey&&event.key.toLocaleLowerCase()===KEYS.F;}});","map":{"version":3,"names":["getNonDeletedElements","removeAllElementsFromFrame","getFrameElements","KEYS","setCursorForShape","updateActiveTool","register","isSingleFrameSelected","appState","app","selectedElements","scene","getSelectedElements","length","type","actionSelectAllElementsInFrame","name","trackEvent","category","perform","elements","_","selectedFrame","elementsInFrame","id","filter","element","containerId","_objectSpread","selectedElementIds","reduce","acc","commitToHistory","contextItemLabel","predicate","actionRemoveAllElementsFromFrame","_defineProperty","actionupdateFrameRendering","viewMode","frameRendering","enabled","checked","actionSetFrameAsActiveTool","nextActiveTool","canvas","activeTool","keyTest","event","CTRL_OR_CMD","shiftKey","altKey","key","toLocaleLowerCase","F"],"sources":["D:/project/excalidraw-cn/src/actions/actionFrame.ts"],"sourcesContent":["import { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { removeAllElementsFromFrame } from \"../frame\";\nimport { getFrameElements } from \"../frame\";\nimport { KEYS } from \"../keys\";\nimport { AppClassProperties, AppState } from \"../types\";\nimport { setCursorForShape, updateActiveTool } from \"../utils\";\nimport { register } from \"./register\";\n\nconst isSingleFrameSelected = (appState: AppState, app: AppClassProperties) => {\n  const selectedElements = app.scene.getSelectedElements(appState);\n\n  return selectedElements.length === 1 && selectedElements[0].type === \"frame\";\n};\n\nexport const actionSelectAllElementsInFrame = register({\n  name: \"selectAllElementsInFrame\",\n  trackEvent: { category: \"canvas\" },\n  perform: (elements, appState, _, app) => {\n    const selectedFrame = app.scene.getSelectedElements(appState)[0];\n\n    if (selectedFrame && selectedFrame.type === \"frame\") {\n      const elementsInFrame = getFrameElements(\n        getNonDeletedElements(elements),\n        selectedFrame.id,\n      ).filter((element) => !(element.type === \"text\" && element.containerId));\n\n      return {\n        elements,\n        appState: {\n          ...appState,\n          selectedElementIds: elementsInFrame.reduce((acc, element) => {\n            acc[element.id] = true;\n            return acc;\n          }, {} as Record<ExcalidrawElement[\"id\"], true>),\n        },\n        commitToHistory: false,\n      };\n    }\n\n    return {\n      elements,\n      appState,\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: \"labels.selectAllElementsInFrame\",\n  predicate: (elements, appState, _, app) =>\n    isSingleFrameSelected(appState, app),\n});\n\nexport const actionRemoveAllElementsFromFrame = register({\n  name: \"removeAllElementsFromFrame\",\n  trackEvent: { category: \"history\" },\n  perform: (elements, appState, _, app) => {\n    const selectedFrame = app.scene.getSelectedElements(appState)[0];\n\n    if (selectedFrame && selectedFrame.type === \"frame\") {\n      return {\n        elements: removeAllElementsFromFrame(elements, selectedFrame, appState),\n        appState: {\n          ...appState,\n          selectedElementIds: {\n            [selectedFrame.id]: true,\n          },\n        },\n        commitToHistory: true,\n      };\n    }\n\n    return {\n      elements,\n      appState,\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: \"labels.removeAllElementsFromFrame\",\n  predicate: (elements, appState, _, app) =>\n    isSingleFrameSelected(appState, app),\n});\n\nexport const actionupdateFrameRendering = register({\n  name: \"updateFrameRendering\",\n  viewMode: true,\n  trackEvent: { category: \"canvas\" },\n  perform: (elements, appState) => {\n    return {\n      elements,\n      appState: {\n        ...appState,\n        frameRendering: {\n          ...appState.frameRendering,\n          enabled: !appState.frameRendering.enabled,\n        },\n      },\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: \"labels.updateFrameRendering\",\n  checked: (appState: AppState) => appState.frameRendering.enabled,\n});\n\nexport const actionSetFrameAsActiveTool = register({\n  name: \"setFrameAsActiveTool\",\n  trackEvent: { category: \"toolbar\" },\n  perform: (elements, appState, _, app) => {\n    const nextActiveTool = updateActiveTool(appState, {\n      type: \"frame\",\n    });\n\n    setCursorForShape(app.canvas, {\n      ...appState,\n      activeTool: nextActiveTool,\n    });\n\n    return {\n      elements,\n      appState: {\n        ...appState,\n        activeTool: updateActiveTool(appState, {\n          type: \"frame\",\n        }),\n      },\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] &&\n    !event.shiftKey &&\n    !event.altKey &&\n    event.key.toLocaleLowerCase() === KEYS.F,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}