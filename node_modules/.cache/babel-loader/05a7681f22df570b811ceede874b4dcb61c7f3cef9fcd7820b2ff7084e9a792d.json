{"ast":null,"code":"export const getCenter = pointers => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: sum(allCoords, coords => coords.x) / allCoords.length,\n    y: sum(allCoords, coords => coords.y) / allCoords.length\n  };\n};\nexport const getDistance = _ref => {\n  let [a, b] = _ref;\n  return Math.hypot(a.x - b.x, a.y - b.y);\n};\nconst sum = (array, mapper) => array.reduce((acc, item) => acc + mapper(item), 0);","map":{"version":3,"names":["getCenter","pointers","allCoords","Array","from","values","x","sum","coords","length","y","getDistance","_ref","a","b","Math","hypot","array","mapper","reduce","acc","item"],"sources":["D:/project/excalidraw-cn/src/gesture.ts"],"sourcesContent":["import { PointerCoords } from \"./types\";\n\nexport const getCenter = (pointers: Map<number, PointerCoords>) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: sum(allCoords, (coords) => coords.x) / allCoords.length,\n    y: sum(allCoords, (coords) => coords.y) / allCoords.length,\n  };\n};\n\nexport const getDistance = ([a, b]: readonly PointerCoords[]) =>\n  Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = <T>(array: readonly T[], mapper: (item: T) => number): number =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n"],"mappings":"AAEA,OAAO,MAAMA,SAAS,GAAIC,QAAoC,IAAK;EACjE,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACH,QAAQ,CAACI,MAAM,EAAE,CAAC;EAC/C,OAAO;IACLC,CAAC,EAAEC,GAAG,CAACL,SAAS,EAAGM,MAAM,IAAKA,MAAM,CAACF,CAAC,CAAC,GAAGJ,SAAS,CAACO,MAAM;IAC1DC,CAAC,EAAEH,GAAG,CAACL,SAAS,EAAGM,MAAM,IAAKA,MAAM,CAACE,CAAC,CAAC,GAAGR,SAAS,CAACO;EACtD,CAAC;AACH,CAAC;AAED,OAAO,MAAME,WAAW,GAAGC,IAAA;EAAA,IAAC,CAACC,CAAC,EAAEC,CAAC,CAA2B,GAAAF,IAAA;EAAA,OAC1DG,IAAI,CAACC,KAAK,CAACH,CAAC,CAACP,CAAC,GAAGQ,CAAC,CAACR,CAAC,EAAEO,CAAC,CAACH,CAAC,GAAGI,CAAC,CAACJ,CAAC,CAAC;AAAA;AAElC,MAAMH,GAAG,GAAGA,CAAIU,KAAmB,EAAEC,MAA2B,KAC9DD,KAAK,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGF,MAAM,CAACG,IAAI,CAAC,EAAE,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}