{"ast":null,"code":"import { register } from \"./register\";\nimport { deepCopyElement } from \"../element/newElement\";\nimport { randomId } from \"../random\";\nimport { t } from \"../i18n\";\nexport const actionAddToLibrary = register({\n  name: \"addToLibrary\",\n  trackEvent: {\n    category: \"element\"\n  },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n      includeElementsInFrames: true\n    });\n    if (selectedElements.some(element => element.type === \"image\")) {\n      return {\n        commitToHistory: false,\n        appState: {\n          ...appState,\n          errorMessage: \"Support for adding images to the library coming soon!\"\n        }\n      };\n    }\n    return app.library.getLatestLibrary().then(items => {\n      return app.library.setLibrary([{\n        id: randomId(),\n        status: \"unpublished\",\n        elements: selectedElements.map(deepCopyElement),\n        created: Date.now()\n      }, ...items]);\n    }).then(() => {\n      return {\n        commitToHistory: false,\n        appState: {\n          ...appState,\n          toast: {\n            message: t(\"toast.addedToLibrary\")\n          }\n        }\n      };\n    }).catch(error => {\n      return {\n        commitToHistory: false,\n        appState: {\n          ...appState,\n          errorMessage: error.message\n        }\n      };\n    });\n  },\n  contextItemLabel: \"labels.addToLibrary\"\n});","map":{"version":3,"names":["register","deepCopyElement","randomId","t","actionAddToLibrary","name","trackEvent","category","perform","elements","appState","_","app","selectedElements","scene","getSelectedElements","selectedElementIds","includeBoundTextElement","includeElementsInFrames","some","element","type","commitToHistory","errorMessage","library","getLatestLibrary","then","items","setLibrary","id","status","map","created","Date","now","toast","message","catch","error","contextItemLabel"],"sources":["D:/project/excalidraw-cn/src/actions/actionAddToLibrary.ts"],"sourcesContent":["import { register } from \"./register\";\nimport { deepCopyElement } from \"../element/newElement\";\nimport { randomId } from \"../random\";\nimport { t } from \"../i18n\";\n\nexport const actionAddToLibrary = register({\n  name: \"addToLibrary\",\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n      includeElementsInFrames: true,\n    });\n    if (selectedElements.some((element) => element.type === \"image\")) {\n      return {\n        commitToHistory: false,\n        appState: {\n          ...appState,\n          errorMessage: \"Support for adding images to the library coming soon!\",\n        },\n      };\n    }\n\n    return app.library\n      .getLatestLibrary()\n      .then((items) => {\n        return app.library.setLibrary([\n          {\n            id: randomId(),\n            status: \"unpublished\",\n            elements: selectedElements.map(deepCopyElement),\n            created: Date.now(),\n          },\n          ...items,\n        ]);\n      })\n      .then(() => {\n        return {\n          commitToHistory: false,\n          appState: {\n            ...appState,\n            toast: { message: t(\"toast.addedToLibrary\") },\n          },\n        };\n      })\n      .catch((error) => {\n        return {\n          commitToHistory: false,\n          appState: {\n            ...appState,\n            errorMessage: error.message,\n          },\n        };\n      });\n  },\n  contextItemLabel: \"labels.addToLibrary\",\n});\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,eAAe,QAAQ,uBAAuB;AACvD,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,CAAC,QAAQ,SAAS;AAE3B,OAAO,MAAMC,kBAAkB,GAAGJ,QAAQ,CAAC;EACzCK,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IAAEC,QAAQ,EAAE;EAAU,CAAC;EACnCC,OAAO,EAAEA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,CAAC,EAAEC,GAAG,KAAK;IACvC,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,KAAK,CAACC,mBAAmB,CAAC;MACrDC,kBAAkB,EAAEN,QAAQ,CAACM,kBAAkB;MAC/CC,uBAAuB,EAAE,IAAI;MAC7BC,uBAAuB,EAAE;IAC3B,CAAC,CAAC;IACF,IAAIL,gBAAgB,CAACM,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,KAAK,OAAO,CAAC,EAAE;MAChE,OAAO;QACLC,eAAe,EAAE,KAAK;QACtBZ,QAAQ,EAAE;UACR,GAAGA,QAAQ;UACXa,YAAY,EAAE;QAChB;MACF,CAAC;IACH;IAEA,OAAOX,GAAG,CAACY,OAAO,CACfC,gBAAgB,EAAE,CAClBC,IAAI,CAAEC,KAAK,IAAK;MACf,OAAOf,GAAG,CAACY,OAAO,CAACI,UAAU,CAAC,CAC5B;QACEC,EAAE,EAAE3B,QAAQ,EAAE;QACd4B,MAAM,EAAE,aAAa;QACrBrB,QAAQ,EAAEI,gBAAgB,CAACkB,GAAG,CAAC9B,eAAe,CAAC;QAC/C+B,OAAO,EAAEC,IAAI,CAACC,GAAG;MACnB,CAAC,EACD,GAAGP,KAAK,CACT,CAAC;IACJ,CAAC,CAAC,CACDD,IAAI,CAAC,MAAM;MACV,OAAO;QACLJ,eAAe,EAAE,KAAK;QACtBZ,QAAQ,EAAE;UACR,GAAGA,QAAQ;UACXyB,KAAK,EAAE;YAAEC,OAAO,EAAEjC,CAAC,CAAC,sBAAsB;UAAE;QAC9C;MACF,CAAC;IACH,CAAC,CAAC,CACDkC,KAAK,CAAEC,KAAK,IAAK;MAChB,OAAO;QACLhB,eAAe,EAAE,KAAK;QACtBZ,QAAQ,EAAE;UACR,GAAGA,QAAQ;UACXa,YAAY,EAAEe,KAAK,CAACF;QACtB;MACF,CAAC;IACH,CAAC,CAAC;EACN,CAAC;EACDG,gBAAgB,EAAE;AACpB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}