{"ast":null,"code":"import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{getCommonBounds,getClosestElementBounds,getVisibleElements}from\"../element\";import{sceneCoordsToViewportCoords,viewportCoordsToSceneCoords}from\"../utils\";var isOutsideViewPort=function isOutsideViewPort(appState,canvas,cords){var _cords=_slicedToArray(cords,4),x1=_cords[0],y1=_cords[1],x2=_cords[2],y2=_cords[3];var _sceneCoordsToViewpor=sceneCoordsToViewportCoords({sceneX:x1,sceneY:y1},appState),viewportX1=_sceneCoordsToViewpor.x,viewportY1=_sceneCoordsToViewpor.y;var _sceneCoordsToViewpor2=sceneCoordsToViewportCoords({sceneX:x2,sceneY:y2},appState),viewportX2=_sceneCoordsToViewpor2.x,viewportY2=_sceneCoordsToViewpor2.y;return viewportX2-viewportX1>appState.width||viewportY2-viewportY1>appState.height;};export var centerScrollOn=function centerScrollOn(_ref){var scenePoint=_ref.scenePoint,viewportDimensions=_ref.viewportDimensions,zoom=_ref.zoom;return{scrollX:viewportDimensions.width/2/zoom.value-scenePoint.x,scrollY:viewportDimensions.height/2/zoom.value-scenePoint.y};};export var calculateScrollCenter=function calculateScrollCenter(elements,appState,canvas){elements=getVisibleElements(elements);if(!elements.length){return{scrollX:0,scrollY:0};}var _getCommonBounds=getCommonBounds(elements),_getCommonBounds2=_slicedToArray(_getCommonBounds,4),x1=_getCommonBounds2[0],y1=_getCommonBounds2[1],x2=_getCommonBounds2[2],y2=_getCommonBounds2[3];if(isOutsideViewPort(appState,canvas,[x1,y1,x2,y2])){var _getClosestElementBou=getClosestElementBounds(elements,viewportCoordsToSceneCoords({clientX:appState.scrollX,clientY:appState.scrollY},appState));var _getClosestElementBou2=_slicedToArray(_getClosestElementBou,4);x1=_getClosestElementBou2[0];y1=_getClosestElementBou2[1];x2=_getClosestElementBou2[2];y2=_getClosestElementBou2[3];}var centerX=(x1+x2)/2;var centerY=(y1+y2)/2;return centerScrollOn({scenePoint:{x:centerX,y:centerY},viewportDimensions:{width:appState.width,height:appState.height},zoom:appState.zoom});};","map":{"version":3,"names":["getCommonBounds","getClosestElementBounds","getVisibleElements","sceneCoordsToViewportCoords","viewportCoordsToSceneCoords","isOutsideViewPort","appState","canvas","cords","_cords","_slicedToArray","x1","y1","x2","y2","_sceneCoordsToViewpor","sceneX","sceneY","viewportX1","x","viewportY1","y","_sceneCoordsToViewpor2","viewportX2","viewportY2","width","height","centerScrollOn","_ref","scenePoint","viewportDimensions","zoom","scrollX","value","scrollY","calculateScrollCenter","elements","length","_getCommonBounds","_getCommonBounds2","_getClosestElementBou","clientX","clientY","_getClosestElementBou2","centerX","centerY"],"sources":["D:/project/excalidraw-cn/src/scene/scroll.ts"],"sourcesContent":["import { AppState, PointerCoords, Zoom } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport {\n  getCommonBounds,\n  getClosestElementBounds,\n  getVisibleElements,\n} from \"../element\";\n\nimport {\n  sceneCoordsToViewportCoords,\n  viewportCoordsToSceneCoords,\n} from \"../utils\";\n\nconst isOutsideViewPort = (\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n  cords: Array<number>,\n) => {\n  const [x1, y1, x2, y2] = cords;\n  const { x: viewportX1, y: viewportY1 } = sceneCoordsToViewportCoords(\n    { sceneX: x1, sceneY: y1 },\n    appState,\n  );\n  const { x: viewportX2, y: viewportY2 } = sceneCoordsToViewportCoords(\n    { sceneX: x2, sceneY: y2 },\n    appState,\n  );\n  return (\n    viewportX2 - viewportX1 > appState.width ||\n    viewportY2 - viewportY1 > appState.height\n  );\n};\n\nexport const centerScrollOn = ({\n  scenePoint,\n  viewportDimensions,\n  zoom,\n}: {\n  scenePoint: PointerCoords;\n  viewportDimensions: { height: number; width: number };\n  zoom: Zoom;\n}) => {\n  return {\n    scrollX: viewportDimensions.width / 2 / zoom.value - scenePoint.x,\n    scrollY: viewportDimensions.height / 2 / zoom.value - scenePoint.y,\n  };\n};\n\nexport const calculateScrollCenter = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n): { scrollX: number; scrollY: number } => {\n  elements = getVisibleElements(elements);\n\n  if (!elements.length) {\n    return {\n      scrollX: 0,\n      scrollY: 0,\n    };\n  }\n  let [x1, y1, x2, y2] = getCommonBounds(elements);\n\n  if (isOutsideViewPort(appState, canvas, [x1, y1, x2, y2])) {\n    [x1, y1, x2, y2] = getClosestElementBounds(\n      elements,\n      viewportCoordsToSceneCoords(\n        { clientX: appState.scrollX, clientY: appState.scrollY },\n        appState,\n      ),\n    );\n  }\n\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n\n  return centerScrollOn({\n    scenePoint: { x: centerX, y: centerY },\n    viewportDimensions: { width: appState.width, height: appState.height },\n    zoom: appState.zoom,\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}