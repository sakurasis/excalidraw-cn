{"ast":null,"code":"import _regeneratorRuntime from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import rough from\"roughjs/bin/rough\";import{getCommonBounds,getElementAbsoluteCoords}from\"../element/bounds\";import{renderScene,renderSceneToSvg}from\"../renderer/renderScene\";import{distance,isOnlyExportingSingleFrame}from\"../utils\";import{DEFAULT_EXPORT_PADDING,SVG_NS,THEME_FILTER}from\"../constants\";import{getDefaultAppState}from\"../appState\";import{serializeAsJSON}from\"../data/json\";import{getInitializedImageElements,updateImageCache}from\"../element/image\";import Scene from\"./Scene\";export var SVG_EXPORT_TAG=\"<!-- svg-source:excalidraw -->\";export var exportToCanvas=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(elements,appState,files,_ref){var exportBackground,_ref$exportPadding,exportPadding,viewBackgroundColor,createCanvas,_getCanvasSize,_getCanvasSize2,minX,minY,width,height,_createCanvas,canvas,_createCanvas$scale,scale,defaultAppState,_yield$updateImageCac,imageCache,onlyExportingSingleFrame,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:exportBackground=_ref.exportBackground,_ref$exportPadding=_ref.exportPadding,exportPadding=_ref$exportPadding===void 0?DEFAULT_EXPORT_PADDING:_ref$exportPadding,viewBackgroundColor=_ref.viewBackgroundColor;createCanvas=_args.length>4&&_args[4]!==undefined?_args[4]:function(width,height){var canvas=document.createElement(\"canvas\");canvas.width=width*appState.exportScale;canvas.height=height*appState.exportScale;return{canvas:canvas,scale:appState.exportScale};};_getCanvasSize=getCanvasSize(elements,exportPadding),_getCanvasSize2=_slicedToArray(_getCanvasSize,4),minX=_getCanvasSize2[0],minY=_getCanvasSize2[1],width=_getCanvasSize2[2],height=_getCanvasSize2[3];_createCanvas=createCanvas(width,height),canvas=_createCanvas.canvas,_createCanvas$scale=_createCanvas.scale,scale=_createCanvas$scale===void 0?1:_createCanvas$scale;defaultAppState=getDefaultAppState();_context.next=7;return updateImageCache({imageCache:new Map(),fileIds:getInitializedImageElements(elements).map(function(element){return element.fileId;}),files:files});case 7:_yield$updateImageCac=_context.sent;imageCache=_yield$updateImageCac.imageCache;onlyExportingSingleFrame=isOnlyExportingSingleFrame(elements);renderScene({elements:elements,appState:appState,scale:scale,rc:rough.canvas(canvas),canvas:canvas,renderConfig:{viewBackgroundColor:exportBackground?viewBackgroundColor:null,scrollX:-minX+(onlyExportingSingleFrame?0:exportPadding),scrollY:-minY+(onlyExportingSingleFrame?0:exportPadding),zoom:defaultAppState.zoom,remotePointerViewportCoords:{},remoteSelectedElementIds:{},shouldCacheIgnoreZoom:false,remotePointerUsernames:{},remotePointerUserStates:{},theme:appState.exportWithDarkMode?\"dark\":\"light\",imageCache:imageCache,renderScrollbars:false,renderSelection:false,renderGrid:false,isExporting:true}});return _context.abrupt(\"return\",canvas);case 12:case\"end\":return _context.stop();}},_callee);}));return function exportToCanvas(_x,_x2,_x3,_x4){return _ref2.apply(this,arguments);};}();export var exportToSvg=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(elements,appState,files,opts){var _Scene$getScene,_Scene$getScene$getNo;var _appState$exportPaddi,exportPadding,viewBackgroundColor,_appState$exportScale,exportScale,exportEmbedScene,metadata,_opts$serializeAsJSON,_getCanvasSize3,_getCanvasSize4,minX,minY,width,height,svgRoot,assetPath,_assetPath,isExportingWholeCanvas,onlyExportingSingleFrame,offsetX,offsetY,exportingFrame,exportingFrameClipPath,_getElementAbsoluteCo,_getElementAbsoluteCo2,x1,y1,x2,y2,cx,cy,rect,rsvg;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_appState$exportPaddi=appState.exportPadding,exportPadding=_appState$exportPaddi===void 0?DEFAULT_EXPORT_PADDING:_appState$exportPaddi,viewBackgroundColor=appState.viewBackgroundColor,_appState$exportScale=appState.exportScale,exportScale=_appState$exportScale===void 0?1:_appState$exportScale,exportEmbedScene=appState.exportEmbedScene;metadata=\"\";if(!exportEmbedScene){_context2.next=14;break;}_context2.prev=3;_context2.next=6;return import(/* webpackChunkName: \"image\" */\"../../src/data/image\");case 6:_context2.next=8;return _context2.sent.encodeSvgMetadata({text:opts!==null&&opts!==void 0&&opts.serializeAsJSON?opts===null||opts===void 0?void 0:(_opts$serializeAsJSON=opts.serializeAsJSON)===null||_opts$serializeAsJSON===void 0?void 0:_opts$serializeAsJSON.call(opts):serializeAsJSON(elements,appState,files||{},\"local\")});case 8:metadata=_context2.sent;_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](3);console.error(_context2.t0);case 14:_getCanvasSize3=getCanvasSize(elements,exportPadding),_getCanvasSize4=_slicedToArray(_getCanvasSize3,4),minX=_getCanvasSize4[0],minY=_getCanvasSize4[1],width=_getCanvasSize4[2],height=_getCanvasSize4[3];// initialize SVG root\nsvgRoot=document.createElementNS(SVG_NS,\"svg\");svgRoot.setAttribute(\"version\",\"1.1\");svgRoot.setAttribute(\"xmlns\",SVG_NS);svgRoot.setAttribute(\"viewBox\",\"0 0 \".concat(width,\" \").concat(height));svgRoot.setAttribute(\"width\",\"\".concat(width*exportScale));svgRoot.setAttribute(\"height\",\"\".concat(height*exportScale));if(appState.exportWithDarkMode){svgRoot.setAttribute(\"filter\",THEME_FILTER);}assetPath=\"https://excalidraw.com/\";// Asset path needs to be determined only when using package\nif(process.env.IS_EXCALIDRAW_NPM_PACKAGE){assetPath=window.EXCALIDRAW_ASSET_PATH||\"https://unpkg.com/\".concat(process.env.PKG_NAME,\"@\").concat(process.env.PKG_VERSION);if((_assetPath=assetPath)!==null&&_assetPath!==void 0&&_assetPath.startsWith(\"/\")){assetPath=assetPath.replace(\"/\",\"\".concat(window.location.origin,\"/\"));}assetPath=\"\".concat(assetPath,\"/dist/excalidraw-assets/\");}// do not apply clipping when we're exporting the whole scene\nisExportingWholeCanvas=((_Scene$getScene=Scene.getScene(elements[0]))===null||_Scene$getScene===void 0?void 0:(_Scene$getScene$getNo=_Scene$getScene.getNonDeletedElements())===null||_Scene$getScene$getNo===void 0?void 0:_Scene$getScene$getNo.length)===elements.length;onlyExportingSingleFrame=isOnlyExportingSingleFrame(elements);offsetX=-minX+(onlyExportingSingleFrame?0:exportPadding);offsetY=-minY+(onlyExportingSingleFrame?0:exportPadding);exportingFrame=isExportingWholeCanvas||!onlyExportingSingleFrame?undefined:elements.find(function(element){return element.type===\"frame\";});exportingFrameClipPath=\"\";if(exportingFrame){_getElementAbsoluteCo=getElementAbsoluteCoords(exportingFrame),_getElementAbsoluteCo2=_slicedToArray(_getElementAbsoluteCo,4),x1=_getElementAbsoluteCo2[0],y1=_getElementAbsoluteCo2[1],x2=_getElementAbsoluteCo2[2],y2=_getElementAbsoluteCo2[3];cx=(x2-x1)/2-(exportingFrame.x-x1);cy=(y2-y1)/2-(exportingFrame.y-y1);exportingFrameClipPath=\"<clipPath id=\".concat(exportingFrame.id,\">\\n            <rect transform=\\\"translate(\").concat(exportingFrame.x+offsetX,\" \").concat(exportingFrame.y+offsetY,\") rotate(\").concat(exportingFrame.angle,\" \").concat(cx,\" \").concat(cy,\")\\\"\\n          width=\\\"\").concat(exportingFrame.width,\"\\\"\\n          height=\\\"\").concat(exportingFrame.height,\"\\\"\\n          >\\n          </rect>\\n        </clipPath>\");}svgRoot.innerHTML=\"\\n  \".concat(SVG_EXPORT_TAG,\"\\n  \").concat(metadata,\"\\n  <defs>\\n    <style class=\\\"style-fonts\\\">\\n      @font-face {\\n        font-family: \\\"Virgil\\\";\\n        src: url(\\\"\").concat(assetPath,\"Virgil.woff2\\\");\\n      }\\n      @font-face {\\n        font-family: \\\"Cascadia\\\";\\n        src: url(\\\"\").concat(assetPath,\"Cascadia.woff2\\\");\\n      }\\n    </style>\\n    \").concat(exportingFrameClipPath,\"\\n  </defs>\\n  \");// render background rect\nif(appState.exportBackground&&viewBackgroundColor){rect=svgRoot.ownerDocument.createElementNS(SVG_NS,\"rect\");rect.setAttribute(\"x\",\"0\");rect.setAttribute(\"y\",\"0\");rect.setAttribute(\"width\",\"\".concat(width));rect.setAttribute(\"height\",\"\".concat(height));rect.setAttribute(\"fill\",viewBackgroundColor);svgRoot.appendChild(rect);}rsvg=rough.svg(svgRoot);renderSceneToSvg(elements,rsvg,svgRoot,files||{},{offsetX:offsetX,offsetY:offsetY,exportWithDarkMode:appState.exportWithDarkMode,exportingFrameId:(exportingFrame===null||exportingFrame===void 0?void 0:exportingFrame.id)||null});return _context2.abrupt(\"return\",svgRoot);case 36:case\"end\":return _context2.stop();}},_callee2,null,[[3,11]]);}));return function exportToSvg(_x5,_x6,_x7,_x8){return _ref3.apply(this,arguments);};}();// calculate smallest area to fit the contents in\nvar getCanvasSize=function getCanvasSize(elements,exportPadding){var _Scene$getScene2,_Scene$getScene2$getN;// we should decide if we are exporting the whole canvas\n// if so, we are not clipping elements in the frame\n// and therefore, we should not do anything special\nvar isExportingWholeCanvas=((_Scene$getScene2=Scene.getScene(elements[0]))===null||_Scene$getScene2===void 0?void 0:(_Scene$getScene2$getN=_Scene$getScene2.getNonDeletedElements())===null||_Scene$getScene2$getN===void 0?void 0:_Scene$getScene2$getN.length)===elements.length;var onlyExportingSingleFrame=isOnlyExportingSingleFrame(elements);if(!isExportingWholeCanvas||onlyExportingSingleFrame){var frames=elements.filter(function(element){return element.type===\"frame\";});var exportedFrameIds=frames.reduce(function(acc,frame){acc[frame.id]=true;return acc;},{});// elements in a frame do not affect the canvas size if we're not exporting\n// the whole canvas\nelements=elements.filter(function(element){var _element$frameId;return!exportedFrameIds[(_element$frameId=element.frameId)!==null&&_element$frameId!==void 0?_element$frameId:\"\"];});}var _getCommonBounds=getCommonBounds(elements),_getCommonBounds2=_slicedToArray(_getCommonBounds,4),minX=_getCommonBounds2[0],minY=_getCommonBounds2[1],maxX=_getCommonBounds2[2],maxY=_getCommonBounds2[3];var width=distance(minX,maxX)+(onlyExportingSingleFrame?0:exportPadding*2);var height=distance(minY,maxY)+(onlyExportingSingleFrame?0:exportPadding*2);return[minX,minY,width,height];};export var getExportSize=function getExportSize(elements,exportPadding,scale){var _getCanvasSize$map=getCanvasSize(elements,exportPadding).map(function(dimension){return Math.trunc(dimension*scale);}),_getCanvasSize$map2=_slicedToArray(_getCanvasSize$map,4),width=_getCanvasSize$map2[2],height=_getCanvasSize$map2[3];return[width,height];};","map":{"version":3,"names":["rough","getCommonBounds","getElementAbsoluteCoords","renderScene","renderSceneToSvg","distance","isOnlyExportingSingleFrame","DEFAULT_EXPORT_PADDING","SVG_NS","THEME_FILTER","getDefaultAppState","serializeAsJSON","getInitializedImageElements","updateImageCache","Scene","SVG_EXPORT_TAG","exportToCanvas","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","elements","appState","files","_ref","exportBackground","_ref$exportPadding","exportPadding","viewBackgroundColor","createCanvas","_getCanvasSize","_getCanvasSize2","minX","minY","width","height","_createCanvas","canvas","_createCanvas$scale","scale","defaultAppState","_yield$updateImageCac","imageCache","onlyExportingSingleFrame","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","document","createElement","exportScale","getCanvasSize","_slicedToArray","Map","fileIds","map","element","fileId","sent","rc","renderConfig","scrollX","scrollY","zoom","remotePointerViewportCoords","remoteSelectedElementIds","shouldCacheIgnoreZoom","remotePointerUsernames","remotePointerUserStates","theme","exportWithDarkMode","renderScrollbars","renderSelection","renderGrid","isExporting","abrupt","stop","_x","_x2","_x3","_x4","apply","exportToSvg","_ref3","_callee2","opts","_Scene$getScene","_Scene$getScene$getNo","_appState$exportPaddi","_appState$exportScale","exportEmbedScene","metadata","_opts$serializeAsJSON","_getCanvasSize3","_getCanvasSize4","svgRoot","assetPath","_assetPath","isExportingWholeCanvas","offsetX","offsetY","exportingFrame","exportingFrameClipPath","_getElementAbsoluteCo","_getElementAbsoluteCo2","x1","y1","x2","y2","cx","cy","rect","rsvg","_callee2$","_context2","encodeSvgMetadata","text","call","t0","console","error","createElementNS","setAttribute","concat","process","env","IS_EXCALIDRAW_NPM_PACKAGE","window","EXCALIDRAW_ASSET_PATH","PKG_NAME","PKG_VERSION","startsWith","replace","location","origin","getScene","getNonDeletedElements","find","type","x","y","id","angle","innerHTML","ownerDocument","appendChild","svg","exportingFrameId","_x5","_x6","_x7","_x8","_Scene$getScene2","_Scene$getScene2$getN","frames","filter","exportedFrameIds","reduce","acc","frame","_element$frameId","frameId","_getCommonBounds","_getCommonBounds2","maxX","maxY","getExportSize","_getCanvasSize$map","dimension","Math","trunc","_getCanvasSize$map2"],"sources":["D:/project/excalidraw-cn/src/scene/export.ts"],"sourcesContent":["import rough from \"roughjs/bin/rough\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds, getElementAbsoluteCoords } from \"../element/bounds\";\nimport { renderScene, renderSceneToSvg } from \"../renderer/renderScene\";\nimport { distance, isOnlyExportingSingleFrame } from \"../utils\";\nimport { AppState, BinaryFiles } from \"../types\";\nimport { DEFAULT_EXPORT_PADDING, SVG_NS, THEME_FILTER } from \"../constants\";\nimport { getDefaultAppState } from \"../appState\";\nimport { serializeAsJSON } from \"../data/json\";\nimport {\n  getInitializedImageElements,\n  updateImageCache,\n} from \"../element/image\";\nimport Scene from \"./Scene\";\n\nexport const SVG_EXPORT_TAG = `<!-- svg-source:excalidraw -->`;\n\nexport const exportToCanvas = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  files: BinaryFiles,\n  {\n    exportBackground,\n    exportPadding = DEFAULT_EXPORT_PADDING,\n    viewBackgroundColor,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n  },\n  createCanvas: (\n    width: number,\n    height: number,\n  ) => { canvas: HTMLCanvasElement; scale: number } = (width, height) => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width * appState.exportScale;\n    canvas.height = height * appState.exportScale;\n    return { canvas, scale: appState.exportScale };\n  },\n) => {\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  const { canvas, scale = 1 } = createCanvas(width, height);\n\n  const defaultAppState = getDefaultAppState();\n\n  const { imageCache } = await updateImageCache({\n    imageCache: new Map(),\n    fileIds: getInitializedImageElements(elements).map(\n      (element) => element.fileId,\n    ),\n    files,\n  });\n\n  const onlyExportingSingleFrame = isOnlyExportingSingleFrame(elements);\n\n  renderScene({\n    elements,\n    appState,\n    scale,\n    rc: rough.canvas(canvas),\n    canvas,\n    renderConfig: {\n      viewBackgroundColor: exportBackground ? viewBackgroundColor : null,\n      scrollX: -minX + (onlyExportingSingleFrame ? 0 : exportPadding),\n      scrollY: -minY + (onlyExportingSingleFrame ? 0 : exportPadding),\n      zoom: defaultAppState.zoom,\n      remotePointerViewportCoords: {},\n      remoteSelectedElementIds: {},\n      shouldCacheIgnoreZoom: false,\n      remotePointerUsernames: {},\n      remotePointerUserStates: {},\n      theme: appState.exportWithDarkMode ? \"dark\" : \"light\",\n      imageCache,\n      renderScrollbars: false,\n      renderSelection: false,\n      renderGrid: false,\n      isExporting: true,\n    },\n  });\n\n  return canvas;\n};\n\nexport const exportToSvg = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    exportScale?: number;\n    viewBackgroundColor: string;\n    exportWithDarkMode?: boolean;\n    exportEmbedScene?: boolean;\n    renderFrame?: boolean;\n  },\n  files: BinaryFiles | null,\n  opts?: {\n    serializeAsJSON?: () => string;\n  },\n): Promise<SVGSVGElement> => {\n  const {\n    exportPadding = DEFAULT_EXPORT_PADDING,\n    viewBackgroundColor,\n    exportScale = 1,\n    exportEmbedScene,\n  } = appState;\n  let metadata = \"\";\n  if (exportEmbedScene) {\n    try {\n      metadata = await (\n        await import(/* webpackChunkName: \"image\" */ \"../../src/data/image\")\n      ).encodeSvgMetadata({\n        text: opts?.serializeAsJSON\n          ? opts?.serializeAsJSON?.()\n          : serializeAsJSON(elements, appState, files || {}, \"local\"),\n      });\n    } catch (error: any) {\n      console.error(error);\n    }\n  }\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  // initialize SVG root\n  const svgRoot = document.createElementNS(SVG_NS, \"svg\");\n  svgRoot.setAttribute(\"version\", \"1.1\");\n  svgRoot.setAttribute(\"xmlns\", SVG_NS);\n  svgRoot.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n  svgRoot.setAttribute(\"width\", `${width * exportScale}`);\n  svgRoot.setAttribute(\"height\", `${height * exportScale}`);\n  if (appState.exportWithDarkMode) {\n    svgRoot.setAttribute(\"filter\", THEME_FILTER);\n  }\n\n  let assetPath = \"https://excalidraw.com/\";\n\n  // Asset path needs to be determined only when using package\n  if (process.env.IS_EXCALIDRAW_NPM_PACKAGE) {\n    assetPath =\n      window.EXCALIDRAW_ASSET_PATH ||\n      `https://unpkg.com/${process.env.PKG_NAME}@${process.env.PKG_VERSION}`;\n\n    if (assetPath?.startsWith(\"/\")) {\n      assetPath = assetPath.replace(\"/\", `${window.location.origin}/`);\n    }\n    assetPath = `${assetPath}/dist/excalidraw-assets/`;\n  }\n\n  // do not apply clipping when we're exporting the whole scene\n  const isExportingWholeCanvas =\n    Scene.getScene(elements[0])?.getNonDeletedElements()?.length ===\n    elements.length;\n\n  const onlyExportingSingleFrame = isOnlyExportingSingleFrame(elements);\n\n  const offsetX = -minX + (onlyExportingSingleFrame ? 0 : exportPadding);\n  const offsetY = -minY + (onlyExportingSingleFrame ? 0 : exportPadding);\n\n  const exportingFrame =\n    isExportingWholeCanvas || !onlyExportingSingleFrame\n      ? undefined\n      : elements.find((element) => element.type === \"frame\");\n\n  let exportingFrameClipPath = \"\";\n  if (exportingFrame) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(exportingFrame);\n    const cx = (x2 - x1) / 2 - (exportingFrame.x - x1);\n    const cy = (y2 - y1) / 2 - (exportingFrame.y - y1);\n\n    exportingFrameClipPath = `<clipPath id=${exportingFrame.id}>\n            <rect transform=\"translate(${exportingFrame.x + offsetX} ${\n      exportingFrame.y + offsetY\n    }) rotate(${exportingFrame.angle} ${cx} ${cy})\"\n          width=\"${exportingFrame.width}\"\n          height=\"${exportingFrame.height}\"\n          >\n          </rect>\n        </clipPath>`;\n  }\n\n  svgRoot.innerHTML = `\n  ${SVG_EXPORT_TAG}\n  ${metadata}\n  <defs>\n    <style class=\"style-fonts\">\n      @font-face {\n        font-family: \"Virgil\";\n        src: url(\"${assetPath}Virgil.woff2\");\n      }\n      @font-face {\n        font-family: \"Cascadia\";\n        src: url(\"${assetPath}Cascadia.woff2\");\n      }\n    </style>\n    ${exportingFrameClipPath}\n  </defs>\n  `;\n\n  // render background rect\n  if (appState.exportBackground && viewBackgroundColor) {\n    const rect = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"rect\");\n    rect.setAttribute(\"x\", \"0\");\n    rect.setAttribute(\"y\", \"0\");\n    rect.setAttribute(\"width\", `${width}`);\n    rect.setAttribute(\"height\", `${height}`);\n    rect.setAttribute(\"fill\", viewBackgroundColor);\n    svgRoot.appendChild(rect);\n  }\n\n  const rsvg = rough.svg(svgRoot);\n  renderSceneToSvg(elements, rsvg, svgRoot, files || {}, {\n    offsetX,\n    offsetY,\n    exportWithDarkMode: appState.exportWithDarkMode,\n    exportingFrameId: exportingFrame?.id || null,\n  });\n\n  return svgRoot;\n};\n\n// calculate smallest area to fit the contents in\nconst getCanvasSize = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  exportPadding: number,\n): [number, number, number, number] => {\n  // we should decide if we are exporting the whole canvas\n  // if so, we are not clipping elements in the frame\n  // and therefore, we should not do anything special\n\n  const isExportingWholeCanvas =\n    Scene.getScene(elements[0])?.getNonDeletedElements()?.length ===\n    elements.length;\n\n  const onlyExportingSingleFrame = isOnlyExportingSingleFrame(elements);\n\n  if (!isExportingWholeCanvas || onlyExportingSingleFrame) {\n    const frames = elements.filter((element) => element.type === \"frame\");\n\n    const exportedFrameIds = frames.reduce((acc, frame) => {\n      acc[frame.id] = true;\n      return acc;\n    }, {} as Record<string, true>);\n\n    // elements in a frame do not affect the canvas size if we're not exporting\n    // the whole canvas\n    elements = elements.filter(\n      (element) => !exportedFrameIds[element.frameId ?? \"\"],\n    );\n  }\n\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width =\n    distance(minX, maxX) + (onlyExportingSingleFrame ? 0 : exportPadding * 2);\n  const height =\n    distance(minY, maxY) + (onlyExportingSingleFrame ? 0 : exportPadding * 2);\n\n  return [minX, minY, width, height];\n};\n\nexport const getExportSize = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  exportPadding: number,\n  scale: number,\n): [number, number] => {\n  const [, , width, height] = getCanvasSize(elements, exportPadding).map(\n    (dimension) => Math.trunc(dimension * scale),\n  );\n\n  return [width, height];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}