{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\ColorPicker\\\\TopPicks.tsx\";\nimport clsx from \"clsx\";\nimport { DEFAULT_CANVAS_BACKGROUND_PICKS, DEFAULT_ELEMENT_BACKGROUND_PICKS, DEFAULT_ELEMENT_STROKE_PICKS } from \"../../colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TopPicks = _ref => {\n  let {\n    onChange,\n    type,\n    activeColor,\n    topPicks\n  } = _ref;\n  let colors;\n  if (type === \"elementStroke\") {\n    colors = DEFAULT_ELEMENT_STROKE_PICKS;\n  }\n  if (type === \"elementBackground\") {\n    colors = DEFAULT_ELEMENT_BACKGROUND_PICKS;\n  }\n  if (type === \"canvasBackground\") {\n    colors = DEFAULT_CANVAS_BACKGROUND_PICKS;\n  }\n\n  // this one can overwrite defaults\n  if (topPicks) {\n    colors = topPicks;\n  }\n  if (!colors) {\n    console.error(\"Invalid type for TopPicks\");\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"color-picker__top-picks\",\n    children: colors.map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: clsx(\"color-picker__button\", {\n        active: color === activeColor,\n        \"is-transparent\": color === \"transparent\" || !color\n      }),\n      style: {\n        \"--swatch-color\": color\n      },\n      type: \"button\",\n      title: color,\n      onClick: () => onChange(color),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker__button-outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, color, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["clsx","DEFAULT_CANVAS_BACKGROUND_PICKS","DEFAULT_ELEMENT_BACKGROUND_PICKS","DEFAULT_ELEMENT_STROKE_PICKS","jsxDEV","_jsxDEV","TopPicks","_ref","onChange","type","activeColor","topPicks","colors","console","error","className","children","map","color","active","style","title","onClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/project/excalidraw-cn/src/components/ColorPicker/TopPicks.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport { ColorPickerType } from \"./colorPickerUtils\";\nimport {\n  DEFAULT_CANVAS_BACKGROUND_PICKS,\n  DEFAULT_ELEMENT_BACKGROUND_PICKS,\n  DEFAULT_ELEMENT_STROKE_PICKS,\n} from \"../../colors\";\n\ninterface TopPicksProps {\n  onChange: (color: string) => void;\n  type: ColorPickerType;\n  activeColor: string;\n  topPicks?: readonly string[];\n}\n\nexport const TopPicks = ({\n  onChange,\n  type,\n  activeColor,\n  topPicks,\n}: TopPicksProps) => {\n  let colors;\n  if (type === \"elementStroke\") {\n    colors = DEFAULT_ELEMENT_STROKE_PICKS;\n  }\n\n  if (type === \"elementBackground\") {\n    colors = DEFAULT_ELEMENT_BACKGROUND_PICKS;\n  }\n\n  if (type === \"canvasBackground\") {\n    colors = DEFAULT_CANVAS_BACKGROUND_PICKS;\n  }\n\n  // this one can overwrite defaults\n  if (topPicks) {\n    colors = topPicks;\n  }\n\n  if (!colors) {\n    console.error(\"Invalid type for TopPicks\");\n    return null;\n  }\n\n  return (\n    <div className=\"color-picker__top-picks\">\n      {colors.map((color: string) => (\n        <button\n          className={clsx(\"color-picker__button\", {\n            active: color === activeColor,\n            \"is-transparent\": color === \"transparent\" || !color,\n          })}\n          style={{ \"--swatch-color\": color }}\n          key={color}\n          type=\"button\"\n          title={color}\n          onClick={() => onChange(color)}\n        >\n          <div className=\"color-picker__button-outline\" />\n        </button>\n      ))}\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AAEvB,SACEC,+BAA+B,EAC/BC,gCAAgC,EAChCC,4BAA4B,QACvB,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAStB,OAAO,MAAMC,QAAQ,GAAGC,IAAA,IAKH;EAAA,IALI;IACvBC,QAAQ;IACRC,IAAI;IACJC,WAAW;IACXC;EACa,CAAC,GAAAJ,IAAA;EACd,IAAIK,MAAM;EACV,IAAIH,IAAI,KAAK,eAAe,EAAE;IAC5BG,MAAM,GAAGT,4BAA4B;EACvC;EAEA,IAAIM,IAAI,KAAK,mBAAmB,EAAE;IAChCG,MAAM,GAAGV,gCAAgC;EAC3C;EAEA,IAAIO,IAAI,KAAK,kBAAkB,EAAE;IAC/BG,MAAM,GAAGX,+BAA+B;EAC1C;;EAEA;EACA,IAAIU,QAAQ,EAAE;IACZC,MAAM,GAAGD,QAAQ;EACnB;EAEA,IAAI,CAACC,MAAM,EAAE;IACXC,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;IAC1C,OAAO,IAAI;EACb;EAEA,oBACET,OAAA;IAAKU,SAAS,EAAC,yBAAyB;IAAAC,QAAA,EACrCJ,MAAM,CAACK,GAAG,CAAEC,KAAa,iBACxBb,OAAA;MACEU,SAAS,EAAEf,IAAI,CAAC,sBAAsB,EAAE;QACtCmB,MAAM,EAAED,KAAK,KAAKR,WAAW;QAC7B,gBAAgB,EAAEQ,KAAK,KAAK,aAAa,IAAI,CAACA;MAChD,CAAC,CAAE;MACHE,KAAK,EAAE;QAAE,gBAAgB,EAAEF;MAAM,CAAE;MAEnCT,IAAI,EAAC,QAAQ;MACbY,KAAK,EAAEH,KAAM;MACbI,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAACU,KAAK,CAAE;MAAAF,QAAA,eAE/BX,OAAA;QAAKU,SAAS,EAAC;MAA8B;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG,GAL3CR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAOb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}