{"ast":null,"code":"import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"type\",\"onSelect\",\"selected\",\"children\",\"className\"];import clsx from\"clsx\";import{composeEventHandlers}from\"../utils\";import\"./Button.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";/**\n * A generic button component that follows Excalidraw's design system.\n * Style can be customised using `className` or `style` prop.\n * Accepts all props that a regular `button` element accepts.\n */export var Button=function Button(_ref){var _ref$type=_ref.type,type=_ref$type===void 0?\"button\":_ref$type,onSelect=_ref.onSelect,selected=_ref.selected,children=_ref.children,_ref$className=_ref.className,className=_ref$className===void 0?\"\":_ref$className,rest=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/_jsx(\"button\",_objectSpread(_objectSpread({onClick:composeEventHandlers(rest.onClick,function(event){onSelect();}),type:type,className:clsx(\"excalidraw-button\",className,{selected:selected})},rest),{},{children:children}));};","map":{"version":3,"names":["clsx","composeEventHandlers","jsx","_jsx","Button","_ref","_ref$type","type","onSelect","selected","children","_ref$className","className","rest","_objectWithoutProperties","_excluded","_objectSpread","onClick","event"],"sources":["D:/project/excalidraw-cn/src/components/Button.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport { composeEventHandlers } from \"../utils\";\nimport \"./Button.scss\";\n\ninterface ButtonProps extends React.HTMLAttributes<HTMLButtonElement> {\n  type?: \"button\" | \"submit\" | \"reset\";\n  onSelect: () => any;\n  /** whether button is in active state */\n  selected?: boolean;\n  children: React.ReactNode;\n  className?: string;\n}\n\n/**\n * A generic button component that follows Excalidraw's design system.\n * Style can be customised using `className` or `style` prop.\n * Accepts all props that a regular `button` element accepts.\n */\nexport const Button = ({\n  type = \"button\",\n  onSelect,\n  selected,\n  children,\n  className = \"\",\n  ...rest\n}: ButtonProps) => {\n  return (\n    <button\n      onClick={composeEventHandlers(rest.onClick, (event) => {\n        onSelect();\n      })}\n      type={type}\n      className={clsx(\"excalidraw-button\", className, { selected })}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n"],"mappings":"mTAAA,MAAO,CAAAA,IAAI,KAAM,MAAM,CACvB,OAASC,oBAAoB,KAAQ,UAAU,CAC/C,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAWvB;AACA;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAAC,IAAA,CAOA,KAAAC,SAAA,CAAAD,IAAA,CANjBE,IAAI,CAAJA,IAAI,CAAAD,SAAA,UAAG,QAAQ,CAAAA,SAAA,CACfE,QAAQ,CAAAH,IAAA,CAARG,QAAQ,CACRC,QAAQ,CAAAJ,IAAA,CAARI,QAAQ,CACRC,QAAQ,CAAAL,IAAA,CAARK,QAAQ,CAAAC,cAAA,CAAAN,IAAA,CACRO,SAAS,CAATA,SAAS,CAAAD,cAAA,UAAG,EAAE,CAAAA,cAAA,CACXE,IAAI,CAAAC,wBAAA,CAAAT,IAAA,CAAAU,SAAA,EAEP,mBACEZ,IAAA,UAAAa,aAAA,CAAAA,aAAA,EACEC,OAAO,CAAEhB,oBAAoB,CAACY,IAAI,CAACI,OAAO,CAAE,SAACC,KAAK,CAAK,CACrDV,QAAQ,EAAE,CACZ,CAAC,CAAE,CACHD,IAAI,CAAEA,IAAK,CACXK,SAAS,CAAEZ,IAAI,CAAC,mBAAmB,CAAEY,SAAS,CAAE,CAAEH,QAAQ,CAARA,QAAS,CAAC,CAAE,EAC1DI,IAAI,MAAAH,QAAA,CAEPA,QAAQ,GACF,CAEb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}