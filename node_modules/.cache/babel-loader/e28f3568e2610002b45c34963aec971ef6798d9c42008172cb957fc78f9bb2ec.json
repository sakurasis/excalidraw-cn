{"ast":null,"code":"export var hasBackground=function hasBackground(type){return type===\"rectangle\"||type===\"ellipse\"||type===\"diamond\"||type===\"line\"||type===\"freedraw\";};export var hasStrokeColor=function hasStrokeColor(type){return type!==\"image\"&&type!==\"frame\";};export var hasStrokeWidth=function hasStrokeWidth(type){return type===\"rectangle\"||type===\"ellipse\"||type===\"diamond\"||type===\"freedraw\"||type===\"arrow\"||type===\"line\";};export var hasStrokeStyle=function hasStrokeStyle(type){return type===\"rectangle\"||type===\"ellipse\"||type===\"diamond\"||type===\"arrow\"||type===\"line\";};export var canChangeRoundness=function canChangeRoundness(type){return type===\"rectangle\"||type===\"arrow\"||type===\"line\"||type===\"diamond\";};export var hasText=function hasText(type){return type===\"text\";};export var canHaveArrowheads=function canHaveArrowheads(type){return type===\"arrow\";};export var getElementAtPosition=function getElementAtPosition(elements,isAtPositionFn){var hitElement=null;// We need to to hit testing from front (end of the array) to back (beginning of the array)\n// because array is ordered from lower z-index to highest and we want element z-index\n// with higher z-index\nfor(var index=elements.length-1;index>=0;--index){var _element=elements[index];if(_element.isDeleted){continue;}if(isAtPositionFn(_element)){hitElement=_element;break;}}return hitElement;};export var getElementsAtPosition=function getElementsAtPosition(elements,isAtPositionFn){// The parameter elements comes ordered from lower z-index to higher.\n// We want to preserve that order on the returned array.\nreturn elements.filter(function(element){return!element.isDeleted&&isAtPositionFn(element);});};","map":{"version":3,"names":["hasBackground","type","hasStrokeColor","hasStrokeWidth","hasStrokeStyle","canChangeRoundness","hasText","canHaveArrowheads","getElementAtPosition","elements","isAtPositionFn","hitElement","index","length","element","isDeleted","getElementsAtPosition","filter"],"sources":["D:/project/excalidraw-cn/src/scene/comparisons.ts"],"sourcesContent":["import { NonDeletedExcalidrawElement } from \"../element/types\";\n\nexport const hasBackground = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"line\" ||\n  type === \"freedraw\";\n\nexport const hasStrokeColor = (type: string) =>\n  type !== \"image\" && type !== \"frame\";\n\nexport const hasStrokeWidth = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"freedraw\" ||\n  type === \"arrow\" ||\n  type === \"line\";\n\nexport const hasStrokeStyle = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"arrow\" ||\n  type === \"line\";\n\nexport const canChangeRoundness = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"arrow\" ||\n  type === \"line\" ||\n  type === \"diamond\";\n\nexport const hasText = (type: string) => type === \"text\";\n\nexport const canHaveArrowheads = (type: string) => type === \"arrow\";\n\nexport const getElementAtPosition = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  isAtPositionFn: (element: NonDeletedExcalidrawElement) => boolean,\n) => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  // because array is ordered from lower z-index to highest and we want element z-index\n  // with higher z-index\n  for (let index = elements.length - 1; index >= 0; --index) {\n    const element = elements[index];\n    if (element.isDeleted) {\n      continue;\n    }\n    if (isAtPositionFn(element)) {\n      hitElement = element;\n      break;\n    }\n  }\n\n  return hitElement;\n};\n\nexport const getElementsAtPosition = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  isAtPositionFn: (element: NonDeletedExcalidrawElement) => boolean,\n) => {\n  // The parameter elements comes ordered from lower z-index to higher.\n  // We want to preserve that order on the returned array.\n  return elements.filter(\n    (element) => !element.isDeleted && isAtPositionFn(element),\n  );\n};\n"],"mappings":"AAEA,MAAO,IAAM,CAAAA,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,IAAY,QACxC,CAAAA,IAAI,GAAK,WAAW,EACpBA,IAAI,GAAK,SAAS,EAClBA,IAAI,GAAK,SAAS,EAClBA,IAAI,GAAK,MAAM,EACfA,IAAI,GAAK,UAAU,GAErB,MAAO,IAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAID,IAAY,QACzC,CAAAA,IAAI,GAAK,OAAO,EAAIA,IAAI,GAAK,OAAO,GAEtC,MAAO,IAAM,CAAAE,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIF,IAAY,QACzC,CAAAA,IAAI,GAAK,WAAW,EACpBA,IAAI,GAAK,SAAS,EAClBA,IAAI,GAAK,SAAS,EAClBA,IAAI,GAAK,UAAU,EACnBA,IAAI,GAAK,OAAO,EAChBA,IAAI,GAAK,MAAM,GAEjB,MAAO,IAAM,CAAAG,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIH,IAAY,QACzC,CAAAA,IAAI,GAAK,WAAW,EACpBA,IAAI,GAAK,SAAS,EAClBA,IAAI,GAAK,SAAS,EAClBA,IAAI,GAAK,OAAO,EAChBA,IAAI,GAAK,MAAM,GAEjB,MAAO,IAAM,CAAAI,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAIJ,IAAY,QAC7C,CAAAA,IAAI,GAAK,WAAW,EACpBA,IAAI,GAAK,OAAO,EAChBA,IAAI,GAAK,MAAM,EACfA,IAAI,GAAK,SAAS,GAEpB,MAAO,IAAM,CAAAK,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIL,IAAY,QAAK,CAAAA,IAAI,GAAK,MAAM,GAExD,MAAO,IAAM,CAAAM,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIN,IAAY,QAAK,CAAAA,IAAI,GAAK,OAAO,GAEnE,MAAO,IAAM,CAAAO,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAC/BC,QAAgD,CAChDC,cAAiE,CAC9D,CACH,GAAI,CAAAC,UAAU,CAAG,IAAI,CACrB;AACA;AACA;AACA,IAAK,GAAI,CAAAC,KAAK,CAAGH,QAAQ,CAACI,MAAM,CAAG,CAAC,CAAED,KAAK,EAAI,CAAC,CAAE,EAAEA,KAAK,CAAE,CACzD,GAAM,CAAAE,QAAO,CAAGL,QAAQ,CAACG,KAAK,CAAC,CAC/B,GAAIE,QAAO,CAACC,SAAS,CAAE,CACrB,SACF,CACA,GAAIL,cAAc,CAACI,QAAO,CAAC,CAAE,CAC3BH,UAAU,CAAGG,QAAO,CACpB,MACF,CACF,CAEA,MAAO,CAAAH,UAAU,CACnB,CAAC,CAED,MAAO,IAAM,CAAAK,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAChCP,QAAgD,CAChDC,cAAiE,CAC9D,CACH;AACA;AACA,MAAO,CAAAD,QAAQ,CAACQ,MAAM,CACpB,SAACH,OAAO,QAAK,CAACA,OAAO,CAACC,SAAS,EAAIL,cAAc,CAACI,OAAO,CAAC,GAC3D,CACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}