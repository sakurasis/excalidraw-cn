{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\Actions.tsx\";\nimport React, { useState } from \"react\";\nimport { getNonDeletedElements } from \"../element\";\nimport { t } from \"../i18n\";\nimport { useDevice } from \"../components/App\";\nimport { canChangeRoundness, canHaveArrowheads, getTargetElements, hasBackground, hasStrokeStyle, hasStrokeWidth, hasText } from \"../scene\";\nimport { SHAPES } from \"../shapes\";\nimport { capitalizeString, isTransparent, updateActiveTool, setCursorForShape } from \"../utils\";\nimport Stack from \"./Stack\";\nimport { ToolButton } from \"./ToolButton\";\nimport { hasStrokeColor } from \"../scene/comparisons\";\nimport { trackEvent } from \"../analytics\";\nimport { hasBoundTextElement } from \"../element/typeChecks\";\nimport clsx from \"clsx\";\nimport { actionToggleZenMode } from \"../actions\";\nimport { Tooltip } from \"./Tooltip\";\nimport { shouldAllowVerticalAlign, suppportsHorizontalAlign } from \"../element/textElement\";\nimport \"./Actions.scss\";\nimport DropdownMenu from \"./dropdownMenu/DropdownMenu\";\nimport { extraToolsIcon, frameToolIcon } from \"./icons\";\nimport { KEYS } from \"../keys\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SelectedShapeActions = _ref => {\n  var _targetElements$;\n  let {\n    appState,\n    elements,\n    renderAction\n  } = _ref;\n  const targetElements = getTargetElements(getNonDeletedElements(elements), appState);\n  let isSingleElementBoundContainer = false;\n  if (targetElements.length === 2 && (hasBoundTextElement(targetElements[0]) || hasBoundTextElement(targetElements[1]))) {\n    isSingleElementBoundContainer = true;\n  }\n  const isEditing = Boolean(appState.editingElement);\n  const device = useDevice();\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n  const showFillIcons = hasBackground(appState.activeTool.type) || targetElements.some(element => hasBackground(element.type) && !isTransparent(element.backgroundColor));\n  const showChangeBackgroundIcons = hasBackground(appState.activeTool.type) || targetElements.some(element => hasBackground(element.type));\n  const showLinkIcon = targetElements.length === 1 || isSingleElementBoundContainer;\n  let commonSelectedType = ((_targetElements$ = targetElements[0]) === null || _targetElements$ === void 0 ? void 0 : _targetElements$.type) || null;\n  for (const element of targetElements) {\n    if (element.type !== commonSelectedType) {\n      commonSelectedType = null;\n      break;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panelColumn\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: (hasStrokeColor(appState.activeTool.type) && appState.activeTool.type !== \"image\" && commonSelectedType !== \"image\" && commonSelectedType !== \"frame\" || targetElements.some(element => hasStrokeColor(element.type))) && renderAction(\"changeStrokeColor\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), showChangeBackgroundIcons && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderAction(\"changeBackgroundColor\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), showFillIcons && renderAction(\"changeFillStyle\"), (hasStrokeWidth(appState.activeTool.type) || targetElements.some(element => hasStrokeWidth(element.type))) && renderAction(\"changeStrokeWidth\"), (appState.activeTool.type === \"freedraw\" || targetElements.some(element => element.type === \"freedraw\")) && renderAction(\"changeStrokeShape\"), (hasStrokeStyle(appState.activeTool.type) || targetElements.some(element => hasStrokeStyle(element.type))) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderAction(\"changeStrokeStyle\"), renderAction(\"changeSloppiness\")]\n    }, void 0, true), (canChangeRoundness(appState.activeTool.type) || targetElements.some(element => canChangeRoundness(element.type))) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: renderAction(\"changeRoundness\")\n    }, void 0, false), (hasText(appState.activeTool.type) || targetElements.some(element => hasText(element.type))) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderAction(\"changeFontSize\"), renderAction(\"changeFontFamily\"), suppportsHorizontalAlign(targetElements) && renderAction(\"changeTextAlign\")]\n    }, void 0, true), shouldAllowVerticalAlign(targetElements) && renderAction(\"changeVerticalAlign\"), (canHaveArrowheads(appState.activeTool.type) || targetElements.some(element => canHaveArrowheads(element.type))) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: renderAction(\"changeArrowhead\")\n    }, void 0, false), renderAction(\"changeOpacity\"), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: t(\"labels.layers\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonList\",\n        children: [renderAction(\"sendToBack\"), renderAction(\"sendBackward\"), renderAction(\"bringToFront\"), renderAction(\"bringForward\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), targetElements.length > 1 && !isSingleElementBoundContainer && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: t(\"labels.align\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonList\",\n        children: [isRTL ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [renderAction(\"alignRight\"), renderAction(\"alignHorizontallyCentered\"), renderAction(\"alignLeft\")]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [renderAction(\"alignLeft\"), renderAction(\"alignHorizontallyCentered\"), renderAction(\"alignRight\")]\n        }, void 0, true), targetElements.length > 2 && renderAction(\"distributeHorizontally\"), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexBasis: \"100%\",\n            height: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: \".5rem\",\n            marginTop: \"-0.5rem\"\n          },\n          children: [renderAction(\"alignTop\"), renderAction(\"alignVerticallyCentered\"), renderAction(\"alignBottom\"), targetElements.length > 2 && renderAction(\"distributeVertically\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), !isEditing && targetElements.length > 0 && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: t(\"labels.actions\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonList\",\n        children: [!device.isMobile && renderAction(\"duplicateSelection\"), !device.isMobile && renderAction(\"deleteSelectedElements\"), renderAction(\"group\"), renderAction(\"ungroup\"), showLinkIcon && renderAction(\"hyperlink\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\nexport const ShapesSwitcher = _ref2 => {\n  let {\n    canvas,\n    activeTool,\n    setAppState,\n    onImageAction,\n    appState\n  } = _ref2;\n  const [isExtraToolsMenuOpen, setIsExtraToolsMenuOpen] = useState(false);\n  const device = useDevice();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [SHAPES.map((_ref3, index) => {\n      let {\n        value,\n        icon,\n        key,\n        numericKey,\n        fillable\n      } = _ref3;\n      const label = t(`toolBar.${value}`);\n      const letter = key && capitalizeString(typeof key === \"string\" ? key : key[0]);\n      const shortcut = letter ? `${letter} ${t(\"helpDialog.or\")} ${numericKey}` : `${numericKey}`;\n      return /*#__PURE__*/_jsxDEV(ToolButton, {\n        className: clsx(\"Shape\", {\n          fillable\n        }),\n        type: \"radio\",\n        icon: icon,\n        checked: activeTool.type === value,\n        name: \"editor-current-shape\",\n        title: `${capitalizeString(label)} â€” ${shortcut}`,\n        keyBindingLabel: numericKey || letter,\n        \"aria-label\": capitalizeString(label),\n        \"aria-keyshortcuts\": shortcut,\n        \"data-testid\": `toolbar-${value}`,\n        onPointerDown: _ref4 => {\n          let {\n            pointerType\n          } = _ref4;\n          if (!appState.penDetected && pointerType === \"pen\") {\n            setAppState({\n              penDetected: true,\n              penMode: true\n            });\n          }\n        },\n        onChange: _ref5 => {\n          let {\n            pointerType\n          } = _ref5;\n          if (appState.activeTool.type !== value) {\n            trackEvent(\"toolbar\", value, \"ui\");\n          }\n          const nextActiveTool = updateActiveTool(appState, {\n            type: value\n          });\n          setAppState({\n            activeTool: nextActiveTool,\n            multiElement: null,\n            selectedElementIds: {}\n          });\n          setCursorForShape(canvas, {\n            ...appState,\n            activeTool: nextActiveTool\n          });\n          if (value === \"image\") {\n            onImageAction({\n              pointerType\n            });\n          }\n        }\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-toolbar__divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), device.isMobile ? /*#__PURE__*/_jsxDEV(ToolButton, {\n      className: clsx(\"Shape\", {\n        fillable: false\n      }),\n      type: \"radio\",\n      icon: frameToolIcon,\n      checked: activeTool.type === \"frame\",\n      name: \"editor-current-shape\",\n      title: `${capitalizeString(t(\"toolBar.frame\"))} â€” ${KEYS.F.toLocaleUpperCase()}`,\n      keyBindingLabel: KEYS.F.toLocaleUpperCase(),\n      \"aria-label\": capitalizeString(t(\"toolBar.frame\")),\n      \"aria-keyshortcuts\": KEYS.F.toLocaleUpperCase(),\n      \"data-testid\": `toolbar-frame`,\n      onPointerDown: _ref6 => {\n        let {\n          pointerType\n        } = _ref6;\n        if (!appState.penDetected && pointerType === \"pen\") {\n          setAppState({\n            penDetected: true,\n            penMode: true\n          });\n        }\n      },\n      onChange: _ref7 => {\n        let {\n          pointerType\n        } = _ref7;\n        trackEvent(\"toolbar\", \"frame\", \"ui\");\n        const nextActiveTool = updateActiveTool(appState, {\n          type: \"frame\"\n        });\n        setAppState({\n          activeTool: nextActiveTool,\n          multiElement: null,\n          selectedElementIds: {}\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      open: isExtraToolsMenuOpen,\n      children: [/*#__PURE__*/_jsxDEV(DropdownMenu.Trigger, {\n        className: \"App-toolbar__extra-tools-trigger\",\n        onToggle: () => setIsExtraToolsMenuOpen(!isExtraToolsMenuOpen),\n        title: t(\"toolBar.extraTools\"),\n        children: extraToolsIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu.Content, {\n        onClickOutside: () => setIsExtraToolsMenuOpen(false),\n        onSelect: () => setIsExtraToolsMenuOpen(false),\n        className: \"App-toolbar__extra-tools-dropdown\",\n        children: /*#__PURE__*/_jsxDEV(DropdownMenu.Item, {\n          onSelect: () => {\n            const nextActiveTool = updateActiveTool(appState, {\n              type: \"frame\"\n            });\n            setAppState({\n              activeTool: nextActiveTool,\n              multiElement: null,\n              selectedElementIds: {}\n            });\n          },\n          icon: frameToolIcon,\n          shortcut: KEYS.F.toLocaleUpperCase(),\n          \"data-testid\": \"toolbar-frame\",\n          children: t(\"toolBar.frame\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\nexport const ZoomActions = _ref8 => {\n  let {\n    renderAction,\n    zoom\n  } = _ref8;\n  return /*#__PURE__*/_jsxDEV(Stack.Col, {\n    gap: 1,\n    className: \"zoom-actions\",\n    children: /*#__PURE__*/_jsxDEV(Stack.Row, {\n      align: \"center\",\n      children: [renderAction(\"zoomOut\"), renderAction(\"resetZoom\"), renderAction(\"zoomIn\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 3\n  }, this);\n};\nexport const UndoRedoActions = _ref9 => {\n  let {\n    renderAction,\n    className\n  } = _ref9;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `undo-redo-buttons ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"undo-button-container\",\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        label: t(\"buttons.undo\"),\n        children: renderAction(\"undo\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"redo-button-container\",\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        label: t(\"buttons.redo\"),\n        children: [\" \", renderAction(\"redo\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 3\n  }, this);\n};\nexport const ExitZenModeAction = _ref10 => {\n  let {\n    actionManager,\n    showExitZenModeBtn\n  } = _ref10;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: clsx(\"disable-zen-mode\", {\n      \"disable-zen-mode--visible\": showExitZenModeBtn\n    }),\n    onClick: () => actionManager.executeAction(actionToggleZenMode),\n    children: t(\"buttons.exitZenMode\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 397,\n    columnNumber: 3\n  }, this);\n};\nexport const FinalizeAction = _ref11 => {\n  let {\n    renderAction,\n    className\n  } = _ref11;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `finalize-button ${className}`,\n    children: renderAction(\"finalize\", {\n      size: \"small\"\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 414,\n    columnNumber: 3\n  }, this);\n};","map":{"version":3,"names":["React","useState","getNonDeletedElements","t","useDevice","canChangeRoundness","canHaveArrowheads","getTargetElements","hasBackground","hasStrokeStyle","hasStrokeWidth","hasText","SHAPES","capitalizeString","isTransparent","updateActiveTool","setCursorForShape","Stack","ToolButton","hasStrokeColor","trackEvent","hasBoundTextElement","clsx","actionToggleZenMode","Tooltip","shouldAllowVerticalAlign","suppportsHorizontalAlign","DropdownMenu","extraToolsIcon","frameToolIcon","KEYS","jsxDEV","_jsxDEV","Fragment","_Fragment","SelectedShapeActions","_ref","_targetElements$","appState","elements","renderAction","targetElements","isSingleElementBoundContainer","length","isEditing","Boolean","editingElement","device","isRTL","document","documentElement","getAttribute","showFillIcons","activeTool","type","some","element","backgroundColor","showChangeBackgroundIcons","showLinkIcon","commonSelectedType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","flexBasis","height","display","flexWrap","gap","marginTop","isMobile","ShapesSwitcher","_ref2","canvas","setAppState","onImageAction","isExtraToolsMenuOpen","setIsExtraToolsMenuOpen","map","_ref3","index","value","icon","key","numericKey","fillable","label","letter","shortcut","checked","name","title","keyBindingLabel","onPointerDown","_ref4","pointerType","penDetected","penMode","onChange","_ref5","nextActiveTool","multiElement","selectedElementIds","F","toLocaleUpperCase","_ref6","_ref7","open","Trigger","onToggle","Content","onClickOutside","onSelect","Item","ZoomActions","_ref8","zoom","Col","Row","align","UndoRedoActions","_ref9","ExitZenModeAction","_ref10","actionManager","showExitZenModeBtn","onClick","executeAction","FinalizeAction","_ref11","size"],"sources":["D:/project/excalidraw-cn/src/components/Actions.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ActionManager } from \"../actions/manager\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement, PointerType } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { useDevice } from \"../components/App\";\nimport {\n  canChangeRoundness,\n  canHaveArrowheads,\n  getTargetElements,\n  hasBackground,\n  hasStrokeStyle,\n  hasStrokeWidth,\n  hasText,\n} from \"../scene\";\nimport { SHAPES } from \"../shapes\";\nimport { UIAppState, Zoom } from \"../types\";\nimport {\n  capitalizeString,\n  isTransparent,\n  updateActiveTool,\n  setCursorForShape,\n} from \"../utils\";\nimport Stack from \"./Stack\";\nimport { ToolButton } from \"./ToolButton\";\nimport { hasStrokeColor } from \"../scene/comparisons\";\nimport { trackEvent } from \"../analytics\";\nimport { hasBoundTextElement } from \"../element/typeChecks\";\nimport clsx from \"clsx\";\nimport { actionToggleZenMode } from \"../actions\";\nimport { Tooltip } from \"./Tooltip\";\nimport {\n  shouldAllowVerticalAlign,\n  suppportsHorizontalAlign,\n} from \"../element/textElement\";\n\nimport \"./Actions.scss\";\nimport DropdownMenu from \"./dropdownMenu/DropdownMenu\";\nimport { extraToolsIcon, frameToolIcon } from \"./icons\";\nimport { KEYS } from \"../keys\";\n\nexport const SelectedShapeActions = ({\n  appState,\n  elements,\n  renderAction,\n}: {\n  appState: UIAppState;\n  elements: readonly ExcalidrawElement[];\n  renderAction: ActionManager[\"renderAction\"];\n}) => {\n  const targetElements = getTargetElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n\n  let isSingleElementBoundContainer = false;\n  if (\n    targetElements.length === 2 &&\n    (hasBoundTextElement(targetElements[0]) ||\n      hasBoundTextElement(targetElements[1]))\n  ) {\n    isSingleElementBoundContainer = true;\n  }\n  const isEditing = Boolean(appState.editingElement);\n  const device = useDevice();\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const showFillIcons =\n    hasBackground(appState.activeTool.type) ||\n    targetElements.some(\n      (element) =>\n        hasBackground(element.type) && !isTransparent(element.backgroundColor),\n    );\n  const showChangeBackgroundIcons =\n    hasBackground(appState.activeTool.type) ||\n    targetElements.some((element) => hasBackground(element.type));\n\n  const showLinkIcon =\n    targetElements.length === 1 || isSingleElementBoundContainer;\n\n  let commonSelectedType: string | null = targetElements[0]?.type || null;\n\n  for (const element of targetElements) {\n    if (element.type !== commonSelectedType) {\n      commonSelectedType = null;\n      break;\n    }\n  }\n\n  return (\n    <div className=\"panelColumn\">\n      <div>\n        {((hasStrokeColor(appState.activeTool.type) &&\n          appState.activeTool.type !== \"image\" &&\n          commonSelectedType !== \"image\" &&\n          commonSelectedType !== \"frame\") ||\n          targetElements.some((element) => hasStrokeColor(element.type))) &&\n          renderAction(\"changeStrokeColor\")}\n      </div>\n      {showChangeBackgroundIcons && (\n        <div>{renderAction(\"changeBackgroundColor\")}</div>\n      )}\n      {showFillIcons && renderAction(\"changeFillStyle\")}\n\n      {(hasStrokeWidth(appState.activeTool.type) ||\n        targetElements.some((element) => hasStrokeWidth(element.type))) &&\n        renderAction(\"changeStrokeWidth\")}\n\n      {(appState.activeTool.type === \"freedraw\" ||\n        targetElements.some((element) => element.type === \"freedraw\")) &&\n        renderAction(\"changeStrokeShape\")}\n\n      {(hasStrokeStyle(appState.activeTool.type) ||\n        targetElements.some((element) => hasStrokeStyle(element.type))) && (\n        <>\n          {renderAction(\"changeStrokeStyle\")}\n          {renderAction(\"changeSloppiness\")}\n        </>\n      )}\n\n      {(canChangeRoundness(appState.activeTool.type) ||\n        targetElements.some((element) => canChangeRoundness(element.type))) && (\n        <>{renderAction(\"changeRoundness\")}</>\n      )}\n\n      {(hasText(appState.activeTool.type) ||\n        targetElements.some((element) => hasText(element.type))) && (\n        <>\n          {renderAction(\"changeFontSize\")}\n\n          {renderAction(\"changeFontFamily\")}\n\n          {suppportsHorizontalAlign(targetElements) &&\n            renderAction(\"changeTextAlign\")}\n        </>\n      )}\n\n      {shouldAllowVerticalAlign(targetElements) &&\n        renderAction(\"changeVerticalAlign\")}\n      {(canHaveArrowheads(appState.activeTool.type) ||\n        targetElements.some((element) => canHaveArrowheads(element.type))) && (\n        <>{renderAction(\"changeArrowhead\")}</>\n      )}\n\n      {renderAction(\"changeOpacity\")}\n\n      <fieldset>\n        <legend>{t(\"labels.layers\")}</legend>\n        <div className=\"buttonList\">\n          {renderAction(\"sendToBack\")}\n          {renderAction(\"sendBackward\")}\n          {renderAction(\"bringToFront\")}\n          {renderAction(\"bringForward\")}\n        </div>\n      </fieldset>\n\n      {targetElements.length > 1 && !isSingleElementBoundContainer && (\n        <fieldset>\n          <legend>{t(\"labels.align\")}</legend>\n          <div className=\"buttonList\">\n            {\n              // swap this order for RTL so the button positions always match their action\n              // (i.e. the leftmost button aligns left)\n            }\n            {isRTL ? (\n              <>\n                {renderAction(\"alignRight\")}\n                {renderAction(\"alignHorizontallyCentered\")}\n                {renderAction(\"alignLeft\")}\n              </>\n            ) : (\n              <>\n                {renderAction(\"alignLeft\")}\n                {renderAction(\"alignHorizontallyCentered\")}\n                {renderAction(\"alignRight\")}\n              </>\n            )}\n            {targetElements.length > 2 &&\n              renderAction(\"distributeHorizontally\")}\n            {/* breaks the row Ë‡Ë‡ */}\n            <div style={{ flexBasis: \"100%\", height: 0 }} />\n            <div\n              style={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                gap: \".5rem\",\n                marginTop: \"-0.5rem\",\n              }}\n            >\n              {renderAction(\"alignTop\")}\n              {renderAction(\"alignVerticallyCentered\")}\n              {renderAction(\"alignBottom\")}\n              {targetElements.length > 2 &&\n                renderAction(\"distributeVertically\")}\n            </div>\n          </div>\n        </fieldset>\n      )}\n      {!isEditing && targetElements.length > 0 && (\n        <fieldset>\n          <legend>{t(\"labels.actions\")}</legend>\n          <div className=\"buttonList\">\n            {!device.isMobile && renderAction(\"duplicateSelection\")}\n            {!device.isMobile && renderAction(\"deleteSelectedElements\")}\n            {renderAction(\"group\")}\n            {renderAction(\"ungroup\")}\n            {showLinkIcon && renderAction(\"hyperlink\")}\n          </div>\n        </fieldset>\n      )}\n    </div>\n  );\n};\n\nexport const ShapesSwitcher = ({\n  canvas,\n  activeTool,\n  setAppState,\n  onImageAction,\n  appState,\n}: {\n  canvas: HTMLCanvasElement | null;\n  activeTool: UIAppState[\"activeTool\"];\n  setAppState: React.Component<any, UIAppState>[\"setState\"];\n  onImageAction: (data: { pointerType: PointerType | null }) => void;\n  appState: UIAppState;\n}) => {\n  const [isExtraToolsMenuOpen, setIsExtraToolsMenuOpen] = useState(false);\n  const device = useDevice();\n  return (\n    <>\n      {SHAPES.map(({ value, icon, key, numericKey, fillable }, index) => {\n        const label = t(`toolBar.${value}`);\n        const letter =\n          key && capitalizeString(typeof key === \"string\" ? key : key[0]);\n        const shortcut = letter\n          ? `${letter} ${t(\"helpDialog.or\")} ${numericKey}`\n          : `${numericKey}`;\n        return (\n          <ToolButton\n            className={clsx(\"Shape\", { fillable })}\n            key={value}\n            type=\"radio\"\n            icon={icon}\n            checked={activeTool.type === value}\n            name=\"editor-current-shape\"\n            title={`${capitalizeString(label)} â€” ${shortcut}`}\n            keyBindingLabel={numericKey || letter}\n            aria-label={capitalizeString(label)}\n            aria-keyshortcuts={shortcut}\n            data-testid={`toolbar-${value}`}\n            onPointerDown={({ pointerType }) => {\n              if (!appState.penDetected && pointerType === \"pen\") {\n                setAppState({\n                  penDetected: true,\n                  penMode: true,\n                });\n              }\n            }}\n            onChange={({ pointerType }) => {\n              if (appState.activeTool.type !== value) {\n                trackEvent(\"toolbar\", value, \"ui\");\n              }\n              const nextActiveTool = updateActiveTool(appState, {\n                type: value,\n              });\n              setAppState({\n                activeTool: nextActiveTool,\n                multiElement: null,\n                selectedElementIds: {},\n              });\n              setCursorForShape(canvas, {\n                ...appState,\n                activeTool: nextActiveTool,\n              });\n              if (value === \"image\") {\n                onImageAction({ pointerType });\n              }\n            }}\n          />\n        );\n      })}\n      <div className=\"App-toolbar__divider\" />\n      {/* TEMP HACK because dropdown doesn't work well inside mobile toolbar */}\n      {device.isMobile ? (\n        <ToolButton\n          className={clsx(\"Shape\", { fillable: false })}\n          type=\"radio\"\n          icon={frameToolIcon}\n          checked={activeTool.type === \"frame\"}\n          name=\"editor-current-shape\"\n          title={`${capitalizeString(\n            t(\"toolBar.frame\"),\n          )} â€” ${KEYS.F.toLocaleUpperCase()}`}\n          keyBindingLabel={KEYS.F.toLocaleUpperCase()}\n          aria-label={capitalizeString(t(\"toolBar.frame\"))}\n          aria-keyshortcuts={KEYS.F.toLocaleUpperCase()}\n          data-testid={`toolbar-frame`}\n          onPointerDown={({ pointerType }) => {\n            if (!appState.penDetected && pointerType === \"pen\") {\n              setAppState({\n                penDetected: true,\n                penMode: true,\n              });\n            }\n          }}\n          onChange={({ pointerType }) => {\n            trackEvent(\"toolbar\", \"frame\", \"ui\");\n            const nextActiveTool = updateActiveTool(appState, {\n              type: \"frame\",\n            });\n            setAppState({\n              activeTool: nextActiveTool,\n              multiElement: null,\n              selectedElementIds: {},\n            });\n          }}\n        />\n      ) : (\n        <DropdownMenu open={isExtraToolsMenuOpen}>\n          <DropdownMenu.Trigger\n            className=\"App-toolbar__extra-tools-trigger\"\n            onToggle={() => setIsExtraToolsMenuOpen(!isExtraToolsMenuOpen)}\n            title={t(\"toolBar.extraTools\")}\n          >\n            {extraToolsIcon}\n          </DropdownMenu.Trigger>\n          <DropdownMenu.Content\n            onClickOutside={() => setIsExtraToolsMenuOpen(false)}\n            onSelect={() => setIsExtraToolsMenuOpen(false)}\n            className=\"App-toolbar__extra-tools-dropdown\"\n          >\n            <DropdownMenu.Item\n              onSelect={() => {\n                const nextActiveTool = updateActiveTool(appState, {\n                  type: \"frame\",\n                });\n                setAppState({\n                  activeTool: nextActiveTool,\n                  multiElement: null,\n                  selectedElementIds: {},\n                });\n              }}\n              icon={frameToolIcon}\n              shortcut={KEYS.F.toLocaleUpperCase()}\n              data-testid=\"toolbar-frame\"\n            >\n              {t(\"toolBar.frame\")}\n            </DropdownMenu.Item>\n          </DropdownMenu.Content>\n        </DropdownMenu>\n      )}\n    </>\n  );\n};\n\nexport const ZoomActions = ({\n  renderAction,\n  zoom,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  zoom: Zoom;\n}) => (\n  <Stack.Col gap={1} className=\"zoom-actions\">\n    <Stack.Row align=\"center\">\n      {renderAction(\"zoomOut\")}\n      {renderAction(\"resetZoom\")}\n      {renderAction(\"zoomIn\")}\n    </Stack.Row>\n  </Stack.Col>\n);\n\nexport const UndoRedoActions = ({\n  renderAction,\n  className,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  className?: string;\n}) => (\n  <div className={`undo-redo-buttons ${className}`}>\n    <div className=\"undo-button-container\">\n      <Tooltip label={t(\"buttons.undo\")}>{renderAction(\"undo\")}</Tooltip>\n    </div>\n    <div className=\"redo-button-container\">\n      <Tooltip label={t(\"buttons.redo\")}> {renderAction(\"redo\")}</Tooltip>\n    </div>\n  </div>\n);\n\nexport const ExitZenModeAction = ({\n  actionManager,\n  showExitZenModeBtn,\n}: {\n  actionManager: ActionManager;\n  showExitZenModeBtn: boolean;\n}) => (\n  <button\n    className={clsx(\"disable-zen-mode\", {\n      \"disable-zen-mode--visible\": showExitZenModeBtn,\n    })}\n    onClick={() => actionManager.executeAction(actionToggleZenMode)}\n  >\n    {t(\"buttons.exitZenMode\")}\n  </button>\n);\n\nexport const FinalizeAction = ({\n  renderAction,\n  className,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  className?: string;\n}) => (\n  <div className={`finalize-button ${className}`}>\n    {renderAction(\"finalize\", { size: \"small\" })}\n  </div>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}