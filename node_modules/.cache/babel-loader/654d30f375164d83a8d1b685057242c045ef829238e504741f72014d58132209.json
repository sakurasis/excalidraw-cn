{"ast":null,"code":"import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{newElementWith}from\"../element/mutateElement\";import{KEYS}from\"../keys\";import{arrayToMap}from\"../utils\";import{register}from\"./register\";var shouldLock=function shouldLock(elements){return elements.every(function(el){return!el.locked;});};export var actionToggleElementLock=register({name:\"toggleElementLock\",trackEvent:{category:\"element\"},predicate:function predicate(elements,appState,_,app){var selectedElements=app.scene.getSelectedElements(appState);return!selectedElements.some(function(element){return element.locked&&element.frameId;});},perform:function perform(elements,appState,_,app){var selectedElements=app.scene.getSelectedElements({selectedElementIds:appState.selectedElementIds,includeBoundTextElement:true,includeElementsInFrames:true});if(!selectedElements.length){return false;}var nextLockState=shouldLock(selectedElements);var selectedElementsMap=arrayToMap(selectedElements);return{elements:elements.map(function(element){if(!selectedElementsMap.has(element.id)){return element;}return newElementWith(element,{locked:nextLockState});}),appState:_objectSpread(_objectSpread({},appState),{},{selectedLinearElement:nextLockState?null:appState.selectedLinearElement}),commitToHistory:true};},contextItemLabel:function contextItemLabel(elements,appState,app){var selected=app.scene.getSelectedElements({selectedElementIds:appState.selectedElementIds,includeBoundTextElement:false});if(selected.length===1&&selected[0].type!==\"frame\"){return selected[0].locked?\"labels.elementLock.unlock\":\"labels.elementLock.lock\";}return shouldLock(selected)?\"labels.elementLock.lockAll\":\"labels.elementLock.unlockAll\";},keyTest:function keyTest(event,appState,elements,app){return event.key.toLocaleLowerCase()===KEYS.L&&event[KEYS.CTRL_OR_CMD]&&event.shiftKey&&app.scene.getSelectedElements({selectedElementIds:appState.selectedElementIds,includeBoundTextElement:false}).length>0;}});export var actionUnlockAllElements=register({name:\"unlockAllElements\",trackEvent:{category:\"canvas\"},viewMode:false,predicate:function predicate(elements){return elements.some(function(element){return element.locked;});},perform:function perform(elements,appState){var lockedElements=elements.filter(function(el){return el.locked;});return{elements:elements.map(function(element){if(element.locked){return newElementWith(element,{locked:false});}return element;}),appState:_objectSpread(_objectSpread({},appState),{},{selectedElementIds:Object.fromEntries(lockedElements.map(function(el){return[el.id,true];}))}),commitToHistory:true};},contextItemLabel:\"labels.elementLock.unlockAll\"});","map":{"version":3,"names":["newElementWith","KEYS","arrayToMap","register","shouldLock","elements","every","el","locked","actionToggleElementLock","name","trackEvent","category","predicate","appState","_","app","selectedElements","scene","getSelectedElements","some","element","frameId","perform","selectedElementIds","includeBoundTextElement","includeElementsInFrames","length","nextLockState","selectedElementsMap","map","has","id","_objectSpread","selectedLinearElement","commitToHistory","contextItemLabel","selected","type","keyTest","event","key","toLocaleLowerCase","L","CTRL_OR_CMD","shiftKey","actionUnlockAllElements","viewMode","lockedElements","filter","Object","fromEntries"],"sources":["D:/project/excalidraw-cn/src/actions/actionElementLock.ts"],"sourcesContent":["import { newElementWith } from \"../element/mutateElement\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { KEYS } from \"../keys\";\nimport { arrayToMap } from \"../utils\";\nimport { register } from \"./register\";\n\nconst shouldLock = (elements: readonly ExcalidrawElement[]) =>\n  elements.every((el) => !el.locked);\n\nexport const actionToggleElementLock = register({\n  name: \"toggleElementLock\",\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n    return !selectedElements.some(\n      (element) => element.locked && element.frameId,\n    );\n  },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n      includeElementsInFrames: true,\n    });\n\n    if (!selectedElements.length) {\n      return false;\n    }\n\n    const nextLockState = shouldLock(selectedElements);\n    const selectedElementsMap = arrayToMap(selectedElements);\n    return {\n      elements: elements.map((element) => {\n        if (!selectedElementsMap.has(element.id)) {\n          return element;\n        }\n\n        return newElementWith(element, { locked: nextLockState });\n      }),\n      appState: {\n        ...appState,\n        selectedLinearElement: nextLockState\n          ? null\n          : appState.selectedLinearElement,\n      },\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: (elements, appState, app) => {\n    const selected = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: false,\n    });\n    if (selected.length === 1 && selected[0].type !== \"frame\") {\n      return selected[0].locked\n        ? \"labels.elementLock.unlock\"\n        : \"labels.elementLock.lock\";\n    }\n\n    return shouldLock(selected)\n      ? \"labels.elementLock.lockAll\"\n      : \"labels.elementLock.unlockAll\";\n  },\n  keyTest: (event, appState, elements, app) => {\n    return (\n      event.key.toLocaleLowerCase() === KEYS.L &&\n      event[KEYS.CTRL_OR_CMD] &&\n      event.shiftKey &&\n      app.scene.getSelectedElements({\n        selectedElementIds: appState.selectedElementIds,\n        includeBoundTextElement: false,\n      }).length > 0\n    );\n  },\n});\n\nexport const actionUnlockAllElements = register({\n  name: \"unlockAllElements\",\n  trackEvent: { category: \"canvas\" },\n  viewMode: false,\n  predicate: (elements) => {\n    return elements.some((element) => element.locked);\n  },\n  perform: (elements, appState) => {\n    const lockedElements = elements.filter((el) => el.locked);\n\n    return {\n      elements: elements.map((element) => {\n        if (element.locked) {\n          return newElementWith(element, { locked: false });\n        }\n        return element;\n      }),\n      appState: {\n        ...appState,\n        selectedElementIds: Object.fromEntries(\n          lockedElements.map((el) => [el.id, true]),\n        ),\n      },\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.elementLock.unlockAll\",\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}