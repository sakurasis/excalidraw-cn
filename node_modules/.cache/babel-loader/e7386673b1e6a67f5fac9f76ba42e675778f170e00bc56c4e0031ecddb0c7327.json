{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\actions\\\\actionMenu.tsx\";\nimport { HamburgerMenuIcon, palette } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { showSelectedShapeActions, getNonDeletedElements } from \"../element\";\nimport { register } from \"./register\";\nimport { allowFullScreen, exitFullScreen, isFullScreen } from \"../utils\";\nimport { KEYS } from \"../keys\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const actionToggleCanvasMenu = register({\n  name: \"toggleCanvasMenu\",\n  trackEvent: {\n    category: \"menu\"\n  },\n  perform: (_, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\"\n    },\n    commitToHistory: false\n  }),\n  PanelComponent: _ref => {\n    let {\n      appState,\n      updateData\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(ToolButton, {\n      type: \"button\",\n      icon: HamburgerMenuIcon,\n      \"aria-label\": t(\"buttons.menu\"),\n      onClick: updateData,\n      selected: appState.openMenu === \"canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this);\n  }\n});\nexport const actionToggleEditMenu = register({\n  name: \"toggleEditMenu\",\n  trackEvent: {\n    category: \"menu\"\n  },\n  perform: (_elements, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"shape\" ? null : \"shape\"\n    },\n    commitToHistory: false\n  }),\n  PanelComponent: _ref2 => {\n    let {\n      elements,\n      appState,\n      updateData\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(ToolButton, {\n      visible: showSelectedShapeActions(appState, getNonDeletedElements(elements)),\n      type: \"button\",\n      icon: palette,\n      \"aria-label\": t(\"buttons.edit\"),\n      onClick: updateData,\n      selected: appState.openMenu === \"shape\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this);\n  }\n});\nexport const actionFullScreen = register({\n  name: \"toggleFullScreen\",\n  viewMode: true,\n  trackEvent: {\n    category: \"canvas\",\n    predicate: appState => !isFullScreen()\n  },\n  perform: () => {\n    if (!isFullScreen()) {\n      allowFullScreen();\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    }\n    return {\n      commitToHistory: false\n    };\n  }\n});\nexport const actionShortcuts = register({\n  name: \"toggleShortcuts\",\n  viewMode: true,\n  trackEvent: {\n    category: \"menu\",\n    action: \"toggleHelpDialog\"\n  },\n  perform: (_elements, appState, _, _ref3) => {\n    let {\n      focusContainer\n    } = _ref3;\n    if (appState.openDialog === \"help\") {\n      focusContainer();\n    }\n    return {\n      appState: {\n        ...appState,\n        openDialog: appState.openDialog === \"help\" ? null : \"help\"\n      },\n      commitToHistory: false\n    };\n  },\n  keyTest: event => event.key === KEYS.QUESTION_MARK\n});","map":{"version":3,"names":["HamburgerMenuIcon","palette","ToolButton","t","showSelectedShapeActions","getNonDeletedElements","register","allowFullScreen","exitFullScreen","isFullScreen","KEYS","jsxDEV","_jsxDEV","actionToggleCanvasMenu","name","trackEvent","category","perform","_","appState","openMenu","commitToHistory","PanelComponent","_ref","updateData","type","icon","onClick","selected","fileName","_jsxFileName","lineNumber","columnNumber","actionToggleEditMenu","_elements","_ref2","elements","visible","actionFullScreen","viewMode","predicate","actionShortcuts","action","_ref3","focusContainer","openDialog","keyTest","event","key","QUESTION_MARK"],"sources":["D:/project/excalidraw-cn/src/actions/actionMenu.tsx"],"sourcesContent":["import { HamburgerMenuIcon, palette } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { showSelectedShapeActions, getNonDeletedElements } from \"../element\";\nimport { register } from \"./register\";\nimport { allowFullScreen, exitFullScreen, isFullScreen } from \"../utils\";\nimport { KEYS } from \"../keys\";\n\nexport const actionToggleCanvasMenu = register({\n  name: \"toggleCanvasMenu\",\n  trackEvent: { category: \"menu\" },\n  perform: (_, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={HamburgerMenuIcon}\n      aria-label={t(\"buttons.menu\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"canvas\"}\n    />\n  ),\n});\n\nexport const actionToggleEditMenu = register({\n  name: \"toggleEditMenu\",\n  trackEvent: { category: \"menu\" },\n  perform: (_elements, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"shape\" ? null : \"shape\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      visible={showSelectedShapeActions(\n        appState,\n        getNonDeletedElements(elements),\n      )}\n      type=\"button\"\n      icon={palette}\n      aria-label={t(\"buttons.edit\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"shape\"}\n    />\n  ),\n});\n\nexport const actionFullScreen = register({\n  name: \"toggleFullScreen\",\n  viewMode: true,\n  trackEvent: { category: \"canvas\", predicate: (appState) => !isFullScreen() },\n  perform: () => {\n    if (!isFullScreen()) {\n      allowFullScreen();\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n});\n\nexport const actionShortcuts = register({\n  name: \"toggleShortcuts\",\n  viewMode: true,\n  trackEvent: { category: \"menu\", action: \"toggleHelpDialog\" },\n  perform: (_elements, appState, _, { focusContainer }) => {\n    if (appState.openDialog === \"help\") {\n      focusContainer();\n    }\n    return {\n      appState: {\n        ...appState,\n        openDialog: appState.openDialog === \"help\" ? null : \"help\",\n      },\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) => event.key === KEYS.QUESTION_MARK,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}