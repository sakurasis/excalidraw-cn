{"ast":null,"code":"/** Add node transaction to the event */\nvar Transaction = /** @class */function () {\n  function Transaction() {\n    /**\n     * @inheritDoc\n     */\n    this.name = Transaction.id;\n  }\n  /**\n   * @inheritDoc\n   */\n  Transaction.prototype.setupOnce = function (addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor(function (event) {\n      var self = getCurrentHub().getIntegration(Transaction);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  Transaction.prototype.process = function (event) {\n    var frames = this._getFramesFromEvent(event);\n    // use for loop so we don't have to reverse whole frames array\n    for (var i = frames.length - 1; i >= 0; i--) {\n      var frame = frames[i];\n      if (frame.in_app === true) {\n        event.transaction = this._getTransaction(frame);\n        break;\n      }\n    }\n    return event;\n  };\n  /** JSDoc */\n  Transaction.prototype._getFramesFromEvent = function (event) {\n    var exception = event.exception && event.exception.values && event.exception.values[0];\n    return exception && exception.stacktrace && exception.stacktrace.frames || [];\n  };\n  /** JSDoc */\n  Transaction.prototype._getTransaction = function (frame) {\n    return frame.module || frame.function ? (frame.module || '?') + \"/\" + (frame.function || '?') : '<unknown>';\n  };\n  /**\n   * @inheritDoc\n   */\n  Transaction.id = 'Transaction';\n  return Transaction;\n}();\nexport { Transaction };","map":{"version":3,"names":["Transaction","name","id","prototype","setupOnce","addGlobalEventProcessor","getCurrentHub","event","self","getIntegration","process","frames","_getFramesFromEvent","i","length","frame","in_app","transaction","_getTransaction","exception","values","stacktrace","module","function"],"sources":["D:\\project\\excalidraw-cn\\node_modules\\@sentry\\integrations\\src\\transaction.ts"],"sourcesContent":["import { Event, EventProcessor, Hub, Integration, StackFrame } from '@sentry/types';\n\n/** Add node transaction to the event */\nexport class Transaction implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Transaction';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Transaction.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(Transaction);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public process(event: Event): Event {\n    const frames = this._getFramesFromEvent(event);\n\n    // use for loop so we don't have to reverse whole frames array\n    for (let i = frames.length - 1; i >= 0; i--) {\n      const frame = frames[i];\n\n      if (frame.in_app === true) {\n        event.transaction = this._getTransaction(frame);\n        break;\n      }\n    }\n\n    return event;\n  }\n\n  /** JSDoc */\n  private _getFramesFromEvent(event: Event): StackFrame[] {\n    const exception = event.exception && event.exception.values && event.exception.values[0];\n    return (exception && exception.stacktrace && exception.stacktrace.frames) || [];\n  }\n\n  /** JSDoc */\n  private _getTransaction(frame: StackFrame): string {\n    return frame.module || frame.function ? `${frame.module || '?'}/${frame.function || '?'}` : '<unknown>';\n  }\n}\n"],"mappings":"AAEA;AACA,IAAAA,WAAA;EAAA,SAAAA,YAAA;IAME;;;IAGO,KAAAC,IAAI,GAAWD,WAAW,CAACE,EAAE;EA4CtC;EA1CE;;;EAGOF,WAAA,CAAAG,SAAA,CAAAC,SAAS,GAAhB,UAAiBC,uBAA2D,EAAEC,aAAwB;IACpGD,uBAAuB,CAAC,UAAAE,KAAK;MAC3B,IAAMC,IAAI,GAAGF,aAAa,EAAE,CAACG,cAAc,CAACT,WAAW,CAAC;MACxD,IAAIQ,IAAI,EAAE;QACR,OAAOA,IAAI,CAACE,OAAO,CAACH,KAAK,CAAC;;MAE5B,OAAOA,KAAK;IACd,CAAC,CAAC;EACJ,CAAC;EAED;;;EAGOP,WAAA,CAAAG,SAAA,CAAAO,OAAO,GAAd,UAAeH,KAAY;IACzB,IAAMI,MAAM,GAAG,IAAI,CAACC,mBAAmB,CAACL,KAAK,CAAC;IAE9C;IACA,KAAK,IAAIM,CAAC,GAAGF,MAAM,CAACG,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3C,IAAME,KAAK,GAAGJ,MAAM,CAACE,CAAC,CAAC;MAEvB,IAAIE,KAAK,CAACC,MAAM,KAAK,IAAI,EAAE;QACzBT,KAAK,CAACU,WAAW,GAAG,IAAI,CAACC,eAAe,CAACH,KAAK,CAAC;QAC/C;;;IAIJ,OAAOR,KAAK;EACd,CAAC;EAED;EACQP,WAAA,CAAAG,SAAA,CAAAS,mBAAmB,GAA3B,UAA4BL,KAAY;IACtC,IAAMY,SAAS,GAAGZ,KAAK,CAACY,SAAS,IAAIZ,KAAK,CAACY,SAAS,CAACC,MAAM,IAAIb,KAAK,CAACY,SAAS,CAACC,MAAM,CAAC,CAAC,CAAC;IACxF,OAAQD,SAAS,IAAIA,SAAS,CAACE,UAAU,IAAIF,SAAS,CAACE,UAAU,CAACV,MAAM,IAAK,EAAE;EACjF,CAAC;EAED;EACQX,WAAA,CAAAG,SAAA,CAAAe,eAAe,GAAvB,UAAwBH,KAAiB;IACvC,OAAOA,KAAK,CAACO,MAAM,IAAIP,KAAK,CAACQ,QAAQ,GAAG,CAAGR,KAAK,CAACO,MAAM,IAAI,GAAG,WAAIP,KAAK,CAACQ,QAAQ,IAAI,GAAG,CAAE,GAAG,WAAW;EACzG,CAAC;EAnDD;;;EAGcvB,WAAA,CAAAE,EAAE,GAAW,aAAa;EAiD1C,OAAAF,WAAC;CAAA,EArDD;SAAaA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}