{"ast":null,"code":"import _regeneratorRuntime from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";/// <reference lib=\"webworker\" />\n/* eslint-disable no-restricted-globals */ // This service worker can be customized!\n// See https://developers.google.com/web/tools/workbox/modules\n// for the list of available Workbox modules, or add any other\n// code you'd like.\n// You can also remove this file if you'd prefer not to use a\n// service worker, and the Workbox build step will be skipped.\nimport{clientsClaim}from\"workbox-core\";import{ExpirationPlugin}from\"workbox-expiration\";import{precacheAndRoute,createHandlerBoundToURL}from\"workbox-precaching\";import{registerRoute}from\"workbox-routing\";import{CacheFirst,StaleWhileRevalidate}from\"workbox-strategies\";clientsClaim();// Precache assets generated by your build process.\n//\n// Their URLs are injected into the __WB_MANIFEST during build (by workbox).\n//\n// This variable must be present somewhere in your service worker file,\n// even if you decide not to use precaching. See https://cra.link/PWA.\n//\n// We don't want to precache i18n files so we filter them out\n// (normally this should be configured in a webpack workbox plugin, but we don't\n// have access to it in CRA) — this is because all users will use at most\n// one or two languages, so there's no point fetching all of them. (They'll\n// be cached as you load them.)\nvar manifest=self.__WB_MANIFEST.filter(function(entry){return!/locales\\/[\\w-]+json/.test(typeof entry===\"string\"?entry:entry.url);});precacheAndRoute(manifest);// Set up App Shell-style routing, so that all navigation requests\n// are fulfilled with your index.html shell. Learn more at\n// https://developer.chrome.com/docs/workbox/app-shell-model/\n//\n// below is copied verbatim from CRA@5\nvar fileExtensionRegexp=new RegExp(\"/[^/?]+\\\\.[^/]+$\");registerRoute(// Return false to exempt requests from being fulfilled by index.html.\nfunction(_ref){var request=_ref.request,url=_ref.url;// If this isn't a navigation, skip.\nif(request.mode!==\"navigate\"){return false;}// If this is a URL that starts with /_, skip.\nif(url.pathname.startsWith(\"/_\")){return false;}// If this looks like a URL for a resource, because it contains\n// a file extension, skip.\nif(url.pathname.match(fileExtensionRegexp)){return false;}// Return true to signal that we want to use the handler.\nreturn true;},createHandlerBoundToURL(\"\".concat(process.env.PUBLIC_URL,\"/index.html\")));// Cache resources that aren't being precached\n// -----------------------------------------------------------------------------\nregisterRoute(new RegExp(\"/fonts.css\"),new StaleWhileRevalidate({cacheName:\"fonts\",plugins:[// Ensure that once this runtime cache reaches a maximum size the\n// least-recently used images are removed.\nnew ExpirationPlugin({maxEntries:50})]}));// since we serve fonts from, don't forget to append new ?v= param when\n// updating fonts (glyphs) without changing the filename\nregisterRoute(new RegExp(\"/.+.(ttf|woff2|otf)\"),new CacheFirst({cacheName:\"fonts\",plugins:[// Ensure that once this runtime cache reaches a maximum size the\n// least-recently used images are removed.\nnew ExpirationPlugin({maxEntries:50,// 90 days\nmaxAgeSeconds:7776000000})]}));registerRoute(new RegExp(\"/locales\\\\/[\\\\w-]+json\"),// Customize this strategy as needed, e.g., by changing to CacheFirst.\nnew CacheFirst({cacheName:\"locales\",plugins:[// Ensure that once this runtime cache reaches a maximum size the\n// least-recently used images are removed.\nnew ExpirationPlugin({maxEntries:50,// 30 days\nmaxAgeSeconds:2592000000})]}));// -----------------------------------------------------------------------------\nself.addEventListener(\"fetch\",function(event){if(event.request.method===\"POST\"&&event.request.url.endsWith(\"/web-share-target\")){return event.respondWith(_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var formData,file,webShareTargetCache;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return event.request.formData();case 2:formData=_context.sent;file=formData.get(\"file\");_context.next=6;return caches.open(\"web-share-target\");case 6:webShareTargetCache=_context.sent;_context.next=9;return webShareTargetCache.put(\"shared-file\",new Response(file));case 9:return _context.abrupt(\"return\",Response.redirect(\"/?web-share-target\",303));case 10:case\"end\":return _context.stop();}},_callee);}))());}});// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener(\"message\",function(event){if(event.data&&event.data.type===\"SKIP_WAITING\"){self.skipWaiting();}});","map":{"version":3,"names":["clientsClaim","ExpirationPlugin","precacheAndRoute","createHandlerBoundToURL","registerRoute","CacheFirst","StaleWhileRevalidate","manifest","self","__WB_MANIFEST","filter","entry","test","url","fileExtensionRegexp","RegExp","_ref","request","mode","pathname","startsWith","match","concat","process","env","PUBLIC_URL","cacheName","plugins","maxEntries","maxAgeSeconds","addEventListener","event","method","endsWith","respondWith","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","file","webShareTargetCache","wrap","_callee$","_context","prev","next","sent","get","caches","open","put","Response","abrupt","redirect","stop","data","type","skipWaiting"],"sources":["D:/project/excalidraw-cn/src/service-worker.ts"],"sourcesContent":["/// <reference lib=\"webworker\" />\n/* eslint-disable no-restricted-globals */\n\n// This service worker can be customized!\n// See https://developers.google.com/web/tools/workbox/modules\n// for the list of available Workbox modules, or add any other\n// code you'd like.\n// You can also remove this file if you'd prefer not to use a\n// service worker, and the Workbox build step will be skipped.\n\nimport { clientsClaim } from \"workbox-core\";\nimport { ExpirationPlugin } from \"workbox-expiration\";\nimport { precacheAndRoute, createHandlerBoundToURL } from \"workbox-precaching\";\nimport { registerRoute } from \"workbox-routing\";\nimport { CacheFirst, StaleWhileRevalidate } from \"workbox-strategies\";\n\ndeclare const self: ServiceWorkerGlobalScope;\n\nclientsClaim();\n\n// Precache assets generated by your build process.\n//\n// Their URLs are injected into the __WB_MANIFEST during build (by workbox).\n//\n// This variable must be present somewhere in your service worker file,\n// even if you decide not to use precaching. See https://cra.link/PWA.\n//\n// We don't want to precache i18n files so we filter them out\n// (normally this should be configured in a webpack workbox plugin, but we don't\n// have access to it in CRA) — this is because all users will use at most\n// one or two languages, so there's no point fetching all of them. (They'll\n// be cached as you load them.)\nconst manifest = self.__WB_MANIFEST.filter((entry) => {\n  return !/locales\\/[\\w-]+json/.test(\n    typeof entry === \"string\" ? entry : entry.url,\n  );\n});\n\nprecacheAndRoute(manifest);\n\n// Set up App Shell-style routing, so that all navigation requests\n// are fulfilled with your index.html shell. Learn more at\n// https://developer.chrome.com/docs/workbox/app-shell-model/\n//\n// below is copied verbatim from CRA@5\nconst fileExtensionRegexp = new RegExp(\"/[^/?]+\\\\.[^/]+$\");\nregisterRoute(\n  // Return false to exempt requests from being fulfilled by index.html.\n  ({ request, url }: { request: Request; url: URL }) => {\n    // If this isn't a navigation, skip.\n    if (request.mode !== \"navigate\") {\n      return false;\n    }\n\n    // If this is a URL that starts with /_, skip.\n    if (url.pathname.startsWith(\"/_\")) {\n      return false;\n    }\n\n    // If this looks like a URL for a resource, because it contains\n    // a file extension, skip.\n    if (url.pathname.match(fileExtensionRegexp)) {\n      return false;\n    }\n\n    // Return true to signal that we want to use the handler.\n    return true;\n  },\n  createHandlerBoundToURL(`${process.env.PUBLIC_URL}/index.html`),\n);\n\n// Cache resources that aren't being precached\n// -----------------------------------------------------------------------------\n\nregisterRoute(\n  new RegExp(\"/fonts.css\"),\n  new StaleWhileRevalidate({\n    cacheName: \"fonts\",\n    plugins: [\n      // Ensure that once this runtime cache reaches a maximum size the\n      // least-recently used images are removed.\n      new ExpirationPlugin({ maxEntries: 50 }),\n    ],\n  }),\n);\n\n// since we serve fonts from, don't forget to append new ?v= param when\n// updating fonts (glyphs) without changing the filename\nregisterRoute(\n  new RegExp(\"/.+.(ttf|woff2|otf)\"),\n  new CacheFirst({\n    cacheName: \"fonts\",\n    plugins: [\n      // Ensure that once this runtime cache reaches a maximum size the\n      // least-recently used images are removed.\n      new ExpirationPlugin({\n        maxEntries: 50,\n        // 90 days\n        maxAgeSeconds: 7776000000,\n      }),\n    ],\n  }),\n);\n\nregisterRoute(\n  new RegExp(\"/locales\\\\/[\\\\w-]+json\"),\n  // Customize this strategy as needed, e.g., by changing to CacheFirst.\n  new CacheFirst({\n    cacheName: \"locales\",\n    plugins: [\n      // Ensure that once this runtime cache reaches a maximum size the\n      // least-recently used images are removed.\n      new ExpirationPlugin({\n        maxEntries: 50,\n        // 30 days\n        maxAgeSeconds: 2592000000,\n      }),\n    ],\n  }),\n);\n\n// -----------------------------------------------------------------------------\n\nself.addEventListener(\"fetch\", (event) => {\n  if (\n    event.request.method === \"POST\" &&\n    event.request.url.endsWith(\"/web-share-target\")\n  ) {\n    return event.respondWith(\n      (async () => {\n        const formData = await event.request.formData();\n        const file = formData.get(\"file\");\n        const webShareTargetCache = await caches.open(\"web-share-target\");\n        await webShareTargetCache.put(\"shared-file\", new Response(file));\n        return Response.redirect(\"/?web-share-target\", 303);\n      })(),\n    );\n  }\n});\n\n// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener(\"message\", (event) => {\n  if (event.data && event.data.type === \"SKIP_WAITING\") {\n    self.skipWaiting();\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}