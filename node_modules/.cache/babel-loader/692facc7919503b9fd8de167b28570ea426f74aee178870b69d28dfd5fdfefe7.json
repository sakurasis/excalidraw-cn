{"ast":null,"code":"import { atom, useAtom } from \"jotai\";\nimport { useEffect, useState } from \"react\";\nimport { COLOR_PALETTE } from \"../colors\";\nimport { jotaiScope } from \"../jotai\";\nimport { exportToSvg } from \"../packages/utils\";\nexport const libraryItemSvgsCache = atom(new Map());\nconst exportLibraryItemToSvg = async elements => {\n  return await exportToSvg({\n    elements,\n    appState: {\n      exportBackground: false,\n      viewBackgroundColor: COLOR_PALETTE.white\n    },\n    files: null\n  });\n};\nexport const useLibraryItemSvg = (id, elements, svgCache) => {\n  const [svg, setSvg] = useState();\n  useEffect(() => {\n    if (elements) {\n      if (id) {\n        // Try to load cached svg\n        const cachedSvg = svgCache.get(id);\n        if (cachedSvg) {\n          setSvg(cachedSvg);\n        } else {\n          // When there is no svg in cache export it and save to cache\n          (async () => {\n            var _exportedSvg$querySel;\n            const exportedSvg = await exportLibraryItemToSvg(elements);\n            (_exportedSvg$querySel = exportedSvg.querySelector(\".style-fonts\")) === null || _exportedSvg$querySel === void 0 ? void 0 : _exportedSvg$querySel.remove();\n            if (exportedSvg) {\n              svgCache.set(id, exportedSvg);\n              setSvg(exportedSvg);\n            }\n          })();\n        }\n      } else {\n        // When we have no id (usualy selected items from canvas) just export the svg\n        (async () => {\n          const exportedSvg = await exportLibraryItemToSvg(elements);\n          setSvg(exportedSvg);\n        })();\n      }\n    }\n  }, [id, elements, svgCache, setSvg]);\n  return svg;\n};\nexport const useLibraryCache = () => {\n  const [svgCache] = useAtom(libraryItemSvgsCache, jotaiScope);\n  const clearLibraryCache = () => svgCache.clear();\n  const deleteItemsFromLibraryCache = items => {\n    items.forEach(item => svgCache.delete(item));\n  };\n  return {\n    clearLibraryCache,\n    deleteItemsFromLibraryCache,\n    svgCache\n  };\n};","map":{"version":3,"names":["atom","useAtom","useEffect","useState","COLOR_PALETTE","jotaiScope","exportToSvg","libraryItemSvgsCache","Map","exportLibraryItemToSvg","elements","appState","exportBackground","viewBackgroundColor","white","files","useLibraryItemSvg","id","svgCache","svg","setSvg","cachedSvg","get","_exportedSvg$querySel","exportedSvg","querySelector","remove","set","useLibraryCache","clearLibraryCache","clear","deleteItemsFromLibraryCache","items","forEach","item","delete"],"sources":["D:/project/excalidraw-cn/src/hooks/useLibraryItemSvg.ts"],"sourcesContent":["import { atom, useAtom } from \"jotai\";\nimport { useEffect, useState } from \"react\";\nimport { COLOR_PALETTE } from \"../colors\";\nimport { jotaiScope } from \"../jotai\";\nimport { exportToSvg } from \"../packages/utils\";\nimport { LibraryItem } from \"../types\";\n\nexport type SvgCache = Map<LibraryItem[\"id\"], SVGSVGElement>;\n\nexport const libraryItemSvgsCache = atom<SvgCache>(new Map());\n\nconst exportLibraryItemToSvg = async (elements: LibraryItem[\"elements\"]) => {\n  return await exportToSvg({\n    elements,\n    appState: {\n      exportBackground: false,\n      viewBackgroundColor: COLOR_PALETTE.white,\n    },\n    files: null,\n  });\n};\n\nexport const useLibraryItemSvg = (\n  id: LibraryItem[\"id\"] | null,\n  elements: LibraryItem[\"elements\"] | undefined,\n  svgCache: SvgCache,\n): SVGSVGElement | undefined => {\n  const [svg, setSvg] = useState<SVGSVGElement>();\n\n  useEffect(() => {\n    if (elements) {\n      if (id) {\n        // Try to load cached svg\n        const cachedSvg = svgCache.get(id);\n\n        if (cachedSvg) {\n          setSvg(cachedSvg);\n        } else {\n          // When there is no svg in cache export it and save to cache\n          (async () => {\n            const exportedSvg = await exportLibraryItemToSvg(elements);\n            exportedSvg.querySelector(\".style-fonts\")?.remove();\n\n            if (exportedSvg) {\n              svgCache.set(id, exportedSvg);\n              setSvg(exportedSvg);\n            }\n          })();\n        }\n      } else {\n        // When we have no id (usualy selected items from canvas) just export the svg\n        (async () => {\n          const exportedSvg = await exportLibraryItemToSvg(elements);\n          setSvg(exportedSvg);\n        })();\n      }\n    }\n  }, [id, elements, svgCache, setSvg]);\n\n  return svg;\n};\n\nexport const useLibraryCache = () => {\n  const [svgCache] = useAtom(libraryItemSvgsCache, jotaiScope);\n\n  const clearLibraryCache = () => svgCache.clear();\n\n  const deleteItemsFromLibraryCache = (items: LibraryItem[\"id\"][]) => {\n    items.forEach((item) => svgCache.delete(item));\n  };\n\n  return {\n    clearLibraryCache,\n    deleteItemsFromLibraryCache,\n    svgCache,\n  };\n};\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,OAAO,QAAQ,OAAO;AACrC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,WAAW;AACzC,SAASC,UAAU,QAAQ,UAAU;AACrC,SAASC,WAAW,QAAQ,mBAAmB;AAK/C,OAAO,MAAMC,oBAAoB,GAAGP,IAAI,CAAW,IAAIQ,GAAG,EAAE,CAAC;AAE7D,MAAMC,sBAAsB,GAAG,MAAOC,QAAiC,IAAK;EAC1E,OAAO,MAAMJ,WAAW,CAAC;IACvBI,QAAQ;IACRC,QAAQ,EAAE;MACRC,gBAAgB,EAAE,KAAK;MACvBC,mBAAmB,EAAET,aAAa,CAACU;IACrC,CAAC;IACDC,KAAK,EAAE;EACT,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGA,CAC/BC,EAA4B,EAC5BP,QAA6C,EAC7CQ,QAAkB,KACY;EAC9B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGjB,QAAQ,EAAiB;EAE/CD,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,EAAE;MACZ,IAAIO,EAAE,EAAE;QACN;QACA,MAAMI,SAAS,GAAGH,QAAQ,CAACI,GAAG,CAACL,EAAE,CAAC;QAElC,IAAII,SAAS,EAAE;UACbD,MAAM,CAACC,SAAS,CAAC;QACnB,CAAC,MAAM;UACL;UACA,CAAC,YAAY;YAAA,IAAAE,qBAAA;YACX,MAAMC,WAAW,GAAG,MAAMf,sBAAsB,CAACC,QAAQ,CAAC;YAC1D,CAAAa,qBAAA,GAAAC,WAAW,CAACC,aAAa,CAAC,cAAc,CAAC,cAAAF,qBAAA,uBAAzCA,qBAAA,CAA2CG,MAAM,EAAE;YAEnD,IAAIF,WAAW,EAAE;cACfN,QAAQ,CAACS,GAAG,CAACV,EAAE,EAAEO,WAAW,CAAC;cAC7BJ,MAAM,CAACI,WAAW,CAAC;YACrB;UACF,CAAC,GAAG;QACN;MACF,CAAC,MAAM;QACL;QACA,CAAC,YAAY;UACX,MAAMA,WAAW,GAAG,MAAMf,sBAAsB,CAACC,QAAQ,CAAC;UAC1DU,MAAM,CAACI,WAAW,CAAC;QACrB,CAAC,GAAG;MACN;IACF;EACF,CAAC,EAAE,CAACP,EAAE,EAAEP,QAAQ,EAAEQ,QAAQ,EAAEE,MAAM,CAAC,CAAC;EAEpC,OAAOD,GAAG;AACZ,CAAC;AAED,OAAO,MAAMS,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAM,CAACV,QAAQ,CAAC,GAAGjB,OAAO,CAACM,oBAAoB,EAAEF,UAAU,CAAC;EAE5D,MAAMwB,iBAAiB,GAAGA,CAAA,KAAMX,QAAQ,CAACY,KAAK,EAAE;EAEhD,MAAMC,2BAA2B,GAAIC,KAA0B,IAAK;IAClEA,KAAK,CAACC,OAAO,CAAEC,IAAI,IAAKhB,QAAQ,CAACiB,MAAM,CAACD,IAAI,CAAC,CAAC;EAChD,CAAC;EAED,OAAO;IACLL,iBAAiB;IACjBE,2BAA2B;IAC3Bb;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}