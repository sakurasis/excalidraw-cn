{"ast":null,"code":"/*\n *  Implements the .roundRect() method of the CanvasPath mixin\n *  as introduced by https://github.com/whatwg/html/pull/6765\n */\n(() => {\n  \"use strict\";\n\n  Path2D.prototype.roundRect ??= roundRect;\n  if (globalThis.CanvasRenderingContext2D) {\n    globalThis.CanvasRenderingContext2D.prototype.roundRect ??= roundRect;\n  }\n  if (globalThis.OffscreenCanvasRenderingContext2D) {\n    globalThis.OffscreenCanvasRenderingContext2D.prototype.roundRect ??= roundRect;\n  }\n  function roundRect(x, y, w, h, radii) {\n    if (![x, y, w, h].every(input => Number.isFinite(input))) {\n      return;\n    }\n    radii = parseRadiiArgument(radii);\n    let upperLeft, upperRight, lowerRight, lowerLeft;\n    if (radii.length === 4) {\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerRight = toCornerPoint(radii[2]);\n      lowerLeft = toCornerPoint(radii[3]);\n    } else if (radii.length === 3) {\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerLeft = toCornerPoint(radii[1]);\n      lowerRight = toCornerPoint(radii[2]);\n    } else if (radii.length === 2) {\n      upperLeft = toCornerPoint(radii[0]);\n      lowerRight = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerLeft = toCornerPoint(radii[1]);\n    } else if (radii.length === 1) {\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[0]);\n      lowerRight = toCornerPoint(radii[0]);\n      lowerLeft = toCornerPoint(radii[0]);\n    } else {\n      throw new RangeError(`${getErrorMessageHeader(this)} ${radii.length} is not a valid size for radii sequence.`);\n    }\n    const corners = [upperLeft, upperRight, lowerRight, lowerLeft];\n    const negativeCorner = corners.find(_ref => {\n      let {\n        x,\n        y\n      } = _ref;\n      return x < 0 || y < 0;\n    });\n    const negativeValue = negativeCorner?.x < 0 ? negativeCorner.x : negativeCorner?.y;\n    if (corners.some(_ref2 => {\n      let {\n        x,\n        y\n      } = _ref2;\n      return !Number.isFinite(x) || !Number.isFinite(y);\n    })) {\n      return;\n    }\n    if (negativeCorner) {\n      throw new RangeError(`${getErrorMessageHeader(this)} Radius value ${negativeCorner} is negative.`);\n    }\n    fixOverlappingCorners(corners);\n    if (w < 0 && h < 0) {\n      this.moveTo(x - upperLeft.x, y);\n      this.ellipse(x + w + upperRight.x, y - upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI * 1.5, -Math.PI);\n      this.ellipse(x + w + lowerRight.x, y + h + lowerRight.y, lowerRight.x, lowerRight.y, 0, -Math.PI, -Math.PI / 2);\n      this.ellipse(x - lowerLeft.x, y + h + lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, -Math.PI / 2, 0);\n      this.ellipse(x - upperLeft.x, y - upperLeft.y, upperLeft.x, upperLeft.y, 0, 0, -Math.PI / 2);\n    } else if (w < 0) {\n      this.moveTo(x - upperLeft.x, y);\n      this.ellipse(x + w + upperRight.x, y + upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI / 2, -Math.PI, 1);\n      this.ellipse(x + w + lowerRight.x, y + h - lowerRight.y, lowerRight.x, lowerRight.y, 0, -Math.PI, -Math.PI * 1.5, 1);\n      this.ellipse(x - lowerLeft.x, y + h - lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, Math.PI / 2, 0, 1);\n      this.ellipse(x - upperLeft.x, y + upperLeft.y, upperLeft.x, upperLeft.y, 0, 0, -Math.PI / 2, 1);\n    } else if (h < 0) {\n      this.moveTo(x + upperLeft.x, y);\n      this.ellipse(x + w - upperRight.x, y - upperRight.y, upperRight.x, upperRight.y, 0, Math.PI / 2, 0, 1);\n      this.ellipse(x + w - lowerRight.x, y + h + lowerRight.y, lowerRight.x, lowerRight.y, 0, 0, -Math.PI / 2, 1);\n      this.ellipse(x + lowerLeft.x, y + h + lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, -Math.PI / 2, -Math.PI, 1);\n      this.ellipse(x + upperLeft.x, y - upperLeft.y, upperLeft.x, upperLeft.y, 0, -Math.PI, -Math.PI * 1.5, 1);\n    } else {\n      this.moveTo(x + upperLeft.x, y);\n      this.ellipse(x + w - upperRight.x, y + upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI / 2, 0);\n      this.ellipse(x + w - lowerRight.x, y + h - lowerRight.y, lowerRight.x, lowerRight.y, 0, 0, Math.PI / 2);\n      this.ellipse(x + lowerLeft.x, y + h - lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, Math.PI / 2, Math.PI);\n      this.ellipse(x + upperLeft.x, y + upperLeft.y, upperLeft.x, upperLeft.y, 0, Math.PI, Math.PI * 1.5);\n    }\n    this.closePath();\n    this.moveTo(x, y);\n    function toDOMPointInit(value) {\n      const {\n        x,\n        y,\n        z,\n        w\n      } = value;\n      return {\n        x,\n        y,\n        z,\n        w\n      };\n    }\n    function parseRadiiArgument(value) {\n      // https://webidl.spec.whatwg.org/#es-union\n      // with 'optional (unrestricted double or DOMPointInit\n      //   or sequence<(unrestricted double or DOMPointInit)>) radii = 0'\n      const type = typeof value;\n      if (type === \"undefined\" || value === null) {\n        return [0];\n      }\n      if (type === \"function\") {\n        return [NaN];\n      }\n      if (type === \"object\") {\n        if (typeof value[Symbol.iterator] === \"function\") {\n          return [...value].map(elem => {\n            // https://webidl.spec.whatwg.org/#es-union\n            // with '(unrestricted double or DOMPointInit)'\n            const elemType = typeof elem;\n            if (elemType === \"undefined\" || elem === null) {\n              return 0;\n            }\n            if (elemType === \"function\") {\n              return NaN;\n            }\n            if (elemType === \"object\") {\n              return toDOMPointInit(elem);\n            }\n            return toUnrestrictedNumber(elem);\n          });\n        }\n        return [toDOMPointInit(value)];\n      }\n      return [toUnrestrictedNumber(value)];\n    }\n    function toUnrestrictedNumber(value) {\n      return +value;\n    }\n    function toCornerPoint(value) {\n      const asNumber = toUnrestrictedNumber(value);\n      if (Number.isFinite(asNumber)) {\n        return {\n          x: asNumber,\n          y: asNumber\n        };\n      }\n      if (Object(value) === value) {\n        return {\n          x: toUnrestrictedNumber(value.x ?? 0),\n          y: toUnrestrictedNumber(value.y ?? 0)\n        };\n      }\n      return {\n        x: NaN,\n        y: NaN\n      };\n    }\n    function fixOverlappingCorners(corners) {\n      const [upperLeft, upperRight, lowerRight, lowerLeft] = corners;\n      const factors = [Math.abs(w) / (upperLeft.x + upperRight.x), Math.abs(h) / (upperRight.y + lowerRight.y), Math.abs(w) / (lowerRight.x + lowerLeft.x), Math.abs(h) / (upperLeft.y + lowerLeft.y)];\n      const minFactor = Math.min(...factors);\n      if (minFactor <= 1) {\n        for (const radii of corners) {\n          radii.x *= minFactor;\n          radii.y *= minFactor;\n        }\n      }\n    }\n  }\n  function getErrorMessageHeader(instance) {\n    return `Failed to execute 'roundRect' on '${getConstructorName(instance)}':`;\n  }\n  function getConstructorName(instance) {\n    return Object(instance) === instance && instance instanceof Path2D ? \"Path2D\" : instance instanceof globalThis?.CanvasRenderingContext2D ? \"CanvasRenderingContext2D\" : instance instanceof globalThis?.OffscreenCanvasRenderingContext2D ? \"OffscreenCanvasRenderingContext2D\" : instance?.constructor.name || instance;\n  }\n})();","map":{"version":3,"names":["Path2D","prototype","roundRect","globalThis","CanvasRenderingContext2D","OffscreenCanvasRenderingContext2D","x","y","w","h","radii","every","input","Number","isFinite","parseRadiiArgument","upperLeft","upperRight","lowerRight","lowerLeft","length","toCornerPoint","RangeError","getErrorMessageHeader","corners","negativeCorner","find","_ref","negativeValue","some","_ref2","fixOverlappingCorners","moveTo","ellipse","Math","PI","closePath","toDOMPointInit","value","z","type","NaN","Symbol","iterator","map","elem","elemType","toUnrestrictedNumber","asNumber","Object","factors","abs","minFactor","min","instance","getConstructorName","constructor","name"],"sources":["D:/project/excalidraw-cn/node_modules/canvas-roundrect-polyfill/roundRect.js"],"sourcesContent":["/*\n *  Implements the .roundRect() method of the CanvasPath mixin\n *  as introduced by https://github.com/whatwg/html/pull/6765\n */\n(() => {\n\n  \"use strict\";\n\n  Path2D.prototype.roundRect ??= roundRect;\n  if (globalThis.CanvasRenderingContext2D) {\n\n    globalThis.CanvasRenderingContext2D.prototype.roundRect ??= roundRect;\n\n  }\n  if (globalThis.OffscreenCanvasRenderingContext2D) {\n\n    globalThis.OffscreenCanvasRenderingContext2D.prototype.roundRect ??= roundRect;\n\n  }\n\n  function roundRect(x, y, w, h, radii) {\n\n    if (!([x, y, w, h].every((input) => Number.isFinite(input)))) {\n\n      return;\n\n    }\n\n    radii = parseRadiiArgument(radii);\n\n    let upperLeft, upperRight, lowerRight, lowerLeft;\n\n    if (radii.length === 4) {\n\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerRight = toCornerPoint(radii[2]);\n      lowerLeft = toCornerPoint(radii[3]);\n\n    } else if (radii.length === 3) {\n\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerLeft = toCornerPoint(radii[1]);\n      lowerRight = toCornerPoint(radii[2]);\n\n    } else if (radii.length === 2) {\n\n      upperLeft = toCornerPoint(radii[0]);\n      lowerRight = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[1]);\n      lowerLeft = toCornerPoint(radii[1]);\n\n    } else if (radii.length === 1) {\n\n      upperLeft = toCornerPoint(radii[0]);\n      upperRight = toCornerPoint(radii[0]);\n      lowerRight = toCornerPoint(radii[0]);\n      lowerLeft = toCornerPoint(radii[0]);\n\n    } else {\n\n      throw new RangeError(`${ getErrorMessageHeader(this) } ${ radii.length } is not a valid size for radii sequence.`);\n\n    }\n\n    const corners = [upperLeft, upperRight, lowerRight, lowerLeft];\n    const negativeCorner = corners.find(({x, y}) => x < 0 || y < 0);\n    const negativeValue = negativeCorner?.x < 0 ? negativeCorner.x : negativeCorner?.y\n\n    if (corners.some(({x, y}) => !Number.isFinite(x) || !Number.isFinite(y))) {\n\n      return;\n\n    }\n\n    if (negativeCorner) {\n\n      throw new RangeError(`${ getErrorMessageHeader(this) } Radius value ${ negativeCorner } is negative.`);\n\n    }\n\n    fixOverlappingCorners(corners);\n\n    if (w < 0 && h < 0) {\n\n      this.moveTo(x - upperLeft.x, y);\n      this.ellipse(x + w + upperRight.x, y - upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI * 1.5, -Math.PI);\n      this.ellipse(x + w + lowerRight.x, y + h + lowerRight.y, lowerRight.x, lowerRight.y, 0, -Math.PI, -Math.PI / 2);\n      this.ellipse(x - lowerLeft.x, y + h + lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, -Math.PI / 2, 0);\n      this.ellipse(x - upperLeft.x, y - upperLeft.y, upperLeft.x, upperLeft.y, 0, 0, -Math.PI / 2);\n\n    } else if (w < 0) {\n\n      this.moveTo(x - upperLeft.x, y);\n      this.ellipse(x + w + upperRight.x, y + upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI / 2, -Math.PI, 1);\n      this.ellipse(x + w + lowerRight.x, y + h - lowerRight.y, lowerRight.x, lowerRight.y, 0, -Math.PI, -Math.PI * 1.5, 1);\n      this.ellipse(x - lowerLeft.x, y + h - lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, Math.PI / 2, 0, 1);\n      this.ellipse(x - upperLeft.x, y + upperLeft.y, upperLeft.x, upperLeft.y, 0, 0, -Math.PI / 2, 1);\n\n    } else if (h < 0) {\n\n      this.moveTo(x + upperLeft.x, y);\n      this.ellipse(x + w - upperRight.x, y - upperRight.y, upperRight.x, upperRight.y, 0, Math.PI / 2, 0, 1);\n      this.ellipse(x + w - lowerRight.x, y + h + lowerRight.y, lowerRight.x, lowerRight.y, 0, 0, -Math.PI / 2, 1);\n      this.ellipse(x + lowerLeft.x, y + h + lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, -Math.PI / 2, -Math.PI, 1);\n      this.ellipse(x + upperLeft.x, y - upperLeft.y, upperLeft.x, upperLeft.y, 0, -Math.PI, -Math.PI * 1.5, 1);\n\n    } else {\n\n      this.moveTo(x + upperLeft.x, y);\n      this.ellipse(x + w - upperRight.x, y + upperRight.y, upperRight.x, upperRight.y, 0, -Math.PI / 2, 0);\n      this.ellipse(x + w - lowerRight.x, y + h - lowerRight.y, lowerRight.x, lowerRight.y, 0, 0, Math.PI / 2);\n      this.ellipse(x + lowerLeft.x, y + h - lowerLeft.y, lowerLeft.x, lowerLeft.y, 0, Math.PI / 2, Math.PI);\n      this.ellipse(x + upperLeft.x, y + upperLeft.y, upperLeft.x, upperLeft.y, 0, Math.PI, Math.PI * 1.5);\n\n    }\n\n    this.closePath();\n    this.moveTo(x, y);\n\n    function toDOMPointInit(value) {\n\n      const {x, y, z, w} = value;\n      return {x, y, z, w};\n\n    }\n\n    function parseRadiiArgument(value) {\n\n      // https://webidl.spec.whatwg.org/#es-union\n      // with 'optional (unrestricted double or DOMPointInit\n      //   or sequence<(unrestricted double or DOMPointInit)>) radii = 0'\n      const type = typeof value;\n\n      if (type === \"undefined\" || value === null) {\n\n        return [0];\n\n      }\n      if (type === \"function\") {\n\n        return [NaN];\n\n      }\n      if (type === \"object\") {\n\n        if (typeof value[Symbol.iterator] === \"function\") {\n\n          return [...value].map((elem) => {\n            // https://webidl.spec.whatwg.org/#es-union\n            // with '(unrestricted double or DOMPointInit)'\n            const elemType = typeof elem;\n            if (elemType === \"undefined\" || elem === null) {\n              return 0;\n            }\n            if (elemType === \"function\") {\n              return NaN;\n            }\n            if (elemType === \"object\") {\n              return toDOMPointInit(elem);\n            }\n            return toUnrestrictedNumber(elem);\n          });\n\n        }\n\n        return [toDOMPointInit(value)];\n\n      }\n\n      return [toUnrestrictedNumber(value)];\n\n    }\n\n    function toUnrestrictedNumber(value) {\n\n      return +value;\n\n    }\n\n    function toCornerPoint(value) {\n\n      const asNumber = toUnrestrictedNumber(value);\n      if (Number.isFinite(asNumber)) {\n\n        return {\n          x: asNumber,\n          y: asNumber\n        };\n\n      }\n      if (Object(value) === value) {\n\n        return {\n          x: toUnrestrictedNumber(value.x ?? 0),\n          y: toUnrestrictedNumber(value.y ?? 0)\n        };\n\n      }\n\n      return {\n        x: NaN,\n        y: NaN\n      };\n\n    }\n\n    function fixOverlappingCorners(corners) {\n\n      const [upperLeft, upperRight, lowerRight, lowerLeft] = corners;\n      const factors = [\n        Math.abs(w) / (upperLeft.x + upperRight.x),\n        Math.abs(h) / (upperRight.y + lowerRight.y),\n        Math.abs(w) / (lowerRight.x + lowerLeft.x),\n        Math.abs(h) / (upperLeft.y + lowerLeft.y)\n      ];\n      const minFactor = Math.min(...factors);\n      if (minFactor <= 1) {\n\n        for (const radii of corners) {\n\n          radii.x *= minFactor;\n          radii.y *= minFactor;\n\n        }\n\n      }\n\n    }\n\n  }\n\n  function getErrorMessageHeader(instance) {\n\n    return `Failed to execute 'roundRect' on '${ getConstructorName(instance) }':`;\n\n  }\n\n  function getConstructorName(instance) {\n\n    return Object(instance) === instance &&\n      instance instanceof Path2D ? \"Path2D\" :\n      instance instanceof globalThis?.CanvasRenderingContext2D ? \"CanvasRenderingContext2D\" :\n      instance instanceof globalThis?.OffscreenCanvasRenderingContext2D ? \"OffscreenCanvasRenderingContext2D\" :\n      instance?.constructor.name ||\n      instance;\n\n  }\n\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}