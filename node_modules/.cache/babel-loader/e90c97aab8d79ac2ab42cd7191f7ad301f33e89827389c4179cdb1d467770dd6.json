{"ast":null,"code":"import { ArrowIcon, DiamondIcon, EllipseIcon, EraserIcon, FreedrawIcon, ImageIcon, LineIcon, RectangleIcon, SelectionIcon, TextIcon } from \"./components/icons\";\nimport { KEYS } from \"./keys\";\nexport const SHAPES = [{\n  icon: SelectionIcon,\n  value: \"selection\",\n  key: KEYS.V,\n  numericKey: KEYS[\"1\"],\n  fillable: true\n}, {\n  icon: RectangleIcon,\n  value: \"rectangle\",\n  key: KEYS.R,\n  numericKey: KEYS[\"2\"],\n  fillable: true\n}, {\n  icon: DiamondIcon,\n  value: \"diamond\",\n  key: KEYS.D,\n  numericKey: KEYS[\"3\"],\n  fillable: true\n}, {\n  icon: EllipseIcon,\n  value: \"ellipse\",\n  key: KEYS.O,\n  numericKey: KEYS[\"4\"],\n  fillable: true\n}, {\n  icon: ArrowIcon,\n  value: \"arrow\",\n  key: KEYS.A,\n  numericKey: KEYS[\"5\"],\n  fillable: true\n}, {\n  icon: LineIcon,\n  value: \"line\",\n  key: KEYS.L,\n  numericKey: KEYS[\"6\"],\n  fillable: true\n}, {\n  icon: FreedrawIcon,\n  value: \"freedraw\",\n  key: [KEYS.P, KEYS.X],\n  numericKey: KEYS[\"7\"],\n  fillable: false\n}, {\n  icon: TextIcon,\n  value: \"text\",\n  key: KEYS.T,\n  numericKey: KEYS[\"8\"],\n  fillable: false\n}, {\n  icon: ImageIcon,\n  value: \"image\",\n  key: null,\n  numericKey: KEYS[\"9\"],\n  fillable: false\n}, {\n  icon: EraserIcon,\n  value: \"eraser\",\n  key: KEYS.E,\n  numericKey: KEYS[\"0\"],\n  fillable: false\n}\n// TODO: frame, create icon and set up numeric key\n// {\n//   icon: RectangleIcon,\n//   value: \"frame\",\n//   key: KEYS.F,\n//   numericKey: KEYS.SUBTRACT,\n//   fillable: false,\n// },\n];\n\nexport const findShapeByKey = key => {\n  const shape = SHAPES.find((shape, index) => {\n    return shape.numericKey != null && key === shape.numericKey.toString() || shape.key && (typeof shape.key === \"string\" ? shape.key === key : shape.key.includes(key));\n  });\n  return (shape === null || shape === void 0 ? void 0 : shape.value) || null;\n};","map":{"version":3,"names":["ArrowIcon","DiamondIcon","EllipseIcon","EraserIcon","FreedrawIcon","ImageIcon","LineIcon","RectangleIcon","SelectionIcon","TextIcon","KEYS","SHAPES","icon","value","key","V","numericKey","fillable","R","D","O","A","L","P","X","T","E","findShapeByKey","shape","find","index","toString","includes"],"sources":["D:/project/excalidraw-cn/src/shapes.tsx"],"sourcesContent":["import {\n  ArrowIcon,\n  DiamondIcon,\n  EllipseIcon,\n  EraserIcon,\n  FreedrawIcon,\n  ImageIcon,\n  LineIcon,\n  RectangleIcon,\n  SelectionIcon,\n  TextIcon,\n} from \"./components/icons\";\nimport { KEYS } from \"./keys\";\n\nexport const SHAPES = [\n  {\n    icon: SelectionIcon,\n    value: \"selection\",\n    key: KEYS.V,\n    numericKey: KEYS[\"1\"],\n    fillable: true,\n  },\n  {\n    icon: RectangleIcon,\n    value: \"rectangle\",\n    key: KEYS.R,\n    numericKey: KEYS[\"2\"],\n    fillable: true,\n  },\n  {\n    icon: DiamondIcon,\n    value: \"diamond\",\n    key: KEYS.D,\n    numericKey: KEYS[\"3\"],\n    fillable: true,\n  },\n  {\n    icon: EllipseIcon,\n    value: \"ellipse\",\n    key: KEYS.O,\n    numericKey: KEYS[\"4\"],\n    fillable: true,\n  },\n  {\n    icon: ArrowIcon,\n    value: \"arrow\",\n    key: KEYS.A,\n    numericKey: KEYS[\"5\"],\n    fillable: true,\n  },\n  {\n    icon: LineIcon,\n    value: \"line\",\n    key: KEYS.L,\n    numericKey: KEYS[\"6\"],\n    fillable: true,\n  },\n  {\n    icon: FreedrawIcon,\n    value: \"freedraw\",\n    key: [KEYS.P, KEYS.X],\n    numericKey: KEYS[\"7\"],\n    fillable: false,\n  },\n  {\n    icon: TextIcon,\n    value: \"text\",\n    key: KEYS.T,\n    numericKey: KEYS[\"8\"],\n    fillable: false,\n  },\n  {\n    icon: ImageIcon,\n    value: \"image\",\n    key: null,\n    numericKey: KEYS[\"9\"],\n    fillable: false,\n  },\n  {\n    icon: EraserIcon,\n    value: \"eraser\",\n    key: KEYS.E,\n    numericKey: KEYS[\"0\"],\n    fillable: false,\n  },\n  // TODO: frame, create icon and set up numeric key\n  // {\n  //   icon: RectangleIcon,\n  //   value: \"frame\",\n  //   key: KEYS.F,\n  //   numericKey: KEYS.SUBTRACT,\n  //   fillable: false,\n  // },\n] as const;\n\nexport const findShapeByKey = (key: string) => {\n  const shape = SHAPES.find((shape, index) => {\n    return (\n      (shape.numericKey != null && key === shape.numericKey.toString()) ||\n      (shape.key &&\n        (typeof shape.key === \"string\"\n          ? shape.key === key\n          : (shape.key as readonly string[]).includes(key)))\n    );\n  });\n  return shape?.value || null;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}