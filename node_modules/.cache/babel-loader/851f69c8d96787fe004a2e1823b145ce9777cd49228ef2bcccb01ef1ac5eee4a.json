{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _toConsumableArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/project/excalidraw-cn/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{COLOR_PALETTE,DEFAULT_CHART_COLOR_INDEX,getAllColorsSpecificShade}from\"./colors\";import{DEFAULT_FONT_FAMILY,DEFAULT_FONT_SIZE,ENV,VERTICAL_ALIGN}from\"./constants\";import{newElement,newLinearElement,newTextElement}from\"./element\";import{randomId}from\"./random\";var BAR_WIDTH=32;var BAR_GAP=12;var BAR_HEIGHT=256;var GRID_OPACITY=50;export var NOT_SPREADSHEET=\"NOT_SPREADSHEET\";export var VALID_SPREADSHEET=\"VALID_SPREADSHEET\";/**\n * @private exported for testing\n */export var tryParseNumber=function tryParseNumber(s){var match=/^([-+]?)[$€£¥₩]?([-+]?)([\\d.,]+)[%]?$/.exec(s);if(!match){return null;}return parseFloat(\"\".concat((match[1]||match[2])+match[3]).replace(/,/g,\"\"));};var isNumericColumn=function isNumericColumn(lines,columnIndex){return lines.slice(1).every(function(line){return tryParseNumber(line[columnIndex])!==null;});};/**\n * @private exported for testing\n */export var tryParseCells=function tryParseCells(cells){var numCols=cells[0].length;if(numCols>2){return{type:NOT_SPREADSHEET,reason:\"More than 2 columns\"};}if(numCols===1){if(!isNumericColumn(cells,0)){return{type:NOT_SPREADSHEET,reason:\"Value is not numeric\"};}var _hasHeader=tryParseNumber(cells[0][0])===null;var values=(_hasHeader?cells.slice(1):cells).map(function(line){return tryParseNumber(line[0]);});if(values.length<2){return{type:NOT_SPREADSHEET,reason:\"Less than two rows\"};}return{type:VALID_SPREADSHEET,spreadsheet:{title:_hasHeader?cells[0][0]:null,labels:null,values:values}};}var labelColumnNumeric=isNumericColumn(cells,0);var valueColumnNumeric=isNumericColumn(cells,1);if(!labelColumnNumeric&&!valueColumnNumeric){return{type:NOT_SPREADSHEET,reason:\"Value is not numeric\"};}var _ref=valueColumnNumeric?[0,1]:[1,0],_ref2=_slicedToArray(_ref,2),labelColumnIndex=_ref2[0],valueColumnIndex=_ref2[1];var hasHeader=tryParseNumber(cells[0][valueColumnIndex])===null;var rows=hasHeader?cells.slice(1):cells;if(rows.length<2){return{type:NOT_SPREADSHEET,reason:\"Less than 2 rows\"};}return{type:VALID_SPREADSHEET,spreadsheet:{title:hasHeader?cells[0][valueColumnIndex]:null,labels:rows.map(function(row){return row[labelColumnIndex];}),values:rows.map(function(row){return tryParseNumber(row[valueColumnIndex]);})}};};var transposeCells=function transposeCells(cells){var nextCells=[];for(var col=0;col<cells[0].length;col++){var nextCellRow=[];for(var row=0;row<cells.length;row++){nextCellRow.push(cells[row][col]);}nextCells.push(nextCellRow);}return nextCells;};export var tryParseSpreadsheet=function tryParseSpreadsheet(text){// Copy/paste from excel, spreadsheets, tsv, csv.\n// For now we only accept 2 columns with an optional header\n// Check for tab separated values\nvar lines=text.trim().split(\"\\n\").map(function(line){return line.trim().split(\"\\t\");});// Check for comma separated files\nif(lines.length&&lines[0].length!==2){lines=text.trim().split(\"\\n\").map(function(line){return line.trim().split(\",\");});}if(lines.length===0){return{type:NOT_SPREADSHEET,reason:\"No values\"};}var numColsFirstLine=lines[0].length;var isSpreadsheet=lines.every(function(line){return line.length===numColsFirstLine;});if(!isSpreadsheet){return{type:NOT_SPREADSHEET,reason:\"All rows don't have same number of columns\"};}var result=tryParseCells(lines);if(result.type!==VALID_SPREADSHEET){var transposedResults=tryParseCells(transposeCells(lines));if(transposedResults.type===VALID_SPREADSHEET){return transposedResults;}}return result;};var bgColors=getAllColorsSpecificShade(DEFAULT_CHART_COLOR_INDEX);// Put all the common properties here so when the whole chart is selected\n// the properties dialog shows the correct selected values\nvar commonProps={fillStyle:\"hachure\",fontFamily:DEFAULT_FONT_FAMILY,fontSize:DEFAULT_FONT_SIZE,opacity:100,roughness:1,strokeColor:COLOR_PALETTE.black,roundness:null,strokeStyle:\"solid\",strokeWidth:1,verticalAlign:VERTICAL_ALIGN.MIDDLE,locked:false};var getChartDimensions=function getChartDimensions(spreadsheet){var chartWidth=(BAR_WIDTH+BAR_GAP)*spreadsheet.values.length+BAR_GAP;var chartHeight=BAR_HEIGHT+BAR_GAP*2;return{chartWidth:chartWidth,chartHeight:chartHeight};};var chartXLabels=function chartXLabels(spreadsheet,x,y,groupId,backgroundColor){var _spreadsheet$labels;return((_spreadsheet$labels=spreadsheet.labels)===null||_spreadsheet$labels===void 0?void 0:_spreadsheet$labels.map(function(label,index){return newTextElement(_objectSpread(_objectSpread({groupIds:[groupId],backgroundColor:backgroundColor},commonProps),{},{text:label.length>8?\"\".concat(label.slice(0,5),\"...\"):label,x:x+index*(BAR_WIDTH+BAR_GAP)+BAR_GAP*2,y:y+BAR_GAP/2,width:BAR_WIDTH,angle:5.87,fontSize:16,textAlign:\"center\",verticalAlign:\"top\"}));}))||[];};var chartYLabels=function chartYLabels(spreadsheet,x,y,groupId,backgroundColor){var minYLabel=newTextElement(_objectSpread(_objectSpread({groupIds:[groupId],backgroundColor:backgroundColor},commonProps),{},{x:x-BAR_GAP,y:y-BAR_GAP,text:\"0\",textAlign:\"right\"}));var maxYLabel=newTextElement(_objectSpread(_objectSpread({groupIds:[groupId],backgroundColor:backgroundColor},commonProps),{},{x:x-BAR_GAP,y:y-BAR_HEIGHT-minYLabel.height/2,text:Math.max.apply(Math,_toConsumableArray(spreadsheet.values)).toLocaleString(),textAlign:\"right\"}));return[minYLabel,maxYLabel];};var chartLines=function chartLines(spreadsheet,x,y,groupId,backgroundColor){var _getChartDimensions=getChartDimensions(spreadsheet),chartWidth=_getChartDimensions.chartWidth,chartHeight=_getChartDimensions.chartHeight;var xLine=newLinearElement(_objectSpread(_objectSpread({backgroundColor:backgroundColor,groupIds:[groupId]},commonProps),{},{type:\"line\",x:x,y:y,startArrowhead:null,endArrowhead:null,width:chartWidth,points:[[0,0],[chartWidth,0]]}));var yLine=newLinearElement(_objectSpread(_objectSpread({backgroundColor:backgroundColor,groupIds:[groupId]},commonProps),{},{type:\"line\",x:x,y:y,startArrowhead:null,endArrowhead:null,height:chartHeight,points:[[0,0],[0,-chartHeight]]}));var maxLine=newLinearElement(_objectSpread(_objectSpread({backgroundColor:backgroundColor,groupIds:[groupId]},commonProps),{},{type:\"line\",x:x,y:y-BAR_HEIGHT-BAR_GAP,startArrowhead:null,endArrowhead:null,strokeStyle:\"dotted\",width:chartWidth,opacity:GRID_OPACITY,points:[[0,0],[chartWidth,0]]}));return[xLine,yLine,maxLine];};// For the maths behind it https://excalidraw.com/#json=6320864370884608,O_5xfD-Agh32tytHpRJx1g\nvar chartBaseElements=function chartBaseElements(spreadsheet,x,y,groupId,backgroundColor,debug){var _getChartDimensions2=getChartDimensions(spreadsheet),chartWidth=_getChartDimensions2.chartWidth,chartHeight=_getChartDimensions2.chartHeight;var title=spreadsheet.title?newTextElement(_objectSpread(_objectSpread({backgroundColor:backgroundColor,groupIds:[groupId]},commonProps),{},{text:spreadsheet.title,x:x+chartWidth/2,y:y-BAR_HEIGHT-BAR_GAP*2-DEFAULT_FONT_SIZE,roundness:null,textAlign:\"center\"})):null;var debugRect=debug?newElement(_objectSpread(_objectSpread({backgroundColor:backgroundColor,groupIds:[groupId]},commonProps),{},{type:\"rectangle\",x:x,y:y-chartHeight,width:chartWidth,height:chartHeight,strokeColor:COLOR_PALETTE.black,fillStyle:\"solid\",opacity:6})):null;return[].concat(_toConsumableArray(debugRect?[debugRect]:[]),_toConsumableArray(title?[title]:[]),_toConsumableArray(chartXLabels(spreadsheet,x,y,groupId,backgroundColor)),_toConsumableArray(chartYLabels(spreadsheet,x,y,groupId,backgroundColor)),_toConsumableArray(chartLines(spreadsheet,x,y,groupId,backgroundColor)));};var chartTypeBar=function chartTypeBar(spreadsheet,x,y){var max=Math.max.apply(Math,_toConsumableArray(spreadsheet.values));var groupId=randomId();var backgroundColor=bgColors[Math.floor(Math.random()*bgColors.length)];var bars=spreadsheet.values.map(function(value,index){var barHeight=value/max*BAR_HEIGHT;return newElement(_objectSpread(_objectSpread({backgroundColor:backgroundColor,groupIds:[groupId]},commonProps),{},{type:\"rectangle\",x:x+index*(BAR_WIDTH+BAR_GAP)+BAR_GAP,y:y-barHeight-BAR_GAP,width:BAR_WIDTH,height:barHeight}));});return[].concat(_toConsumableArray(bars),_toConsumableArray(chartBaseElements(spreadsheet,x,y,groupId,backgroundColor,process.env.NODE_ENV===ENV.DEVELOPMENT)));};var chartTypeLine=function chartTypeLine(spreadsheet,x,y){var max=Math.max.apply(Math,_toConsumableArray(spreadsheet.values));var groupId=randomId();var backgroundColor=bgColors[Math.floor(Math.random()*bgColors.length)];var index=0;var points=[];var _iterator=_createForOfIteratorHelper(spreadsheet.values),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var value=_step.value;var cx=index*(BAR_WIDTH+BAR_GAP);var cy=-(value/max)*BAR_HEIGHT;points.push([cx,cy]);index++;}}catch(err){_iterator.e(err);}finally{_iterator.f();}var maxX=Math.max.apply(Math,_toConsumableArray(points.map(function(element){return element[0];})));var maxY=Math.max.apply(Math,_toConsumableArray(points.map(function(element){return element[1];})));var minX=Math.min.apply(Math,_toConsumableArray(points.map(function(element){return element[0];})));var minY=Math.min.apply(Math,_toConsumableArray(points.map(function(element){return element[1];})));var line=newLinearElement(_objectSpread(_objectSpread({backgroundColor:backgroundColor,groupIds:[groupId]},commonProps),{},{type:\"line\",x:x+BAR_GAP+BAR_WIDTH/2,y:y-BAR_GAP,startArrowhead:null,endArrowhead:null,height:maxY-minY,width:maxX-minX,strokeWidth:2,points:points}));var dots=spreadsheet.values.map(function(value,index){var cx=index*(BAR_WIDTH+BAR_GAP)+BAR_GAP/2;var cy=-(value/max)*BAR_HEIGHT+BAR_GAP/2;return newElement(_objectSpread(_objectSpread({backgroundColor:backgroundColor,groupIds:[groupId]},commonProps),{},{fillStyle:\"solid\",strokeWidth:2,type:\"ellipse\",x:x+cx+BAR_WIDTH/2,y:y+cy-BAR_GAP*2,width:BAR_GAP,height:BAR_GAP}));});var lines=spreadsheet.values.map(function(value,index){var cx=index*(BAR_WIDTH+BAR_GAP)+BAR_GAP/2;var cy=value/max*BAR_HEIGHT+BAR_GAP/2+BAR_GAP;return newLinearElement(_objectSpread(_objectSpread({backgroundColor:backgroundColor,groupIds:[groupId]},commonProps),{},{type:\"line\",x:x+cx+BAR_WIDTH/2+BAR_GAP/2,y:y-cy,startArrowhead:null,endArrowhead:null,height:cy,strokeStyle:\"dotted\",opacity:GRID_OPACITY,points:[[0,0],[0,cy]]}));});return[].concat(_toConsumableArray(chartBaseElements(spreadsheet,x,y,groupId,backgroundColor,process.env.NODE_ENV===ENV.DEVELOPMENT)),[line],_toConsumableArray(lines),_toConsumableArray(dots));};export var renderSpreadsheet=function renderSpreadsheet(chartType,spreadsheet,x,y){if(chartType===\"line\"){return chartTypeLine(spreadsheet,x,y);}return chartTypeBar(spreadsheet,x,y);};","map":{"version":3,"names":["COLOR_PALETTE","DEFAULT_CHART_COLOR_INDEX","getAllColorsSpecificShade","DEFAULT_FONT_FAMILY","DEFAULT_FONT_SIZE","ENV","VERTICAL_ALIGN","newElement","newLinearElement","newTextElement","randomId","BAR_WIDTH","BAR_GAP","BAR_HEIGHT","GRID_OPACITY","NOT_SPREADSHEET","VALID_SPREADSHEET","tryParseNumber","s","match","exec","parseFloat","concat","replace","isNumericColumn","lines","columnIndex","slice","every","line","tryParseCells","cells","numCols","length","type","reason","hasHeader","values","map","spreadsheet","title","labels","labelColumnNumeric","valueColumnNumeric","_ref","_ref2","_slicedToArray","labelColumnIndex","valueColumnIndex","rows","row","transposeCells","nextCells","col","nextCellRow","push","tryParseSpreadsheet","text","trim","split","numColsFirstLine","isSpreadsheet","result","transposedResults","bgColors","commonProps","fillStyle","fontFamily","fontSize","opacity","roughness","strokeColor","black","roundness","strokeStyle","strokeWidth","verticalAlign","MIDDLE","locked","getChartDimensions","chartWidth","chartHeight","chartXLabels","x","y","groupId","backgroundColor","_spreadsheet$labels","label","index","_objectSpread","groupIds","width","angle","textAlign","chartYLabels","minYLabel","maxYLabel","height","Math","max","apply","_toConsumableArray","toLocaleString","chartLines","_getChartDimensions","xLine","startArrowhead","endArrowhead","points","yLine","maxLine","chartBaseElements","debug","_getChartDimensions2","debugRect","chartTypeBar","floor","random","bars","value","barHeight","process","env","NODE_ENV","DEVELOPMENT","chartTypeLine","_iterator","_createForOfIteratorHelper","_step","n","done","cx","cy","err","e","f","maxX","element","maxY","minX","min","minY","dots","renderSpreadsheet","chartType"],"sources":["D:/project/excalidraw-cn/src/charts.ts"],"sourcesContent":["import {\n  COLOR_PALETTE,\n  DEFAULT_CHART_COLOR_INDEX,\n  getAllColorsSpecificShade,\n} from \"./colors\";\nimport {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_SIZE,\n  ENV,\n  VERTICAL_ALIGN,\n} from \"./constants\";\nimport { newElement, newLinearElement, newTextElement } from \"./element\";\nimport { NonDeletedExcalidrawElement } from \"./element/types\";\nimport { randomId } from \"./random\";\n\nexport type ChartElements = readonly NonDeletedExcalidrawElement[];\n\nconst BAR_WIDTH = 32;\nconst BAR_GAP = 12;\nconst BAR_HEIGHT = 256;\nconst GRID_OPACITY = 50;\n\nexport interface Spreadsheet {\n  title: string | null;\n  labels: string[] | null;\n  values: number[];\n}\n\nexport const NOT_SPREADSHEET = \"NOT_SPREADSHEET\";\nexport const VALID_SPREADSHEET = \"VALID_SPREADSHEET\";\n\ntype ParseSpreadsheetResult =\n  | { type: typeof NOT_SPREADSHEET; reason: string }\n  | { type: typeof VALID_SPREADSHEET; spreadsheet: Spreadsheet };\n\n/**\n * @private exported for testing\n */\nexport const tryParseNumber = (s: string): number | null => {\n  const match = /^([-+]?)[$€£¥₩]?([-+]?)([\\d.,]+)[%]?$/.exec(s);\n  if (!match) {\n    return null;\n  }\n  return parseFloat(`${(match[1] || match[2]) + match[3]}`.replace(/,/g, \"\"));\n};\n\nconst isNumericColumn = (lines: string[][], columnIndex: number) =>\n  lines.slice(1).every((line) => tryParseNumber(line[columnIndex]) !== null);\n\n/**\n * @private exported for testing\n */\nexport const tryParseCells = (cells: string[][]): ParseSpreadsheetResult => {\n  const numCols = cells[0].length;\n\n  if (numCols > 2) {\n    return { type: NOT_SPREADSHEET, reason: \"More than 2 columns\" };\n  }\n\n  if (numCols === 1) {\n    if (!isNumericColumn(cells, 0)) {\n      return { type: NOT_SPREADSHEET, reason: \"Value is not numeric\" };\n    }\n\n    const hasHeader = tryParseNumber(cells[0][0]) === null;\n    const values = (hasHeader ? cells.slice(1) : cells).map((line) =>\n      tryParseNumber(line[0]),\n    );\n\n    if (values.length < 2) {\n      return { type: NOT_SPREADSHEET, reason: \"Less than two rows\" };\n    }\n\n    return {\n      type: VALID_SPREADSHEET,\n      spreadsheet: {\n        title: hasHeader ? cells[0][0] : null,\n        labels: null,\n        values: values as number[],\n      },\n    };\n  }\n\n  const labelColumnNumeric = isNumericColumn(cells, 0);\n  const valueColumnNumeric = isNumericColumn(cells, 1);\n\n  if (!labelColumnNumeric && !valueColumnNumeric) {\n    return { type: NOT_SPREADSHEET, reason: \"Value is not numeric\" };\n  }\n\n  const [labelColumnIndex, valueColumnIndex] = valueColumnNumeric\n    ? [0, 1]\n    : [1, 0];\n  const hasHeader = tryParseNumber(cells[0][valueColumnIndex]) === null;\n  const rows = hasHeader ? cells.slice(1) : cells;\n\n  if (rows.length < 2) {\n    return { type: NOT_SPREADSHEET, reason: \"Less than 2 rows\" };\n  }\n\n  return {\n    type: VALID_SPREADSHEET,\n    spreadsheet: {\n      title: hasHeader ? cells[0][valueColumnIndex] : null,\n      labels: rows.map((row) => row[labelColumnIndex]),\n      values: rows.map((row) => tryParseNumber(row[valueColumnIndex])!),\n    },\n  };\n};\n\nconst transposeCells = (cells: string[][]) => {\n  const nextCells: string[][] = [];\n  for (let col = 0; col < cells[0].length; col++) {\n    const nextCellRow: string[] = [];\n    for (let row = 0; row < cells.length; row++) {\n      nextCellRow.push(cells[row][col]);\n    }\n    nextCells.push(nextCellRow);\n  }\n  return nextCells;\n};\n\nexport const tryParseSpreadsheet = (text: string): ParseSpreadsheetResult => {\n  // Copy/paste from excel, spreadsheets, tsv, csv.\n  // For now we only accept 2 columns with an optional header\n\n  // Check for tab separated values\n  let lines = text\n    .trim()\n    .split(\"\\n\")\n    .map((line) => line.trim().split(\"\\t\"));\n\n  // Check for comma separated files\n  if (lines.length && lines[0].length !== 2) {\n    lines = text\n      .trim()\n      .split(\"\\n\")\n      .map((line) => line.trim().split(\",\"));\n  }\n\n  if (lines.length === 0) {\n    return { type: NOT_SPREADSHEET, reason: \"No values\" };\n  }\n\n  const numColsFirstLine = lines[0].length;\n  const isSpreadsheet = lines.every((line) => line.length === numColsFirstLine);\n\n  if (!isSpreadsheet) {\n    return {\n      type: NOT_SPREADSHEET,\n      reason: \"All rows don't have same number of columns\",\n    };\n  }\n\n  const result = tryParseCells(lines);\n  if (result.type !== VALID_SPREADSHEET) {\n    const transposedResults = tryParseCells(transposeCells(lines));\n    if (transposedResults.type === VALID_SPREADSHEET) {\n      return transposedResults;\n    }\n  }\n  return result;\n};\n\nconst bgColors = getAllColorsSpecificShade(DEFAULT_CHART_COLOR_INDEX);\n\n// Put all the common properties here so when the whole chart is selected\n// the properties dialog shows the correct selected values\nconst commonProps = {\n  fillStyle: \"hachure\",\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontSize: DEFAULT_FONT_SIZE,\n  opacity: 100,\n  roughness: 1,\n  strokeColor: COLOR_PALETTE.black,\n  roundness: null,\n  strokeStyle: \"solid\",\n  strokeWidth: 1,\n  verticalAlign: VERTICAL_ALIGN.MIDDLE,\n  locked: false,\n} as const;\n\nconst getChartDimensions = (spreadsheet: Spreadsheet) => {\n  const chartWidth =\n    (BAR_WIDTH + BAR_GAP) * spreadsheet.values.length + BAR_GAP;\n  const chartHeight = BAR_HEIGHT + BAR_GAP * 2;\n  return { chartWidth, chartHeight };\n};\n\nconst chartXLabels = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n  groupId: string,\n  backgroundColor: string,\n): ChartElements => {\n  return (\n    spreadsheet.labels?.map((label, index) => {\n      return newTextElement({\n        groupIds: [groupId],\n        backgroundColor,\n        ...commonProps,\n        text: label.length > 8 ? `${label.slice(0, 5)}...` : label,\n        x: x + index * (BAR_WIDTH + BAR_GAP) + BAR_GAP * 2,\n        y: y + BAR_GAP / 2,\n        width: BAR_WIDTH,\n        angle: 5.87,\n        fontSize: 16,\n        textAlign: \"center\",\n        verticalAlign: \"top\",\n      });\n    }) || []\n  );\n};\n\nconst chartYLabels = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n  groupId: string,\n  backgroundColor: string,\n): ChartElements => {\n  const minYLabel = newTextElement({\n    groupIds: [groupId],\n    backgroundColor,\n    ...commonProps,\n    x: x - BAR_GAP,\n    y: y - BAR_GAP,\n    text: \"0\",\n    textAlign: \"right\",\n  });\n\n  const maxYLabel = newTextElement({\n    groupIds: [groupId],\n    backgroundColor,\n    ...commonProps,\n    x: x - BAR_GAP,\n    y: y - BAR_HEIGHT - minYLabel.height / 2,\n    text: Math.max(...spreadsheet.values).toLocaleString(),\n    textAlign: \"right\",\n  });\n\n  return [minYLabel, maxYLabel];\n};\n\nconst chartLines = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n  groupId: string,\n  backgroundColor: string,\n): ChartElements => {\n  const { chartWidth, chartHeight } = getChartDimensions(spreadsheet);\n  const xLine = newLinearElement({\n    backgroundColor,\n    groupIds: [groupId],\n    ...commonProps,\n    type: \"line\",\n    x,\n    y,\n    startArrowhead: null,\n    endArrowhead: null,\n    width: chartWidth,\n    points: [\n      [0, 0],\n      [chartWidth, 0],\n    ],\n  });\n\n  const yLine = newLinearElement({\n    backgroundColor,\n    groupIds: [groupId],\n    ...commonProps,\n    type: \"line\",\n    x,\n    y,\n    startArrowhead: null,\n    endArrowhead: null,\n    height: chartHeight,\n    points: [\n      [0, 0],\n      [0, -chartHeight],\n    ],\n  });\n\n  const maxLine = newLinearElement({\n    backgroundColor,\n    groupIds: [groupId],\n    ...commonProps,\n    type: \"line\",\n    x,\n    y: y - BAR_HEIGHT - BAR_GAP,\n    startArrowhead: null,\n    endArrowhead: null,\n    strokeStyle: \"dotted\",\n    width: chartWidth,\n    opacity: GRID_OPACITY,\n    points: [\n      [0, 0],\n      [chartWidth, 0],\n    ],\n  });\n\n  return [xLine, yLine, maxLine];\n};\n\n// For the maths behind it https://excalidraw.com/#json=6320864370884608,O_5xfD-Agh32tytHpRJx1g\nconst chartBaseElements = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n  groupId: string,\n  backgroundColor: string,\n  debug?: boolean,\n): ChartElements => {\n  const { chartWidth, chartHeight } = getChartDimensions(spreadsheet);\n\n  const title = spreadsheet.title\n    ? newTextElement({\n        backgroundColor,\n        groupIds: [groupId],\n        ...commonProps,\n        text: spreadsheet.title,\n        x: x + chartWidth / 2,\n        y: y - BAR_HEIGHT - BAR_GAP * 2 - DEFAULT_FONT_SIZE,\n        roundness: null,\n        textAlign: \"center\",\n      })\n    : null;\n\n  const debugRect = debug\n    ? newElement({\n        backgroundColor,\n        groupIds: [groupId],\n        ...commonProps,\n        type: \"rectangle\",\n        x,\n        y: y - chartHeight,\n        width: chartWidth,\n        height: chartHeight,\n        strokeColor: COLOR_PALETTE.black,\n        fillStyle: \"solid\",\n        opacity: 6,\n      })\n    : null;\n\n  return [\n    ...(debugRect ? [debugRect] : []),\n    ...(title ? [title] : []),\n    ...chartXLabels(spreadsheet, x, y, groupId, backgroundColor),\n    ...chartYLabels(spreadsheet, x, y, groupId, backgroundColor),\n    ...chartLines(spreadsheet, x, y, groupId, backgroundColor),\n  ];\n};\n\nconst chartTypeBar = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n): ChartElements => {\n  const max = Math.max(...spreadsheet.values);\n  const groupId = randomId();\n  const backgroundColor = bgColors[Math.floor(Math.random() * bgColors.length)];\n\n  const bars = spreadsheet.values.map((value, index) => {\n    const barHeight = (value / max) * BAR_HEIGHT;\n    return newElement({\n      backgroundColor,\n      groupIds: [groupId],\n      ...commonProps,\n      type: \"rectangle\",\n      x: x + index * (BAR_WIDTH + BAR_GAP) + BAR_GAP,\n      y: y - barHeight - BAR_GAP,\n      width: BAR_WIDTH,\n      height: barHeight,\n    });\n  });\n\n  return [\n    ...bars,\n    ...chartBaseElements(\n      spreadsheet,\n      x,\n      y,\n      groupId,\n      backgroundColor,\n      process.env.NODE_ENV === ENV.DEVELOPMENT,\n    ),\n  ];\n};\n\nconst chartTypeLine = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n): ChartElements => {\n  const max = Math.max(...spreadsheet.values);\n  const groupId = randomId();\n  const backgroundColor = bgColors[Math.floor(Math.random() * bgColors.length)];\n\n  let index = 0;\n  const points = [];\n  for (const value of spreadsheet.values) {\n    const cx = index * (BAR_WIDTH + BAR_GAP);\n    const cy = -(value / max) * BAR_HEIGHT;\n    points.push([cx, cy]);\n    index++;\n  }\n\n  const maxX = Math.max(...points.map((element) => element[0]));\n  const maxY = Math.max(...points.map((element) => element[1]));\n  const minX = Math.min(...points.map((element) => element[0]));\n  const minY = Math.min(...points.map((element) => element[1]));\n\n  const line = newLinearElement({\n    backgroundColor,\n    groupIds: [groupId],\n    ...commonProps,\n    type: \"line\",\n    x: x + BAR_GAP + BAR_WIDTH / 2,\n    y: y - BAR_GAP,\n    startArrowhead: null,\n    endArrowhead: null,\n    height: maxY - minY,\n    width: maxX - minX,\n    strokeWidth: 2,\n    points: points as any,\n  });\n\n  const dots = spreadsheet.values.map((value, index) => {\n    const cx = index * (BAR_WIDTH + BAR_GAP) + BAR_GAP / 2;\n    const cy = -(value / max) * BAR_HEIGHT + BAR_GAP / 2;\n    return newElement({\n      backgroundColor,\n      groupIds: [groupId],\n      ...commonProps,\n      fillStyle: \"solid\",\n      strokeWidth: 2,\n      type: \"ellipse\",\n      x: x + cx + BAR_WIDTH / 2,\n      y: y + cy - BAR_GAP * 2,\n      width: BAR_GAP,\n      height: BAR_GAP,\n    });\n  });\n\n  const lines = spreadsheet.values.map((value, index) => {\n    const cx = index * (BAR_WIDTH + BAR_GAP) + BAR_GAP / 2;\n    const cy = (value / max) * BAR_HEIGHT + BAR_GAP / 2 + BAR_GAP;\n    return newLinearElement({\n      backgroundColor,\n      groupIds: [groupId],\n      ...commonProps,\n      type: \"line\",\n      x: x + cx + BAR_WIDTH / 2 + BAR_GAP / 2,\n      y: y - cy,\n      startArrowhead: null,\n      endArrowhead: null,\n      height: cy,\n      strokeStyle: \"dotted\",\n      opacity: GRID_OPACITY,\n      points: [\n        [0, 0],\n        [0, cy],\n      ],\n    });\n  });\n\n  return [\n    ...chartBaseElements(\n      spreadsheet,\n      x,\n      y,\n      groupId,\n      backgroundColor,\n      process.env.NODE_ENV === ENV.DEVELOPMENT,\n    ),\n    line,\n    ...lines,\n    ...dots,\n  ];\n};\n\nexport const renderSpreadsheet = (\n  chartType: string,\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n): ChartElements => {\n  if (chartType === \"line\") {\n    return chartTypeLine(spreadsheet, x, y);\n  }\n  return chartTypeBar(spreadsheet, x, y);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}