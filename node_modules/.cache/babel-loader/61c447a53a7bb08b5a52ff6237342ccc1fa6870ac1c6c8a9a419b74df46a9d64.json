{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\excalidraw-cn\\\\src\\\\components\\\\LibraryMenu.tsx\";\nimport React, { useState, useCallback, useMemo, useRef } from \"react\";\nimport { distributeLibraryItemsOnSquareGrid, libraryItemsAtom } from \"../data/library\";\nimport { t } from \"../i18n\";\nimport { randomId } from \"../random\";\nimport LibraryMenuItems from \"./LibraryMenuItems\";\nimport { trackEvent } from \"../analytics\";\nimport { atom, useAtom } from \"jotai\";\nimport { jotaiScope } from \"../jotai\";\nimport Spinner from \"./Spinner\";\nimport { useApp, useAppProps, useExcalidrawElements, useExcalidrawSetAppState } from \"./App\";\nimport { getSelectedElements } from \"../scene\";\nimport { useUIAppState } from \"../context/ui-appState\";\nimport \"./LibraryMenu.scss\";\nimport { LibraryMenuControlButtons } from \"./LibraryMenuControlButtons\";\nimport { isShallowEqual } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const isLibraryMenuOpenAtom = atom(false);\nconst LibraryMenuWrapper = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layer-ui__library\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\nexport const LibraryMenuContent = _ref2 => {\n  let {\n    onInsertLibraryItems,\n    pendingElements,\n    onAddToLibrary,\n    setAppState,\n    libraryReturnUrl,\n    library,\n    id,\n    theme,\n    selectedItems,\n    onSelectItems\n  } = _ref2;\n  const [libraryItemsData] = useAtom(libraryItemsAtom, jotaiScope);\n  const _onAddToLibrary = useCallback(elements => {\n    const addToLibrary = async (processedElements, libraryItems) => {\n      trackEvent(\"element\", \"addToLibrary\", \"ui\");\n      if (processedElements.some(element => element.type === \"image\")) {\n        return setAppState({\n          errorMessage: \"Support for adding images to the library coming soon!\"\n        });\n      }\n      const nextItems = [{\n        status: \"unpublished\",\n        elements: processedElements,\n        id: randomId(),\n        created: Date.now()\n      }, ...libraryItems];\n      onAddToLibrary();\n      library.setLibrary(nextItems).catch(() => {\n        setAppState({\n          errorMessage: t(\"alerts.errorAddingToLibrary\")\n        });\n      });\n    };\n    addToLibrary(elements, libraryItemsData.libraryItems);\n  }, [onAddToLibrary, library, setAppState, libraryItemsData.libraryItems]);\n  const libraryItems = useMemo(() => libraryItemsData.libraryItems, [libraryItemsData]);\n  if (libraryItemsData.status === \"loading\" && !libraryItemsData.isInitialized) {\n    return /*#__PURE__*/_jsxDEV(LibraryMenuWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layer-ui__library-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Spinner, {\n            size: \"2em\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: t(\"labels.libraryLoadingMessage\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n  const showBtn = libraryItemsData.libraryItems.length > 0 || pendingElements.length > 0;\n  return /*#__PURE__*/_jsxDEV(LibraryMenuWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(LibraryMenuItems, {\n      isLoading: libraryItemsData.status === \"loading\",\n      libraryItems: libraryItems,\n      onAddToLibrary: _onAddToLibrary,\n      onInsertLibraryItems: onInsertLibraryItems,\n      pendingElements: pendingElements,\n      id: id,\n      libraryReturnUrl: libraryReturnUrl,\n      theme: theme,\n      onSelectItems: onSelectItems,\n      selectedItems: selectedItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), showBtn && /*#__PURE__*/_jsxDEV(LibraryMenuControlButtons, {\n      className: \"library-menu-control-buttons--at-bottom\",\n      style: {\n        padding: \"16px 12px 0 12px\"\n      },\n      id: id,\n      libraryReturnUrl: libraryReturnUrl,\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\nconst usePendingElementsMemo = (appState, elements) => {\n  const create = () => getSelectedElements(elements, appState, {\n    includeBoundTextElement: true,\n    includeElementsInFrames: true\n  });\n  const val = useRef(create());\n  const prevAppState = useRef(appState);\n  const prevElements = useRef(elements);\n  if (!isShallowEqual(appState.selectedElementIds, prevAppState.current.selectedElementIds) || !isShallowEqual(elements, prevElements.current)) {\n    val.current = create();\n    prevAppState.current = appState;\n    prevElements.current = elements;\n  }\n  return val.current;\n};\n\n/**\n * This component is meant to be rendered inside <Sidebar.Tab/> inside our\n * <DefaultSidebar/> or host apps Sidebar components.\n */\nexport const LibraryMenu = () => {\n  const {\n    library,\n    id,\n    onInsertElements\n  } = useApp();\n  const appProps = useAppProps();\n  const appState = useUIAppState();\n  const setAppState = useExcalidrawSetAppState();\n  const elements = useExcalidrawElements();\n  const [selectedItems, setSelectedItems] = useState([]);\n  const memoizedLibrary = useMemo(() => library, [library]);\n  // BUG: pendingElements are still causing some unnecessary rerenders because clicking into canvas returns some ids even when no element is selected.\n  const pendingElements = usePendingElementsMemo(appState, elements);\n  const onInsertLibraryItems = useCallback(libraryItems => {\n    onInsertElements(distributeLibraryItemsOnSquareGrid(libraryItems));\n  }, [onInsertElements]);\n  const deselectItems = useCallback(() => {\n    setAppState({\n      selectedElementIds: {},\n      selectedGroupIds: {}\n    });\n  }, [setAppState]);\n  return /*#__PURE__*/_jsxDEV(LibraryMenuContent, {\n    pendingElements: pendingElements,\n    onInsertLibraryItems: onInsertLibraryItems,\n    onAddToLibrary: deselectItems,\n    setAppState: setAppState,\n    libraryReturnUrl: appProps.libraryReturnUrl,\n    library: memoizedLibrary,\n    id: id,\n    theme: appState.theme,\n    selectedItems: selectedItems,\n    onSelectItems: setSelectedItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["React","useState","useCallback","useMemo","useRef","distributeLibraryItemsOnSquareGrid","libraryItemsAtom","t","randomId","LibraryMenuItems","trackEvent","atom","useAtom","jotaiScope","Spinner","useApp","useAppProps","useExcalidrawElements","useExcalidrawSetAppState","getSelectedElements","useUIAppState","LibraryMenuControlButtons","isShallowEqual","jsxDEV","_jsxDEV","isLibraryMenuOpenAtom","LibraryMenuWrapper","_ref","children","className","fileName","_jsxFileName","lineNumber","columnNumber","LibraryMenuContent","_ref2","onInsertLibraryItems","pendingElements","onAddToLibrary","setAppState","libraryReturnUrl","library","id","theme","selectedItems","onSelectItems","libraryItemsData","_onAddToLibrary","elements","addToLibrary","processedElements","libraryItems","some","element","type","errorMessage","nextItems","status","created","Date","now","setLibrary","catch","isInitialized","size","showBtn","length","isLoading","style","padding","usePendingElementsMemo","appState","create","includeBoundTextElement","includeElementsInFrames","val","prevAppState","prevElements","selectedElementIds","current","LibraryMenu","onInsertElements","appProps","setSelectedItems","memoizedLibrary","deselectItems","selectedGroupIds"],"sources":["D:/project/excalidraw-cn/src/components/LibraryMenu.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo, useRef } from \"react\";\nimport Library, {\n  distributeLibraryItemsOnSquareGrid,\n  libraryItemsAtom,\n} from \"../data/library\";\nimport { t } from \"../i18n\";\nimport { randomId } from \"../random\";\nimport {\n  LibraryItems,\n  LibraryItem,\n  ExcalidrawProps,\n  UIAppState,\n} from \"../types\";\nimport LibraryMenuItems from \"./LibraryMenuItems\";\nimport { trackEvent } from \"../analytics\";\nimport { atom, useAtom } from \"jotai\";\nimport { jotaiScope } from \"../jotai\";\nimport Spinner from \"./Spinner\";\nimport {\n  useApp,\n  useAppProps,\n  useExcalidrawElements,\n  useExcalidrawSetAppState,\n} from \"./App\";\nimport { getSelectedElements } from \"../scene\";\nimport { useUIAppState } from \"../context/ui-appState\";\n\nimport \"./LibraryMenu.scss\";\nimport { LibraryMenuControlButtons } from \"./LibraryMenuControlButtons\";\nimport { isShallowEqual } from \"../utils\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\n\nexport const isLibraryMenuOpenAtom = atom(false);\n\nconst LibraryMenuWrapper = ({ children }: { children: React.ReactNode }) => {\n  return <div className=\"layer-ui__library\">{children}</div>;\n};\n\nexport const LibraryMenuContent = ({\n  onInsertLibraryItems,\n  pendingElements,\n  onAddToLibrary,\n  setAppState,\n  libraryReturnUrl,\n  library,\n  id,\n  theme,\n  selectedItems,\n  onSelectItems,\n}: {\n  pendingElements: LibraryItem[\"elements\"];\n  onInsertLibraryItems: (libraryItems: LibraryItems) => void;\n  onAddToLibrary: () => void;\n  setAppState: React.Component<any, UIAppState>[\"setState\"];\n  libraryReturnUrl: ExcalidrawProps[\"libraryReturnUrl\"];\n  library: Library;\n  id: string;\n  theme: UIAppState[\"theme\"];\n  selectedItems: LibraryItem[\"id\"][];\n  onSelectItems: (id: LibraryItem[\"id\"][]) => void;\n}) => {\n  const [libraryItemsData] = useAtom(libraryItemsAtom, jotaiScope);\n\n  const _onAddToLibrary = useCallback(\n    (elements: LibraryItem[\"elements\"]) => {\n      const addToLibrary = async (\n        processedElements: LibraryItem[\"elements\"],\n        libraryItems: LibraryItems,\n      ) => {\n        trackEvent(\"element\", \"addToLibrary\", \"ui\");\n        if (processedElements.some((element) => element.type === \"image\")) {\n          return setAppState({\n            errorMessage:\n              \"Support for adding images to the library coming soon!\",\n          });\n        }\n        const nextItems: LibraryItems = [\n          {\n            status: \"unpublished\",\n            elements: processedElements,\n            id: randomId(),\n            created: Date.now(),\n          },\n          ...libraryItems,\n        ];\n        onAddToLibrary();\n        library.setLibrary(nextItems).catch(() => {\n          setAppState({ errorMessage: t(\"alerts.errorAddingToLibrary\") });\n        });\n      };\n      addToLibrary(elements, libraryItemsData.libraryItems);\n    },\n    [onAddToLibrary, library, setAppState, libraryItemsData.libraryItems],\n  );\n\n  const libraryItems = useMemo(\n    () => libraryItemsData.libraryItems,\n    [libraryItemsData],\n  );\n\n  if (\n    libraryItemsData.status === \"loading\" &&\n    !libraryItemsData.isInitialized\n  ) {\n    return (\n      <LibraryMenuWrapper>\n        <div className=\"layer-ui__library-message\">\n          <div>\n            <Spinner size=\"2em\" />\n            <span>{t(\"labels.libraryLoadingMessage\")}</span>\n          </div>\n        </div>\n      </LibraryMenuWrapper>\n    );\n  }\n\n  const showBtn =\n    libraryItemsData.libraryItems.length > 0 || pendingElements.length > 0;\n\n  return (\n    <LibraryMenuWrapper>\n      <LibraryMenuItems\n        isLoading={libraryItemsData.status === \"loading\"}\n        libraryItems={libraryItems}\n        onAddToLibrary={_onAddToLibrary}\n        onInsertLibraryItems={onInsertLibraryItems}\n        pendingElements={pendingElements}\n        id={id}\n        libraryReturnUrl={libraryReturnUrl}\n        theme={theme}\n        onSelectItems={onSelectItems}\n        selectedItems={selectedItems}\n      />\n      {showBtn && (\n        <LibraryMenuControlButtons\n          className=\"library-menu-control-buttons--at-bottom\"\n          style={{ padding: \"16px 12px 0 12px\" }}\n          id={id}\n          libraryReturnUrl={libraryReturnUrl}\n          theme={theme}\n        />\n      )}\n    </LibraryMenuWrapper>\n  );\n};\n\nconst usePendingElementsMemo = (\n  appState: UIAppState,\n  elements: readonly NonDeletedExcalidrawElement[],\n) => {\n  const create = () =>\n    getSelectedElements(elements, appState, {\n      includeBoundTextElement: true,\n      includeElementsInFrames: true,\n    });\n  const val = useRef(create());\n  const prevAppState = useRef<UIAppState>(appState);\n  const prevElements = useRef(elements);\n\n  if (\n    !isShallowEqual(\n      appState.selectedElementIds,\n      prevAppState.current.selectedElementIds,\n    ) ||\n    !isShallowEqual(elements, prevElements.current)\n  ) {\n    val.current = create();\n    prevAppState.current = appState;\n    prevElements.current = elements;\n  }\n  return val.current;\n};\n\n/**\n * This component is meant to be rendered inside <Sidebar.Tab/> inside our\n * <DefaultSidebar/> or host apps Sidebar components.\n */\nexport const LibraryMenu = () => {\n  const { library, id, onInsertElements } = useApp();\n  const appProps = useAppProps();\n  const appState = useUIAppState();\n  const setAppState = useExcalidrawSetAppState();\n  const elements = useExcalidrawElements();\n  const [selectedItems, setSelectedItems] = useState<LibraryItem[\"id\"][]>([]);\n  const memoizedLibrary = useMemo(() => library, [library]);\n  // BUG: pendingElements are still causing some unnecessary rerenders because clicking into canvas returns some ids even when no element is selected.\n  const pendingElements = usePendingElementsMemo(appState, elements);\n\n  const onInsertLibraryItems = useCallback(\n    (libraryItems: LibraryItems) => {\n      onInsertElements(distributeLibraryItemsOnSquareGrid(libraryItems));\n    },\n    [onInsertElements],\n  );\n\n  const deselectItems = useCallback(() => {\n    setAppState({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n    });\n  }, [setAppState]);\n\n  return (\n    <LibraryMenuContent\n      pendingElements={pendingElements}\n      onInsertLibraryItems={onInsertLibraryItems}\n      onAddToLibrary={deselectItems}\n      setAppState={setAppState}\n      libraryReturnUrl={appProps.libraryReturnUrl}\n      library={memoizedLibrary}\n      id={id}\n      theme={appState.theme}\n      selectedItems={selectedItems}\n      onSelectItems={setSelectedItems}\n    />\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACrE,SACEC,kCAAkC,EAClCC,gBAAgB,QACX,iBAAiB;AACxB,SAASC,CAAC,QAAQ,SAAS;AAC3B,SAASC,QAAQ,QAAQ,WAAW;AAOpC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,IAAI,EAAEC,OAAO,QAAQ,OAAO;AACrC,SAASC,UAAU,QAAQ,UAAU;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SACEC,MAAM,EACNC,WAAW,EACXC,qBAAqB,EACrBC,wBAAwB,QACnB,OAAO;AACd,SAASC,mBAAmB,QAAQ,UAAU;AAC9C,SAASC,aAAa,QAAQ,wBAAwB;AAEtD,OAAO,oBAAoB;AAC3B,SAASC,yBAAyB,QAAQ,6BAA6B;AACvE,SAASC,cAAc,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,OAAO,MAAMC,qBAAqB,GAAGd,IAAI,CAAC,KAAK,CAAC;AAEhD,MAAMe,kBAAkB,GAAGC,IAAA,IAAiD;EAAA,IAAhD;IAAEC;EAAwC,CAAC,GAAAD,IAAA;EACrE,oBAAOH,OAAA;IAAKK,SAAS,EAAC,mBAAmB;IAAAD,QAAA,EAAEA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAC5D,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGC,KAAA,IAsB5B;EAAA,IAtB6B;IACjCC,oBAAoB;IACpBC,eAAe;IACfC,cAAc;IACdC,WAAW;IACXC,gBAAgB;IAChBC,OAAO;IACPC,EAAE;IACFC,KAAK;IACLC,aAAa;IACbC;EAYF,CAAC,GAAAV,KAAA;EACC,MAAM,CAACW,gBAAgB,CAAC,GAAGlC,OAAO,CAACN,gBAAgB,EAAEO,UAAU,CAAC;EAEhE,MAAMkC,eAAe,GAAG7C,WAAW,CAChC8C,QAAiC,IAAK;IACrC,MAAMC,YAAY,GAAG,MAAAA,CACnBC,iBAA0C,EAC1CC,YAA0B,KACvB;MACHzC,UAAU,CAAC,SAAS,EAAE,cAAc,EAAE,IAAI,CAAC;MAC3C,IAAIwC,iBAAiB,CAACE,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,KAAK,OAAO,CAAC,EAAE;QACjE,OAAOf,WAAW,CAAC;UACjBgB,YAAY,EACV;QACJ,CAAC,CAAC;MACJ;MACA,MAAMC,SAAuB,GAAG,CAC9B;QACEC,MAAM,EAAE,aAAa;QACrBT,QAAQ,EAAEE,iBAAiB;QAC3BR,EAAE,EAAElC,QAAQ,EAAE;QACdkD,OAAO,EAAEC,IAAI,CAACC,GAAG;MACnB,CAAC,EACD,GAAGT,YAAY,CAChB;MACDb,cAAc,EAAE;MAChBG,OAAO,CAACoB,UAAU,CAACL,SAAS,CAAC,CAACM,KAAK,CAAC,MAAM;QACxCvB,WAAW,CAAC;UAAEgB,YAAY,EAAEhD,CAAC,CAAC,6BAA6B;QAAE,CAAC,CAAC;MACjE,CAAC,CAAC;IACJ,CAAC;IACD0C,YAAY,CAACD,QAAQ,EAAEF,gBAAgB,CAACK,YAAY,CAAC;EACvD,CAAC,EACD,CAACb,cAAc,EAAEG,OAAO,EAAEF,WAAW,EAAEO,gBAAgB,CAACK,YAAY,CAAC,CACtE;EAED,MAAMA,YAAY,GAAGhD,OAAO,CAC1B,MAAM2C,gBAAgB,CAACK,YAAY,EACnC,CAACL,gBAAgB,CAAC,CACnB;EAED,IACEA,gBAAgB,CAACW,MAAM,KAAK,SAAS,IACrC,CAACX,gBAAgB,CAACiB,aAAa,EAC/B;IACA,oBACEvC,OAAA,CAACE,kBAAkB;MAAAE,QAAA,eACjBJ,OAAA;QAAKK,SAAS,EAAC,2BAA2B;QAAAD,QAAA,eACxCJ,OAAA;UAAAI,QAAA,gBACEJ,OAAA,CAACV,OAAO;YAACkD,IAAI,EAAC;UAAK;YAAAlC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eACtBT,OAAA;YAAAI,QAAA,EAAOrB,CAAC,CAAC,8BAA8B;UAAC;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC5C;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACa;EAEzB;EAEA,MAAMgC,OAAO,GACXnB,gBAAgB,CAACK,YAAY,CAACe,MAAM,GAAG,CAAC,IAAI7B,eAAe,CAAC6B,MAAM,GAAG,CAAC;EAExE,oBACE1C,OAAA,CAACE,kBAAkB;IAAAE,QAAA,gBACjBJ,OAAA,CAACf,gBAAgB;MACf0D,SAAS,EAAErB,gBAAgB,CAACW,MAAM,KAAK,SAAU;MACjDN,YAAY,EAAEA,YAAa;MAC3Bb,cAAc,EAAES,eAAgB;MAChCX,oBAAoB,EAAEA,oBAAqB;MAC3CC,eAAe,EAAEA,eAAgB;MACjCK,EAAE,EAAEA,EAAG;MACPF,gBAAgB,EAAEA,gBAAiB;MACnCG,KAAK,EAAEA,KAAM;MACbE,aAAa,EAAEA,aAAc;MAC7BD,aAAa,EAAEA;IAAc;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7B,EACDgC,OAAO,iBACNzC,OAAA,CAACH,yBAAyB;MACxBQ,SAAS,EAAC,yCAAyC;MACnDuC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAmB,CAAE;MACvC3B,EAAE,EAAEA,EAAG;MACPF,gBAAgB,EAAEA,gBAAiB;MACnCG,KAAK,EAAEA;IAAM;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEhB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACkB;AAEzB,CAAC;AAED,MAAMqC,sBAAsB,GAAGA,CAC7BC,QAAoB,EACpBvB,QAAgD,KAC7C;EACH,MAAMwB,MAAM,GAAGA,CAAA,KACbrD,mBAAmB,CAAC6B,QAAQ,EAAEuB,QAAQ,EAAE;IACtCE,uBAAuB,EAAE,IAAI;IAC7BC,uBAAuB,EAAE;EAC3B,CAAC,CAAC;EACJ,MAAMC,GAAG,GAAGvE,MAAM,CAACoE,MAAM,EAAE,CAAC;EAC5B,MAAMI,YAAY,GAAGxE,MAAM,CAAamE,QAAQ,CAAC;EACjD,MAAMM,YAAY,GAAGzE,MAAM,CAAC4C,QAAQ,CAAC;EAErC,IACE,CAAC1B,cAAc,CACbiD,QAAQ,CAACO,kBAAkB,EAC3BF,YAAY,CAACG,OAAO,CAACD,kBAAkB,CACxC,IACD,CAACxD,cAAc,CAAC0B,QAAQ,EAAE6B,YAAY,CAACE,OAAO,CAAC,EAC/C;IACAJ,GAAG,CAACI,OAAO,GAAGP,MAAM,EAAE;IACtBI,YAAY,CAACG,OAAO,GAAGR,QAAQ;IAC/BM,YAAY,CAACE,OAAO,GAAG/B,QAAQ;EACjC;EACA,OAAO2B,GAAG,CAACI,OAAO;AACpB,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAM;IAAEvC,OAAO;IAAEC,EAAE;IAAEuC;EAAiB,CAAC,GAAGlE,MAAM,EAAE;EAClD,MAAMmE,QAAQ,GAAGlE,WAAW,EAAE;EAC9B,MAAMuD,QAAQ,GAAGnD,aAAa,EAAE;EAChC,MAAMmB,WAAW,GAAGrB,wBAAwB,EAAE;EAC9C,MAAM8B,QAAQ,GAAG/B,qBAAqB,EAAE;EACxC,MAAM,CAAC2B,aAAa,EAAEuC,gBAAgB,CAAC,GAAGlF,QAAQ,CAAsB,EAAE,CAAC;EAC3E,MAAMmF,eAAe,GAAGjF,OAAO,CAAC,MAAMsC,OAAO,EAAE,CAACA,OAAO,CAAC,CAAC;EACzD;EACA,MAAMJ,eAAe,GAAGiC,sBAAsB,CAACC,QAAQ,EAAEvB,QAAQ,CAAC;EAElE,MAAMZ,oBAAoB,GAAGlC,WAAW,CACrCiD,YAA0B,IAAK;IAC9B8B,gBAAgB,CAAC5E,kCAAkC,CAAC8C,YAAY,CAAC,CAAC;EACpE,CAAC,EACD,CAAC8B,gBAAgB,CAAC,CACnB;EAED,MAAMI,aAAa,GAAGnF,WAAW,CAAC,MAAM;IACtCqC,WAAW,CAAC;MACVuC,kBAAkB,EAAE,CAAC,CAAC;MACtBQ,gBAAgB,EAAE,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC/C,WAAW,CAAC,CAAC;EAEjB,oBACEf,OAAA,CAACU,kBAAkB;IACjBG,eAAe,EAAEA,eAAgB;IACjCD,oBAAoB,EAAEA,oBAAqB;IAC3CE,cAAc,EAAE+C,aAAc;IAC9B9C,WAAW,EAAEA,WAAY;IACzBC,gBAAgB,EAAE0C,QAAQ,CAAC1C,gBAAiB;IAC5CC,OAAO,EAAE2C,eAAgB;IACzB1C,EAAE,EAAEA,EAAG;IACPC,KAAK,EAAE4B,QAAQ,CAAC5B,KAAM;IACtBC,aAAa,EAAEA,aAAc;IAC7BC,aAAa,EAAEsC;EAAiB;IAAArD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChC;AAEN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}